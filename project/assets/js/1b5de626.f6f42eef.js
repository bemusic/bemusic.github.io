"use strict";(self.webpackChunkbemuse_docs=self.webpackChunkbemuse_docs||[]).push([[835],{2669:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var o=n(8851);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var o=n(7043),r=n(8793),a=(n(8851),n(2669)),i=["components"],p={id:"game-loop",title:"The Game Loop"},c=void 0,l={unversionedId:"game-loop",id:"game-loop",title:"The Game Loop",description:"At each iteration of the game loop, each game component takes turn and",source:"@site/docs/game-loop.md",sourceDirName:".",slug:"/game-loop",permalink:"/project/docs/game-loop",draft:!1,tags:[],version:"current",lastUpdatedBy:"MikuroXina",lastUpdatedAt:1666111211,formattedLastUpdatedAt:"Oct 18, 2022",frontMatter:{id:"game-loop",title:"The Game Loop"},sidebar:"docs",previous:{title:"Architecture",permalink:"/project/docs/architecture"},next:{title:"Skinning",permalink:"/project/docs/skinning"}},s={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"At each iteration of the game loop, each game component takes turn and\nupdate itself. Each game component involved in this game loop should\nhave a ",(0,a.kt)("inlineCode",{parentName:"p"},"update(...)")," method, which takes care of updating itself.\nThis is the only time the component will be mutable.\nOutside of the ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," method, a component should behave like an\nimmutable object. This allows us to have some sense of immutability\nwithout having to create new objects. See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebook/immutable-js/blob/d8d189ae7ea8965fee2ecc7320ebdc55e83eb6a1/README.md#the-case-for-immutability"},"the case for immutability"),"."),(0,a.kt)("p",null,"At each cycle, the following happens:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the Clock is updated to get the high-accuracy time"),(0,a.kt)("li",{parentName:"ul"},"the Timer is updated to get the in-game time"),(0,a.kt)("li",{parentName:"ul"},"the Input is updated to get button presses"),(0,a.kt)("li",{parentName:"ul"},"the State is updated to react to button presses -- judging notes and\nupdating scores"),(0,a.kt)("li",{parentName:"ul"},"the Audio is updated to emit sound based on the updated state"),(0,a.kt)("li",{parentName:"ul"},"the Display is updated to render the game display based on the updated\nstate")))}d.isMDXComponent=!0}}]);
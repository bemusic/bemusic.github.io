"use strict";(self.webpackChunkbemuse_docs=self.webpackChunkbemuse_docs||[]).push([[470],{2669:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(8851);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5689:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=r(7043),a=r(8793),l=(r(8851),r(2669)),o=["components"],i={id:"workflows",title:"Workflows for development, release, and deployment",sidebar_label:"Workflows"},s=void 0,p={unversionedId:"workflows",id:"workflows",title:"Workflows for development, release, and deployment",description:"This page describes the workflow for:",source:"@site/docs/workflows.md",sourceDirName:".",slug:"/workflows",permalink:"/project/docs/workflows",draft:!1,tags:[],version:"current",lastUpdatedBy:"dtinth on MBP M1",lastUpdatedAt:1667671154,formattedLastUpdatedAt:"Nov 5, 2022",frontMatter:{id:"workflows",title:"Workflows for development, release, and deployment",sidebar_label:"Workflows"},sidebar:"docs",previous:{title:"Colors",permalink:"/project/docs/colors"}},c={},u=[{value:"Merging PRs",id:"merging-prs",level:2},{value:"Release a new version",id:"release-a-new-version",level:2},{value:"Deploying to production",id:"deploying-to-production",level:2},{value:"Publishing npm packages",id:"publishing-npm-packages",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This page describes the workflow for:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Merging PRs"),(0,l.kt)("li",{parentName:"ul"},"Releasing new versions")),(0,l.kt)("h2",{id:"merging-prs"},"Merging PRs"),(0,l.kt)("p",null,"We use a semi-automated ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/bemusic/release-train"},"release-train")," script to generate a release candidate."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"For each pull request that is ready to be merged:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'Label the pull requests with "c:ready" label.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Add this to the description:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"### Changelog\n\n(Put the change log here)\n")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/bemusic/release-train/actions/workflows/trigger.yml"},'"Trigger release train"')," workflow in GitHub Actions."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'A new pull request for the release candidate will be generated, combining all the PRs with "c:ready" label into a single PR, along with the change log update.'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"If the release candidate is accepted, then merge the pull request and continue with release. Otherwise, close it."))),(0,l.kt)("h2",{id:"release-a-new-version"},"Release a new version"),(0,l.kt)("p",null,"If any refinement is needed in the CHANGELOG, they can be edited on the ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," branch directly."),(0,l.kt)("p",null,"Once a release candidate is accepted, we should release it to everyone. To promote the latest release candidate to an actual release, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"node build-scripts release\n")),(0,l.kt)("h2",{id:"deploying-to-production"},"Deploying to production"),(0,l.kt)("p",null,"Upon releasing a new version, it will automatically be deployed to production."),(0,l.kt)("h2",{id:"publishing-npm-packages"},"Publishing npm packages"),(0,l.kt)("p",null,"Right now this is done manually using this command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"rush publish --apply --target-branch master --publish --npm-auth-token $NPM_TOKEN\n")))}m.isMDXComponent=!0}}]);
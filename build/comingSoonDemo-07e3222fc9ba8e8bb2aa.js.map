{"version":3,"sources":["file:///home/circleci/bemuse/packages/bms/lib/util/lodash.js","file:///home/circleci/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/src/progress/utils.js","file:///home/circleci/bemuse/packages/bms/lib/index.js","file:///home/circleci/bemuse/src/sampling-master/index.js","file:///home/circleci/bemuse/packages/bms/lib/util/match.js","file:///home/circleci/bemuse/packages/bms/lib/bms/headers.js","file:///home/circleci/bemuse/packages/bms/lib/bms/objects.js","file:///home/circleci/bemuse/packages/bms/lib/time-signatures/index.js","file:///home/circleci/bemuse/src/audio-context/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss?8185","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss","file:///home/circleci/bemuse/src/coming-soon/demo/template.jade","file:///home/circleci/bemuse/packages/bms/lib/reader/index.web.js","file:///home/circleci/bemuse/packages/bms/lib/reader/getReaderOptionsFromFilename.js","file:///home/circleci/bemuse/packages/bms/lib/compiler/index.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/segment.js","file:///home/circleci/bemuse/packages/bms/lib/notes/index.js","file:///home/circleci/bemuse/packages/bms/lib/notes/note.js","file:///home/circleci/bemuse/packages/bms/lib/notes/channels.js","file:///home/circleci/bemuse/packages/bms/lib/timing/index.js","file:///home/circleci/bemuse/packages/bms/lib/song-info/index.js","file:///home/circleci/bemuse/packages/bms/lib/keysounds/index.js","file:///home/circleci/bemuse/packages/bms/lib/positioning/index.js","file:///home/circleci/bemuse/packages/bms/lib/spacing/index.js","file:///home/circleci/bemuse/packages/bms/lib/bms/chart.js","file:///home/circleci/bemuse/src/resources/dnd-resources.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/index.js","file:///home/circleci/bemuse/src/progress/formatters.js"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","lodash_uniq_1","__webpack_require__","uniq","lodash_map_1","map","lodash_values_1","values","lodash_assign_1","assign","readBlob","blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","d","__webpack_exports__","fixed","atomic","wrapPromise","bind","simultaneous","bemuse_progress_formatters__WEBPACK_IMPORTED_MODULE_0__","total","progress","loaded","report","extra","promise","tap","data","byteLength","formatter","BYTES_FORMATTER","f","current","apply","arguments","from","to","watch","target","unsubscribe","queue","update","length","shift","add","push","__importStar","k","hasOwnProperty","call","Reader","Compiler","chart_1","BMSChart","headers_1","BMSHeaders","objects_1","BMSObjects","speedcore_1","Speedcore","time_signatures_1","TimeSignatures","notes_1","Notes","timing_1","Timing","song_info_1","SongInfo","keysounds_1","Keysounds","positioning_1","Positioning","spacing_1","Spacing","FADE_LENGTH","dummyAudioTag","document","createElement","canPlay","canPlayType","SamplingMaster","audioContext","_classCallCheck","_audioContext","defaultAudioContext","_samples","_groups","_instances","Set","_destination","destination","_createClass","key","unmuteAudio","_destroyed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","destroy","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","blobOrArrayBuffer","_this","_coerceToArrayBuffer","then","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","_this2","numberOfChannels","decode","audioBuffer","sample","Sample","options","group","SoundGroup","ArrayBuffer","_this3","decodeAudioData","e","instance","delete","get","samplingMaster","volume","_master","_gain","createGain","gain","connect","disconnect","_buffer","delay","PlayInstance","buffer","_this4","context","source","createBufferSource","onended","stop","node","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","onstop","playbackRate","random","pow","ctx","osc","createOscillator","frequency","resume","console","error","match","text","matched","when","pattern","callback","else","_data","_dataAll","prototype","each","i","name","toLowerCase","getAll","set","_objects","object","channel","test","measure","fraction","all","slice","allSorted","list","sort","a","b","_values","getBeats","measureToBeat","sum","audio_context__WEBPACK_IMPORTED_MODULE_0__","audio_context__WEBPACK_IMPORTED_MODULE_0___default","n","createAudioContext","latencyHint","r","Buffer","main","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","bms__WEBPACK_IMPORTED_MODULE_2__","bemuse_resources_dnd_resources__WEBPACK_IMPORTED_MODULE_3__","bemuse_sampling_master__WEBPACK_IMPORTED_MODULE_4__","co__WEBPACK_IMPORTED_MODULE_5__","co__WEBPACK_IMPORTED_MODULE_5___default","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_6__","_template_jade__WEBPACK_IMPORTED_MODULE_7__","_template_jade__WEBPACK_IMPORTED_MODULE_7___default","element","$","on","handler","el","template","appendTo","find","hide","preventDefault","dndLoader","DndResources","originalEvent","loader","master","$log","$play","$sampler","log","t","loadSamples","notes","chart","samples","promises","completed","_loop2","note","keysound","file","catch","replace","read","loadKeysound","headers","co","regeneratorRuntime","mark","_callee","bmsFile","arraybuffer","timing","info","wrap","_context","prev","fileList","sent","filter","Uint8Array","promisify","readAsync","compile","fromBMSChart","JSON","stringify","show","unmute","_loop","setTimeout","span","play","scrollTop","scrollHeight","addClass","beatToSeconds","beat","go","ui","off","content","module","hmr","transform","insertInto","locals","buf","join","chardet","charset","forceEncoding","detect","Blob","getReaderOptionsFromFilename_1","getReaderOptionsFromFilename","filename","match_1","matchers","bms","if","endif","timeSignature","header","dtx","rng","floor","matcher","format","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","warnings","split","line","trim","forEach","index","eachLine","lineNumber","flow","charAt","m","pop","skipped","timeSignatures","string","items","substr","objects","handleChannelSentence","message","warn","data_structure_1","Segment","x","dx","note_1","invariant_1","ChannelMapping","Note","_notes","count","mapping","CHANNEL_MAPPING","IIDX_P1","BMSNoteBuilder","build","_chart","_mapping","_activeLN","_lastNote","_lnObj","_channelMapping","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","_getBeat","endBeat","column","_getColumn","maybe","11","12","13","14","15","18","19","16","lodash_1","precedence","bpm","initialBPM","actions","state","seconds","segments","inclusive","action","stopBeats","_speedcore","_eventBeats","secondsToBeat","bpmAtBeat","segmentAtX","getEventBeats","parseInt","isNaN","title","artist","genre","subtitles","subartists","difficulty","level","extractSubtitle","_map","id","files","speed","position","previous","factor","unshift","event","_files","out","_arr","_i","item","_arr2","_i2","dataTransfer","Array","readItem","addFile","abrupt","_callee2","entry","_context2","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","_callee3","entries","readMore","results","_i3","_context3","createReader","readEntries","_toConsumableArray","readDirectory","getFilesFromEvent","FileResource","_file","ProgressUtils","URL","createObjectURL","segment_1","_segments","_reached","typeFn","segment","_segmentAt","X","segmentAtT","T","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","bytes__WEBPACK_IMPORTED_MODULE_0__","bytes__WEBPACK_IMPORTED_MODULE_0___default","bytes","toFixed"],"mappings":"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","file":"comingSoonDemo-07e3222fc9ba8e8bb2aa.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A subset of lodash that we actually use.\nvar lodash_uniq_1 = __importDefault(require(\"lodash.uniq\"));\nexports.uniq = lodash_uniq_1.default;\nvar lodash_map_1 = __importDefault(require(\"lodash.map\"));\nexports.map = lodash_map_1.default;\nvar lodash_values_1 = __importDefault(require(\"lodash.values\"));\nexports.values = lodash_values_1.default;\nvar lodash_assign_1 = __importDefault(require(\"lodash.assign\"));\nexports.assign = lodash_assign_1.default;\n//# sourceMappingURL=lodash.js.map","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob (blob) {\n  return {\n    as (type) {\n      return new Promise(function (resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    }\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\nexport function fixed (total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return extra => progress.report(++loaded, total, extra)\n}\n\n// Reports the progress as an atomic operation.\nexport function atomic (progress, promise) {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (data && data.byteLength) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\n\nexport function wrapPromise (progress, f) {\n  let current = 0\n  let total = 0\n  return function () {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind (from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\nexport function simultaneous (target) {\n  let queue = []\n  let current\n  let unsubscribe\n  function update () {\n    if (current) {\n      target.report(current.current, current.total, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress >= 1)) {\n      bind(queue.shift())\n    }\n  }\n  function bind (progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add (progress) {\n      queue.push(progress)\n      update()\n    }\n  }\n}\n","\"use strict\";\n/**\n * Public: The `bms` package is a library for working with rhythm game data.\n *\n * Although this library’s name suggests that it is for BMS file format,\n * almost every part can be used standalone.\n *\n * This package contains:\n *\n * - __Modules that reads and parses BMS files:__\n *\n *   - {Reader} reads the BMS file from a {Buffer}, detects the character set\n *     and decodes the buffer using that character set into a {String}.\n *   - {Compiler} reads the BMS source from a {String}, and converts into\n *     {BMSChart}, an internal representation of a BMS notechart.\n *\n * - __Classes for representing a BMS notechart.__\n *   These module stores the data as close to the BMS file format as possible.\n *\n *   Almost no musical interpretation is made.\n *   For example, a BPM change is simply represented using a\n *   BMSObject with `channel` = `03` or `08`.\n *\n *   - {BMSChart} is composed of {BMSHeaders}, {BMSObjects}, and {TimeSignatures}.\n *   - {BMSHeaders} represents the header sentences in a BMS file.\n *   - {BMSObjects} represents the objects in a BMS file.\n *   - {BMSObject} represents a single object.\n *\n * - __Classes that represent different aspects of a notechart.__\n *   Instance of these classes may be created from a {BMSChart},\n *   but they can be used in a standalone manner as well.\n *\n *   This makes this library very flexible,\n *   and able to accommodate different formats of notechart.\n *   For example, see the [bmson](https: *github.com/bemusic/bmson) package.\n *\n *   It’s also possible to use these classes in context other than music gaming,\n *   for example, you can use these classes to help building a music player\n *   that requires precise synchronization between beats.\n *\n *   - {TimeSignatures} represents a collection of time signatures\n *     in a musical score, and lets you convert the measure number and fraction\n *     into beat number.\n *   - {Timing} represents the timing information in a musical score,\n *     and provides methods to convert between musical time (beats) and\n *     metric time (seconds).\n *   - {SongInfo} represents the basic song information,\n *     such as title, artist, and genre.\n *   - {Notes} represents the sound objects inside your notechart.\n *   - {Keysounds} represents a mapping between keysound ID and filename.\n *   - {Positioning} represents a mapping between beat and in-game position.\n *     Some rhythm game lets chart author control the amount of scrolling\n *     per beat. In StepMania 5, this is called the scroll segments.\n *   - {Spacing} represents a mapping between beat and note spacing.\n *     Some rhythm game lets chart author change the note spacing (HI-SPEED)\n *     dynamically. In StepMania 5, this is called the speed segments.\n *\n * - __Low-level utility classes:__\n *\n *   - {Speedcore} represents a linear animation.\n */\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Reader = __importStar(require(\"./reader\"));\nexports.Reader = Reader;\nvar Compiler = __importStar(require(\"./compiler\"));\nexports.Compiler = Compiler;\nvar chart_1 = require(\"./bms/chart\");\nexports.BMSChart = chart_1.BMSChart;\nvar headers_1 = require(\"./bms/headers\");\nexports.BMSHeaders = headers_1.BMSHeaders;\nvar objects_1 = require(\"./bms/objects\");\nexports.BMSObjects = objects_1.BMSObjects;\nvar speedcore_1 = require(\"./speedcore\");\nexports.Speedcore = speedcore_1.Speedcore;\nvar time_signatures_1 = require(\"./time-signatures\");\nexports.TimeSignatures = time_signatures_1.TimeSignatures;\nvar notes_1 = require(\"./notes\");\nexports.Notes = notes_1.Notes;\nvar timing_1 = require(\"./timing\");\nexports.Timing = timing_1.Timing;\nvar song_info_1 = require(\"./song-info\");\nexports.SongInfo = song_info_1.SongInfo;\nvar keysounds_1 = require(\"./keysounds\");\nexports.Keysounds = keysounds_1.Keysounds;\nvar positioning_1 = require(\"./positioning\");\nexports.Positioning = positioning_1.Positioning;\nvar spacing_1 = require(\"./spacing\");\nexports.Spacing = spacing_1.Spacing;\n//# sourceMappingURL=index.js.map","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n\n// Checks whether an audio format is supported.\nexport function canPlay (type) {\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor (audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute () {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext () {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination () {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy () {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode (blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample (blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group (options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer (blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio (arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess (audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure (e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying (instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying (instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor (samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination () {\n    return this._gain\n  }\n\n  destroy () {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor (samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play (delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy () {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor (samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop () {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad () {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy () {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio (ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction match(text) {\n    var matched = false;\n    return {\n        when: function (pattern, callback) {\n            if (matched)\n                return this;\n            var match = text.match(pattern);\n            if (match) {\n                matched = true;\n                callback(match);\n            }\n            return this;\n        },\n        else: function (callback) {\n            if (matched)\n                return this;\n            callback();\n        }\n    };\n}\nexports.match = match;\n//# sourceMappingURL=match.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A BMSHeader holds the header information in a BMS file, such as\n * `#TITLE`, `#ARTIST`, or `#BPM`.\n *\n * You get retrieve a header using the `get()` method:\n *\n * ```js\n * chart.headers.get('title')\n * ```\n *\n * For some header fields that may contain multiple values, such as `#SUBTITLE`,\n * you can get them all using `getAll()`:\n *\n * ```js\n * chart.headers.getAll()\n * ```\n */\nvar BMSHeaders = /** @class */ (function () {\n    function BMSHeaders() {\n        this._data = {};\n        this._dataAll = {};\n    }\n    /**\n     * Iterates through each header field using a callback function.\n     * @param {(key: string, value: string) => any} callback will be called for each header field\n     */\n    BMSHeaders.prototype.each = function (callback) {\n        for (var i in this._data) {\n            callback(i, this._data[i]);\n        }\n    };\n    /**\n     * Retrieves the header field’s latest value.\n     * @param {string} name field’s name\n     * @return {string | undefined} the field’s latest value\n     */\n    BMSHeaders.prototype.get = function (name) {\n        return this._data[name.toLowerCase()];\n    };\n    /**\n     * Retrieves the header field’s values.\n     * This is useful when a header field is specified multiple times.\n     * @param {string} name field’s name\n     * @return {string[] | undefined}\n     */\n    BMSHeaders.prototype.getAll = function (name) {\n        return this._dataAll[name.toLowerCase()];\n    };\n    /**\n     * Sets the header field’s value.\n     * @param {string} name field’s name\n     * @param {string} value field’s value\n     */\n    BMSHeaders.prototype.set = function (name, value) {\n        var key = name.toLowerCase();\n        this._data[key] = value;\n        (this._dataAll[key] || (this._dataAll[key] = [])).push(value);\n    };\n    return BMSHeaders;\n}());\nexports.BMSHeaders = BMSHeaders;\n//# sourceMappingURL=headers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * BMSObjects holds a collection of objects inside a BMS notechart.\n */\nvar BMSObjects = /** @class */ (function () {\n    function BMSObjects() {\n        /** @type {BMSObject[]} */\n        this._objects = [];\n    }\n    /**\n     * Adds a new object to this collection.\n     * If an object already exists on the same channel and position,\n     * the object is replaced (except for autokeysound tracks).\n     * @param {BMSObject} object the object to add\n     */\n    BMSObjects.prototype.add = function (object) {\n        if (object.channel !== '01') {\n            for (var i = 0; i < this._objects.length; i++) {\n                var test = this._objects[i];\n                if (test.channel === object.channel &&\n                    test.measure === object.measure &&\n                    test.fraction === object.fraction) {\n                    this._objects[i] = object;\n                    return;\n                }\n            }\n        }\n        this._objects.push(object);\n    };\n    /**\n     * Returns an array of all objects.\n     */\n    BMSObjects.prototype.all = function () {\n        return this._objects.slice();\n    };\n    /**\n     * Returns a sorted array of all objects.\n     */\n    BMSObjects.prototype.allSorted = function () {\n        var list = this.all();\n        list.sort(function (a, b) {\n            return a.measure + a.fraction - (b.measure + b.fraction);\n        });\n        return list;\n    };\n    return BMSObjects;\n}());\nexports.BMSObjects = BMSObjects;\n/**\n * @typedef {Object} BMSObject An object inside a {BMSChart}.\n * @property {string} channel the raw two-character BMS channel of this object\n * @property {number} measure the measure number, starting at 0 (corresponds to `#000`)\n * @property {number} fraction the fractional position inside the measure,\n *  ranging from 0 (inclusive) to 1 (exclusive).\n *  0 means that the object is at the start of the measure,\n *  whereas 1 means that the object is at the end of the measure.\n * @property {string} value the raw value of the BMS object.\n */\n//# sourceMappingURL=objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A TimeSignatures is a collection of time signature values\n * index by measure number.\n *\n * The measure number starts from 0.\n * By default, each measure has a measure size of 1\n * (which represents the common 4/4 time signature)\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00102:0.75\n * #00103:1.25\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can access the {TimeSignatures} object:\n *\n * ```js\n * var timeSignatures = bmsChart.timeSignatures\n * ```\n *\n * Note that you can also use the constructor\n * to create a {TimeSignatures} from scratch.\n *\n * One of the most useful use case of this class\n * is to convert the measure and fraction into beat number.\n *\n * ```js\n * timeSignatures.measureToBeat(0, 0.000) // =>  0.0\n * timeSignatures.measureToBeat(0, 0.500) // =>  2.0\n * timeSignatures.measureToBeat(1, 0.000) // =>  4.0\n * timeSignatures.measureToBeat(1, 0.500) // =>  5.5\n * timeSignatures.measureToBeat(2, 0.000) // =>  7.0\n * timeSignatures.measureToBeat(2, 0.500) // =>  9.5\n * timeSignatures.measureToBeat(3, 0.000) // => 12.0\n * ```\n */\nvar TimeSignatures = /** @class */ (function () {\n    function TimeSignatures() {\n        this._values = {};\n    }\n    /**\n     * Sets the size of a specified measure.\n     * @param {number} measure the measure number, starting from 0\n     * @param {number} value the measure size.\n     *  For example, a size of 1.0 represents a common 4/4 time signature,\n     *  whereas a size of 0.75 represents the 3/4 or 6/8 time signature.\n     */\n    TimeSignatures.prototype.set = function (measure, value) {\n        this._values[measure] = value;\n    };\n    /**\n     * Retrieves the size of a specified measure.\n     * @param {number} measure representing the measure number.\n     * @returns {number} the size of the measure.\n     *  By default, a measure has a size of 1.\n     */\n    TimeSignatures.prototype.get = function (measure) {\n        return this._values[measure] || 1;\n    };\n    /**\n     * Retrieves the number of beats in a specified measure.\n     *\n     * Since one beat is equivalent to a quarter note in 4/4 time signature,\n     * this is equivalent to `(timeSignatures.get(measure) * 4)`.\n     * @param {number} measure representing the measure number.\n     * @returns {number} the size of the measure in beats.\n     */\n    TimeSignatures.prototype.getBeats = function (measure) {\n        return this.get(measure) * 4;\n    };\n    /**\n     * Converts a measure number and a fraction inside that measure\n     * into the beat number.\n     *\n     * @param {number} measure the measure number.\n     * @param {number} fraction the fraction of a measure,\n     * @returns the number of beats since measure 0.\n     */\n    TimeSignatures.prototype.measureToBeat = function (measure, fraction) {\n        var sum = 0;\n        for (var i = 0; i < measure; i++)\n            sum += this.getBeats(i);\n        return sum + this.getBeats(measure) * fraction;\n    };\n    return TimeSignatures;\n}());\nexports.TimeSignatures = TimeSignatures;\n//# sourceMappingURL=index.js.map","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction'\n})\n","import './style.scss'\n\nimport $ from 'jquery'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport co from 'co'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main (element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler () {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui () {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nfunction go (loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  co(function * () {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = Buffer.from(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>')\n      .text(JSON.stringify(info, null, 2))\n      .appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function () {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n            .text('[' + note.keysound + '] ')\n            .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function () {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay () {\n    return new Promise(function (resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log (t) {\n    $log.text(t)\n  }\n\n  function loadSamples (notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound (name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\\n\", \"\"]);\n\n// exports\n","var jade = require(\"/home/circleci/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* global FileReader, Blob */\nvar chardet = require('bemuse-chardet/bemuse-chardet');\nfunction read(buffer) {\n    throw new Error('Synchronous read unsupported in browser!');\n}\nexports.read = read;\nfunction readAsync(buffer, options, callback) {\n    if (!callback) {\n        callback = options;\n        options = null;\n    }\n    var charset = (options && options.forceEncoding) || chardet.detect(buffer);\n    var reader = new FileReader();\n    reader.onload = function () {\n        callback(null, reader.result);\n    };\n    reader.onerror = function () {\n        callback(new Error('cannot read it'));\n    };\n    reader.readAsText(new Blob([buffer]), charset);\n}\nexports.readAsync = readAsync;\nvar getReaderOptionsFromFilename_1 = require(\"./getReaderOptionsFromFilename\");\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename_1.getReaderOptionsFromFilename;\n//# sourceMappingURL=index.web.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Given the filename, returns the reader options.\n * @param {string} filename\n */\nfunction getReaderOptionsFromFilename(filename) {\n    var forceEncoding;\n    if (filename.match(/\\.sjis\\.\\w+$/i)) {\n        forceEncoding = 'Shift-JIS';\n    }\n    if (filename.match(/\\.euc_kr\\.\\w+$/i)) {\n        forceEncoding = 'EUC-KR';\n    }\n    if (filename.match(/\\.utf8\\.\\w+$/i)) {\n        forceEncoding = 'UTF-8';\n    }\n    return { forceEncoding: forceEncoding };\n}\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename;\n//# sourceMappingURL=getReaderOptionsFromFilename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Public: A module that takes a string representing the BMS notechart,\n// parses it, and compiles into a {BMSChart}.\n/* module */\nvar match_1 = require(\"../util/match\");\nvar chart_1 = require(\"../bms/chart\");\nvar matchers = {\n    bms: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):(\\S*)$/,\n        header: /^#(\\w+)(?:\\s+(\\S.*))?$/\n    },\n    dtx: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:\\s*(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):\\s*(\\S*)$/,\n        header: /^#(\\w+):(?:\\s+(\\S.*))?$/\n    }\n};\n/**\n * Reads the string representing the BMS notechart, parses it,\n * and compiles into a {BMSChart}.\n * @param {string} text the BMS notechart\n * @param {BMSCompileOptions} options additional parser options\n */\nfunction compile(text, options) {\n    options = options || {};\n    var chart = new chart_1.BMSChart();\n    var rng = options.rng ||\n        function (max) {\n            return 1 + Math.floor(Math.random() * max);\n        };\n    var matcher = matchers[options.format] || matchers.bms;\n    var randomStack = [];\n    var skipStack = [false];\n    var result = {\n        headerSentences: 0,\n        channelSentences: 0,\n        controlSentences: 0,\n        skippedSentences: 0,\n        malformedSentences: 0,\n        /**\n         * The resulting chart\n         */\n        chart: chart,\n        /**\n         * Warnings found during compilation\n         * @type {{lineNumber: number, message: string}[]}\n         */\n        warnings: []\n    };\n    eachLine(text, function (text, lineNumber) {\n        var flow = true;\n        if (text.charAt(0) !== '#')\n            return;\n        match_1.match(text)\n            .when(matcher.random, function (m) {\n            result.controlSentences += 1;\n            randomStack.push(rng(+m[1]));\n        })\n            .when(matcher.if, function (m) {\n            result.controlSentences += 1;\n            skipStack.push(randomStack[randomStack.length - 1] !== +m[1]);\n        })\n            .when(matcher.endif, function (m) {\n            result.controlSentences += 1;\n            skipStack.pop();\n        })\n            .else(function () {\n            flow = false;\n        });\n        if (flow)\n            return;\n        var skipped = skipStack[skipStack.length - 1];\n        match_1.match(text)\n            .when(matcher.timeSignature, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                chart.timeSignatures.set(+m[1], +m[2]);\n        })\n            .when(matcher.channel, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                handleChannelSentence(+m[1], m[2], m[3], lineNumber);\n        })\n            .when(matcher.header, function (m) {\n            result.headerSentences += 1;\n            if (!skipped)\n                chart.headers.set(m[1], m[2]);\n        })\n            .else(function () {\n            warn(lineNumber, 'Invalid command');\n        });\n    });\n    return result;\n    function handleChannelSentence(measure, channel, string, lineNumber) {\n        var items = Math.floor(string.length / 2);\n        if (items === 0)\n            return;\n        for (var i = 0; i < items; i++) {\n            var value = string.substr(i * 2, 2);\n            var fraction = i / items;\n            if (value === '00')\n                continue;\n            chart.objects.add({\n                measure: measure,\n                fraction: fraction,\n                value: value,\n                channel: channel,\n                lineNumber: lineNumber\n            });\n        }\n    }\n    function warn(lineNumber, message) {\n        result.warnings.push({\n            lineNumber: lineNumber,\n            message: message\n        });\n    }\n}\nexports.compile = compile;\nfunction eachLine(text, callback) {\n    text\n        .split(/\\r\\n|\\r|\\n/)\n        .map(function (line) {\n        return line.trim();\n    })\n        .forEach(function (line, index) {\n        callback(line, index + 1);\n    });\n}\n/**\n * @typedef {Object} BMSCompileOptions\n * @property {'bms' | 'dtx'} [format='bms'] File format\n * @property {(max: number): number} [rng] A function that generates a random number.\n *  It is used when processing `#RANDOM n` directive.\n *  This function should return an integer number between 1 and `n`.\n */\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Segment = new data_structure_1.default({\n    t: 'number',\n    x: 'number',\n    dx: 'number'\n});\n//# sourceMappingURL=segment.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar note_1 = require(\"./note\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar ChannelMapping = __importStar(require(\"./channels\"));\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Notes holds the {Note} objects in the game.\n * A note object may or may not be playable.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00111:AA\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Notes} using `fromBMSChart()`:\n *\n * ```js\n * var notes = Notes.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can get all notes using `.all()` method\n *\n * ```js\n * notes.all()\n * ```\n */\nvar Notes = /** @class */ (function () {\n    /**\n     * @param {BMSNote[]} notes An array of Note objects\n     */\n    function Notes(notes) {\n        notes.forEach(note_1.Note);\n        this._notes = notes;\n    }\n    /**\n     * Returns the number of notes in this object,\n     * counting both playable and non-playable notes.\n     */\n    Notes.prototype.count = function () {\n        return this._notes.length;\n    };\n    /**\n     * Returns an Array of all notes.\n     */\n    Notes.prototype.all = function () {\n        return this._notes.slice();\n    };\n    /**\n     * Creates a Notes object from a BMSChart.\n     * @param {BMSChart} chart the chart to process\n     * @param {BMSChartOptions} options options\n     */\n    Notes.fromBMSChart = function (chart, options) {\n        void chart_1.BMSChart;\n        options = options || {};\n        var mapping = options.mapping || Notes.CHANNEL_MAPPING.IIDX_P1;\n        var builder = new BMSNoteBuilder(chart, { mapping: mapping });\n        return builder.build();\n    };\n    return Notes;\n}());\nexports.Notes = Notes;\nNotes.CHANNEL_MAPPING = ChannelMapping;\nvar BMSNoteBuilder = /** @class */ (function () {\n    function BMSNoteBuilder(chart, options) {\n        this._chart = chart;\n        invariant_1.default(options.mapping, 'Expected options.mapping');\n        invariant_1.default(typeof options.mapping === 'object', 'options.mapping must be object');\n        this._mapping = options.mapping;\n    }\n    BMSNoteBuilder.prototype.build = function () {\n        this._notes = [];\n        this._activeLN = {};\n        this._lastNote = {};\n        this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase();\n        this._channelMapping = this._mapping;\n        this._objects = this._chart.objects.allSorted();\n        this._objects.forEach(function (object) {\n            this._handle(object);\n        }.bind(this));\n        return new Notes(this._notes);\n    };\n    BMSNoteBuilder.prototype._handle = function (object) {\n        if (object.channel === '01') {\n            this._handleNormalNote(object);\n        }\n        else {\n            switch (object.channel.charAt(0)) {\n                case '1':\n                case '2':\n                    this._handleNormalNote(object);\n                    break;\n                case '5':\n                case '6':\n                    this._handleLongNote(object);\n                    break;\n            }\n        }\n    };\n    BMSNoteBuilder.prototype._handleNormalNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (object.value.toLowerCase() === this._lnObj) {\n            if (this._lastNote[channel]) {\n                this._lastNote[channel].endBeat = beat;\n            }\n        }\n        else {\n            var note = {\n                beat: beat,\n                endBeat: undefined,\n                keysound: object.value,\n                column: this._getColumn(channel)\n            };\n            this._lastNote[channel] = note;\n            this._notes.push(note);\n        }\n    };\n    BMSNoteBuilder.prototype._handleLongNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (this._activeLN[channel]) {\n            var note = this._activeLN[channel];\n            note.endBeat = beat;\n            this._notes.push(note);\n            delete this._activeLN[channel];\n        }\n        else {\n            this._activeLN[channel] = {\n                beat: beat,\n                keysound: object.value,\n                column: this._getColumn(channel)\n            };\n        }\n    };\n    BMSNoteBuilder.prototype._getBeat = function (object) {\n        return this._chart.measureToBeat(object.measure, object.fraction);\n    };\n    BMSNoteBuilder.prototype._getColumn = function (channel) {\n        return this._channelMapping[channel];\n    };\n    BMSNoteBuilder.prototype._normalizeChannel = function (channel) {\n        return channel.replace(/^5/, '1').replace(/^6/, '2');\n    };\n    return BMSNoteBuilder;\n}());\n/**\n * @typedef {Object} BMSNote A single note in a notechart.\n * @property {number} beat\n * @property {number} [endBeat]\n * @property {string} [column]\n * @property {string} keysound\n */\n/**\n * @typedef {Object} BMSChartOptions\n * @property {{[channel: string]: string}} [mapping]\n *  the mapping from BMS channel to game channel.\n *  Default value is the IIDX_P1 mapping.\n */\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Note = new data_structure_1.default({\n    beat: 'number',\n    endBeat: data_structure_1.default.maybe('number'),\n    column: data_structure_1.default.maybe('string'),\n    keysound: 'string'\n});\n//# sourceMappingURL=note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IIDX_P1 = {\n    '11': '1',\n    '12': '2',\n    '13': '3',\n    '14': '4',\n    '15': '5',\n    '18': '6',\n    '19': '7',\n    '16': 'SC'\n};\n//# sourceMappingURL=channels.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\nvar precedence = { bpm: 1, stop: 2 };\n/**\n * A Timing represents the timing information of a musical score.\n * A Timing object provides facilities to synchronize between\n * metric time (seconds) and musical time (beats).\n *\n * A Timing are created from a series of actions:\n *\n * - BPM changes.\n * - STOP action.\n */\nvar Timing = /** @class */ (function () {\n    /**\n     * Constructs a Timing with an initial BPM and specified actions.\n     *\n     * Generally, you would use `Timing.fromBMSChart` to create an instance\n     * from a BMSChart, but the constructor may also be used in other situations\n     * unrelated to the BMS file format. (e.g. bmson package)\n     * @param {number} initialBPM\n     * @param {TimingAction[]} actions\n     */\n    function Timing(initialBPM, actions) {\n        var state = { bpm: initialBPM, beat: 0, seconds: 0 };\n        var segments = [];\n        segments.push({\n            t: 0,\n            x: 0,\n            dx: state.bpm / 60,\n            bpm: state.bpm,\n            inclusive: true\n        });\n        actions = actions.slice();\n        actions.sort(function (a, b) {\n            return a.beat - b.beat || precedence[a.type] - precedence[b.type];\n        });\n        actions.forEach(function (action) {\n            var beat = action.beat;\n            var seconds = state.seconds + (beat - state.beat) * 60 / state.bpm;\n            switch (action.type) {\n                case 'bpm':\n                    state.bpm = action.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: true\n                    });\n                    break;\n                case 'stop':\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: 0,\n                        bpm: state.bpm,\n                        inclusive: true\n                    });\n                    seconds += (action.stopBeats || 0) * 60 / state.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: false\n                    });\n                    break;\n                default:\n                    throw new Error('Unrecognized segment object!');\n            }\n            state.beat = beat;\n            state.seconds = seconds;\n        });\n        this._speedcore = new speedcore_1.Speedcore(segments);\n        /**\n         * @type {number[]}\n         */\n        this._eventBeats = lodash_1.uniq(lodash_1.map(actions, 'beat'), true);\n    }\n    /**\n     * Convert the given beat into seconds.\n     * @param {number} beat\n     */\n    Timing.prototype.beatToSeconds = function (beat) {\n        return this._speedcore.t(beat);\n    };\n    /**\n     * Convert the given second into beats.\n     * @param {number} seconds\n     */\n    Timing.prototype.secondsToBeat = function (seconds) {\n        return this._speedcore.x(seconds);\n    };\n    /**\n     * Returns the BPM at the specified beat.\n     * @param {number} beat\n     */\n    Timing.prototype.bpmAtBeat = function (beat) {\n        return this._speedcore.segmentAtX(beat).bpm;\n    };\n    /**\n     * Returns an array representing the beats where there are events.\n     */\n    Timing.prototype.getEventBeats = function () {\n        return this._eventBeats;\n    };\n    /**\n     * Creates a Timing instance from a BMSChart.\n     * @param {BMSChart} chart\n     */\n    Timing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var actions = [];\n        chart.objects.all().forEach(function (object) {\n            var bpm;\n            var beat = chart.measureToBeat(object.measure, object.fraction);\n            if (object.channel === '03') {\n                bpm = parseInt(object.value, 16);\n                actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '08') {\n                bpm = +chart.headers.get('bpm' + object.value);\n                if (!isNaN(bpm))\n                    actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '09') {\n                var stopBeats = chart.headers.get('stop' + object.value) / 48;\n                actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats });\n            }\n        });\n        return new Timing(+chart.headers.get('bpm') || 60, actions);\n    };\n    return Timing;\n}());\nexports.Timing = Timing;\n/**\n * @typedef {Object} TimingAction represent timing change\n * @property {'bpm' | 'stop'} type `bpm` for BPM change, and `stop` for stop\n * @property {number} beat where this action occurs\n * @property {number} [bpm] BPM to change to (only for `bpm` type)\n * @property {number} [stopBeats] number of beats to stop (only for `stop` type)\n */\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_1 = require(\"../util/match\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A SongInfo represents the song info, such as title, artist, genre.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #TITLE Exargon [HYPER]\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {SongInfo} using `fromBMSChart()`:\n *\n * ```js\n * var info = SongInfo.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can query the song information by accessing its properties.\n *\n * ```js\n * info.title     // => 'Exargon'\n * info.subtitles // => ['HYPER']\n * ```\n */\nvar SongInfo = /** @class */ (function () {\n    /**\n     * Constructs a SongInfo with given data\n     * @param {{ [propertyName: string]: any }} info the properties to set on this new instance\n     */\n    function SongInfo(info) {\n        /** the song title */\n        this.title = 'NO TITLE';\n        /** the song artist */\n        this.artist = 'NO ARTIST';\n        /** the song genre */\n        this.genre = 'NO GENRE';\n        /**\n         * the song's subtitles, one line per element.\n         * The subtitle may be used to represent the difficulty name,\n         * such as NORMAL, HYPER, ANOTHER.\n         * @type {string[]}\n         */\n        this.subtitles = [];\n        /**\n         * the song's other artists, one artist per element.\n         * @type {string[]}\n         */\n        this.subartists = [];\n        /**\n         * the difficulty.\n         * Meaning of the number is same as BMS's [`#DIFFICULTY`](http:*hitkey.nekokan.dyndns.info/cmds.htm#DIFFICULTY) header.\n         *\n         * | difficulty | meaning  |\n         * | ----------:|:--------:|\n         * |          1 | BEGINNER |\n         * |          2 | NORMAL   |\n         * |          3 | HYPER    |\n         * |          4 | ANOTHER  |\n         * |          5 | INSANE   |\n         */\n        this.difficulty = 0;\n        /**\n         * the level of the song.\n         * When converted from a BMS chart, this is the value of `#PLAYLEVEL` header.\n         */\n        this.level = 0;\n        if (info)\n            lodash_1.assign(this, info);\n    }\n    /**\n     * Constructs a new {SongInfo} object from a {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {SongInfo} from\n     */\n    SongInfo.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var info = {};\n        var title = chart.headers.get('title');\n        var artist = chart.headers.get('artist');\n        var genre = chart.headers.get('genre');\n        var difficulty = +chart.headers.get('difficulty');\n        var level = +chart.headers.get('playlevel');\n        var subtitles = chart.headers.getAll('subtitle');\n        var subartists = chart.headers.getAll('subartist');\n        if (typeof title === 'string' && !subtitles) {\n            var extractSubtitle = function (m) {\n                title = m[1];\n                subtitles = [m[2]];\n            };\n            match_1.match(title)\n                .when(/^(.*\\S)\\s*-(.+?)-$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*<(.+?)>$/, extractSubtitle);\n        }\n        if (title)\n            info.title = title;\n        if (artist)\n            info.artist = artist;\n        if (genre)\n            info.genre = genre;\n        if (subtitles)\n            info.subtitles = subtitles;\n        if (subartists)\n            info.subartists = subartists;\n        if (difficulty)\n            info.difficulty = difficulty;\n        if (level)\n            info.level = level;\n        return new SongInfo(info);\n    };\n    return SongInfo;\n}());\nexports.SongInfo = SongInfo;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Public: A module that exposes {Keysounds}\n/* module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A simple mapping between keysounds ID and the file name.\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #WAVAA cat.wav\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Keysounds} using `fromBMSChart()`:\n *\n * ```js\n * var keysounds = Keysounds.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can retrieve the filename using `.get()`:\n *\n * ```js\n * keysounds.get('aa') // => 'cat.wav'\n * ```\n */\nvar Keysounds = /** @class */ (function () {\n    function Keysounds(map) {\n        /** @type {{[id: string]: string}} */\n        this._map = map;\n    }\n    /**\n     * Returns the keysound file at the specified ID.\n     * @param {string} id the two-character keysound ID\n     * @returns {string | undefined} the sound filename\n     */\n    Keysounds.prototype.get = function (id) {\n        return this._map[id.toLowerCase()];\n    };\n    /**\n     * Returns an array of unique filenames in this Keysounds object.\n     * @returns {string[]} filenames array\n     */\n    Keysounds.prototype.files = function () {\n        return lodash_1.uniq(lodash_1.values(this._map));\n    };\n    /**\n     * Returns a mapping from keysound ID to keysound filename.\n     *\n     * **Warning:** This method returns the internal data structure used\n     * in this Keysounds object. Do not mutate!\n     */\n    Keysounds.prototype.all = function () {\n        return this._map;\n    };\n    /**\n     * Constructs a new {Keysounds} object from a {BMSChart}.\n     * @param {BMSChart} chart\n     */\n    Keysounds.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var map = {};\n        chart.headers.each(function (name, value) {\n            var match = name.match(/^wav(\\S\\S)$/i);\n            if (!match)\n                return;\n            map[match[1].toLowerCase()] = value;\n        });\n        return new Keysounds(map);\n    };\n    return Keysounds;\n}());\nexports.Keysounds = Keysounds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Positioning represents the relation between song beats and\n * display position, and provides a way to convert between them.\n *\n * In some rhythm games, the amount of scrolling per beat may be different.\n * StepMania’s `#SCROLL` segments is an example.\n */\nvar Positioning = /** @class */ (function () {\n    /**\n     * Constructs a Positioning from the given `segments`.\n     * @param {PositioningSegment[]} segments\n     */\n    function Positioning(segments) {\n        this._speedcore = new speedcore_1.Speedcore(segments);\n    }\n    /**\n     * Returns the scrolling speed at specified beat.\n     * @param {number} beat the beat number\n     */\n    Positioning.prototype.speed = function (beat) {\n        return this._speedcore.dx(beat);\n    };\n    /**\n     * Returns the total elapsed scrolling amount at specified beat.\n     * @param {number} beat the beat number\n     */\n    Positioning.prototype.position = function (beat) {\n        return this._speedcore.x(beat);\n    };\n    /**\n     * Creates a {Positioning} object from the {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {Positioning} from\n     */\n    Positioning.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        var x = 0;\n        segments.push({\n            t: 0,\n            x: x,\n            dx: 1,\n            inclusive: true\n        });\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SC') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var dx = +chart.headers.get('scroll' + object.value);\n                if (isNaN(dx))\n                    return;\n                var previous = segments[segments.length - 1];\n                x += (beat - previous.t) * previous.dx;\n                if (beat === 0 && segments.length === 1) {\n                    segments[0].dx = dx;\n                }\n                else {\n                    segments.push({\n                        t: beat,\n                        x: x,\n                        dx: dx,\n                        inclusive: true\n                    });\n                }\n            }\n        });\n        return new Positioning(segments);\n    };\n    return Positioning;\n}());\nexports.Positioning = Positioning;\n/**\n * @typedef PositioningSegment\n * @property {number} t the beat number\n * @property {number} x the total elapsed amount of scrolling at beat `t`\n * @property {number} dx the amount of scrolling per beat\n * @property {boolean} inclusive whether or not to include the\n *  starting beat `t` as part of the segment\n */\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * Public: A Spacing represents the relation between song beats and\n * notes spacing.\n *\n * In some rhythm games, such as Pump It Up!,\n * the speed (note spacing factor) may be adjusted by the notechart.\n * StepMania’s `#SPEED` segments is an example.\n */\nvar Spacing = /** @class */ (function () {\n    /**\n     * Constructs a Spacing from the given `segments`.\n     * @param {SpacingSegment[]} segments\n     */\n    function Spacing(segments) {\n        if (segments.length > 0) {\n            this._speedcore = new speedcore_1.Speedcore(segments);\n        }\n    }\n    /**\n     * Returns the note spacing factor at the specified beat.\n     * @param {*} beat the beat\n     */\n    Spacing.prototype.factor = function (beat) {\n        if (this._speedcore) {\n            return this._speedcore.x(beat);\n        }\n        else {\n            return 1;\n        }\n    };\n    /**\n     * Creates a {Spacing} object from the {BMSChart}.\n     *\n     * ## `#SPEED` and `#xxxSP`\n     *\n     * Speed is defined as keyframes. These keyframes will be linearly interpolated.\n     *\n     * ```\n     * #SPEED01 1.0\n     * #SPEED02 2.0\n     *\n     * #001SP:01010202\n     * ```\n     *\n     * In this example, the note spacing factor will gradually change\n     * from 1.0x at beat 1 to 2.0x at beat 2.\n     *\n     * Returns a {Spacing} object\n     *\n     * @param {BMSChart} chart the chart\n     */\n    Spacing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SP') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var factor = +chart.headers.get('speed' + object.value);\n                if (isNaN(factor))\n                    return;\n                if (segments.length > 0) {\n                    var previous = segments[segments.length - 1];\n                    previous.dx = (factor - previous.x) / (beat - previous.t);\n                }\n                segments.push({\n                    t: beat,\n                    x: factor,\n                    dx: 0,\n                    inclusive: true\n                });\n            }\n        });\n        if (segments.length > 0) {\n            segments.unshift({\n                t: 0,\n                x: segments[0].x,\n                dx: 0,\n                inclusive: true\n            });\n        }\n        return new Spacing(segments);\n    };\n    return Spacing;\n}());\nexports.Spacing = Spacing;\n/**\n * @typedef {Object} SpacingSegment\n * @property {number} t the beat number\n * @property {number} x the spacing at beat `t`\n * @property {number} dx the amount spacing factor change per beat,\n *  in order to create a continuous speed change\n * @property {boolean} inclusive whether or not to include the\n *  starting beat `t` as part of the segment\n */\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar headers_1 = require(\"./headers\");\nvar objects_1 = require(\"./objects\");\nvar time_signatures_1 = require(\"../time-signatures\");\n/**\n * A BMSChart holds information about a particular BMS notechart.\n * Note that a BMSChart does not contain any information about `#RANDOM`,\n * as they are already processed after compilation.\n *\n * There is not many useful things you can do with a BMSChart other than\n * accessing the header fields and objects inside it.\n *\n * To extract information from a BMSChart,\n * please look at the documentation of higher-level classes,\n * such as {Keysounds}, {Notes}, and {Timing}.\n */\nvar BMSChart = /** @class */ (function () {\n    function BMSChart() {\n        /**\n         * {BMSHeaders} representing the BMS-specific headers of this notechart\n         */\n        this.headers = new headers_1.BMSHeaders();\n        /**\n         * {BMSObjects} representing all objects of this notechart\n         */\n        this.objects = new objects_1.BMSObjects();\n        /**\n         * {TimeSignatures} representing the time signature information in this chart\n         */\n        this.timeSignatures = new time_signatures_1.TimeSignatures();\n    }\n    /**\n     * Public: Converts measure number and fraction into beat.\n     * A single beat is equivalent to a quarter note in common time signature.\n     *\n     * @param {number} measure representing the measure number, starting from 0\n     * @param {number} fraction representing the fraction inside that measure, from 0 to 1\n     */\n    BMSChart.prototype.measureToBeat = function (measure, fraction) {\n        return this.timeSignatures.measureToBeat(measure, fraction);\n    };\n    return BMSChart;\n}());\nexports.BMSChart = BMSChart;\n//# sourceMappingURL=chart.js.map","import * as ProgressUtils from 'bemuse/progress/utils'\n\nimport co from 'co'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport class DndResources {\n  constructor (event) {\n    this._files = getFilesFromEvent(event)\n  }\n  file (name) {\n    return this._files.then(function (files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList () {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource {\n  constructor (file) {\n    this._file = file\n  }\n  read (progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl () {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name () {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nfunction getFilesFromEvent (event) {\n  let out = []\n\n  return co(function * () {\n    if (event.dataTransfer.items) {\n      for (let item of Array.from(event.dataTransfer.items)) {\n        yield readItem(item)\n      }\n    } else if (event.dataTransfer.files) {\n      for (let file of Array.from(event.dataTransfer.files)) {\n        addFile(file)\n      }\n    }\n    return out\n  })\n\n  function readItem (item) {\n    return co(function * () {\n      let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n      if (entry) {\n        yield readEntry(entry, '')\n      } else {\n        let file = item.getAsFile && item.getAsFile()\n        addFile(file)\n      }\n    })\n  }\n\n  function readEntry (entry) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile (entry) {\n    return new Promise((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  function readDirectory (dir) {\n    return co(function * () {\n      let entries = []\n      let reader = dir.createReader()\n      let readMore = () =>\n        new Promise((resolve, reject) => {\n          reader.readEntries(resolve, reject)\n        })\n      for (;;) {\n        let results = yield readMore()\n        if (!results || results.length === 0) break\n        entries.push(...Array.from(results))\n      }\n      for (let entry of entries) {\n        yield readEntry(entry)\n      }\n    })\n  }\n\n  function addFile (file) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segment_1 = require(\"./segment\");\n/**\n *\n * Speedcore is a small internally-used library.\n * A Speedcore represents a single dimensional keyframed linear motion\n * (as in equation x = f(t)), and is useful when working\n * with BPM changes ({Timing}), note spacing factor ({Spacing}), or scrolling\n * segments ({Positioning}).\n * A Speedcore is constructed from an array of Segments.\n *\n * A {Segment} is defined as `{ t, x, dx }`, such that:\n *\n * * speedcore.x(segment.t) = segment.x\n * * speedcore.t(segment.x) = segment.t\n * * speedcore.x(segment.t + dt) = segment.x + (segment.dx / dt)\n *\n *\n * ## Explanation\n *\n * One way to think of these segments is to think about tempo changes, where:\n *\n * * `t` is the elapsed time (in seconds) since song start.\n * * `x` is the elapsed beat since song start.\n * * `dx` is the amount of `x` increase per `t`. In this case, it has the\n *   unit of beats per second.\n *\n * For example, consider a song that starts at 140 BPM.\n * 32 beats later, the tempo changes to 160 BPM.\n * 128 beats later (at beat 160), the tempo reverts to 140 BPM.\n *\n * We can derive three segments:\n *\n * 1. At time 0, we are at beat 0, and moving at 2.333 beats per second.\n * 2. At 13.714s, we are at beat 32, moving at 2.667 beats per second.\n * 3. At 61.714s, we are at beat 160, moving at 2.333 beats per second.\n *\n * This maps out to this data structure:\n *\n * ```js\n * [ [0]: { t:  0.000,  x:   0,  dx: 2.333,  inclusive: true },\n *   [1]: { t: 13.714,  x:  32,  dx: 2.667,  inclusive: true },\n *   [2]: { t: 61.714,  x: 160,  dx: 2.333,  inclusive: true } ]\n * ```\n *\n * With this data, it is possible to find out the value of `x` at any given `t`.\n *\n * For example, to answer the question, “what is the beat number at 30s?”\n * First, we find the segment with maximum value of `t < 30`, and we get\n * the segment `[1]`.\n *\n * We calculate `segment.x + (t - segment.t) * segment.dx`.\n * The result beat number is (32 + (30 - 13.714) * 2.667) = 75.435.\n *\n * We can also perform the reverse calculation in a similar way, by reversing\n * the equation.\n *\n * Interestingly, we can use these segments to represent the effect of\n * both BPM changes and STOP segments in the same array.\n * For example, a 150-BPM song with a 2-beat stop in the 32nd beat\n * can be represented like this:\n *\n * ```js\n * [ [0]: { t:  0.0,  x:  0,  dx: 2.5,  inclusive: true  },\n *   [1]: { t: 12.8,  x: 32,  dx: 0,    inclusive: true  },\n *   [2]: { t: 13.6,  x: 32,  dx: 2.5,  inclusive: false } ]\n * ```\n */\nvar Speedcore = /** @class */ (function () {\n    /**\n     * Constructs a new `Speedcore` from given segments.\n     * @param {SpeedSegment[]} segments\n     */\n    function Speedcore(segments) {\n        this._segments = segments.map(segment_1.Segment);\n    }\n    Speedcore.prototype._reached = function (index, typeFn, position) {\n        if (index >= this._segments.length)\n            return false;\n        var segment = this._segments[index];\n        var target = typeFn(segment);\n        return segment.inclusive ? position >= target : position > target;\n    };\n    Speedcore.prototype._segmentAt = function (typeFn, position) {\n        for (var i = 0; i < this._segments.length; i++) {\n            if (!this._reached(i + 1, typeFn, position))\n                return this._segments[i];\n        }\n    };\n    Speedcore.prototype.segmentAtX = function (x) {\n        return this._segmentAt(X, x);\n    };\n    Speedcore.prototype.segmentAtT = function (t) {\n        return this._segmentAt(T, t);\n    };\n    /**\n     * Calculates the _t_, given _x_.\n     * @param {number} x\n     */\n    Speedcore.prototype.t = function (x) {\n        var segment = this.segmentAtX(x);\n        return segment.t + (x - segment.x) / (segment.dx || 1);\n    };\n    /**\n     * Calculates the _x_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.x = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.x + (t - segment.t) * segment.dx;\n    };\n    /**\n     * Finds the _dx_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.dx = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.dx;\n    };\n    return Speedcore;\n}());\nexports.Speedcore = Speedcore;\nvar T = function (segment) {\n    return segment.t;\n};\nvar X = function (segment) {\n    return segment.x;\n};\n/**\n * @typedef {Object} SpeedSegment\n * @property {number} t\n * @property {number} x\n * @property {number} dx the amount of change in x per t\n * @property {boolean} inclusive whether or not the segment includes the t\n */\n//# sourceMappingURL=index.js.map","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => (progress.current / progress.total * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n"],"sourceRoot":""}
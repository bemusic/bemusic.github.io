{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/src/progress/utils.ts","file:///home/circleci/bemuse/bemuse/src/utils/main-element.js","file:///home/circleci/bemuse/bemuse/src/music-previewer/default.ogg","file:///home/circleci/bemuse/bemuse/src/music-previewer/go.ogg","file:///home/circleci/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/circleci/bemuse/bemuse/src/resources/url.ts","file:///home/circleci/bemuse/bemuse/src/utils/download.js","file:///home/circleci/bemuse/bemuse/src/progress/index.ts","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/MusicTable.js","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/circleci/bemuse/bemuse/src/progress/Progress.ts","file:///home/circleci/bemuse/bemuse/src/utils/observable.ts","file:///home/circleci/bemuse/bemuse/src/utils/callbacks.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/circleci/bemuse/bemuse/src/music-collection/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/circleci/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/circleci/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/circleci/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/circleci/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/circleci/bemuse/bemuse/src/music-previewer/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/circleci/bemuse/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/bemuse/src/utils/read-blob.js"],"names":["fixed","total","progress","loaded","report","extra","atomic","promise","Promise","resolve","tap","data","byteLength","hasByteLength","formatter","wrapPromise","f","current","args","apply","this","bind","from","to","watch","simultaneous","target","queue","unsubscribe","update","length","shift","add","push","document","querySelector","module","exports","MusicSelectPreviewer","Component","componentDidMount","props","url","addEventListener","handleMessage","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","render","type","propTypes","string","async","getPreviewResourceUrl","song","serverUrl","tutorial","baseResources","file","preview_url","resolveUrl","URLResource","constructor","read","as","name","URLResources","base","path","split","map","part","encodeURIComponent","join","URL","href","getRetryDelay","Math","random","shouldGiveUp","i","reject","xh","XMLHttpRequest","open","responseType","onload","status","response","Error","onerror","onprogress","e","send","error","console","waitMs","setTimeout","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","reverse","sortBy","getAdded","initial","renderSongWarnings","problems","message","keys","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","getPlayableCharts","info","subtitles","validateSong","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","super","state","sort","initialSort","Object","previewUrl","previewEnabled","renderTable","borderSpacing","colSpan","renderSorter","renderPreview","renderRows","out","onClick","setState","button","s","categories","category","id","prompt","color","textAlign","genre","log","alert","inspect","artist","renderMessage","text","object","query","server","then","result","catch","preprocessCollection","main","Progress","undefined","_observable","notify","toString","value","_callbacks","_value","call","init","_nextId","callbacks","callback","OFFICIAL_SERVER_URL","load","fetch","global","indexUrl","getServerIndexFileUrl","json","Array","isArray","dir","replace","endsWith","orderBy","difficulty","level","chart_names","min","bpm","toLowerCase","BemusePackageFileResource","resources","ref","getBlob","blob","createObjectURL","Ref","spec","_basePromise","_promise","loadPayload","getPayload","slice","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","once","_base","_metadataFilename","Blob","JSON","parse","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","fallback","_fallback","_fallbackPattern","fallbackPattern","metadataFilename","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","getHashFunction","today","Date","now","toISOString","memoize","md5","digest","enabled","ids","Set","sorted","custom","isSongOfTheDay","has","grouping","criteria","context","songOfTheDay","songOfTheDayEnabled","groups","group","input","output","resolveRelativeResources","includes","parts","dirName","DirectoryResources","filename","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","createElement","src","volume","backgroundFader","createFader","pause","fadeTo","destroy","playing","play","stop","playAudio","warn","createInstance","songUrl","audio","played","fader","onended","enable","disable","go","currentTime","preview","createMusicPreviewer","element","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","max","currentVolume","requestAnimationFrame","speed","getSongResources","assetResources","bemusepackUrl","assetsBase","wrapAssetResources","bemusepack_url","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","reader","FileReader","readAsArrayBuffer","readAsText"],"mappings":"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","file":"build/music-82d461165c6b5b2f7a9a.js","sourcesContent":["import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap((data) => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  let queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","export default document.querySelector('#scene-root')\n","module.exports = __webpack_public_path__ + \"build/354b30433269481d2f132496a0d13f64.ogg\";","module.exports = __webpack_public_path__ + \"build/38fbcad5f2b14ca6ffc359446f7ec455.ogg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as MusicPreviewer from './'\n\nMusicPreviewer.preload()\n\nexport default class MusicSelectPreviewer extends React.Component {\n  static propTypes = {\n    url: PropTypes.string,\n  }\n  componentDidMount() {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(this.props.url)\n    addEventListener('message', this.handleMessage)\n  }\n  componentWillUnmount() {\n    MusicPreviewer.disable()\n    removeEventListener('message', this.handleMessage)\n  }\n  componentWillReceiveProps(nextProps) {\n    MusicPreviewer.preview(nextProps.url)\n  }\n  render() {\n    return null\n  }\n  handleMessage({ data }) {\n    if (data.type === 'calibration-started') {\n      MusicPreviewer.disable()\n    } else if (data.type === 'calibration-closed') {\n      MusicPreviewer.enable()\n    }\n  }\n}\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await new Promise((resolve) => setTimeout(resolve, waitMs))\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          var xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\n\nconst sorters = {\n  ingame: (songs) => groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\nfunction validateSong(song) {\n  const problems = []\n  const report = (message, ...keys) => problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nfunction renderSongWarnings(song) {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport class MusicTable extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    url: PropTypes.string,\n    initialSort: PropTypes.string,\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      sort: this.props.initialSort || Object.keys(sorters)[0],\n      previewUrl: null,\n      previewEnabled: false,\n    }\n  }\n  renderTable() {\n    return (\n      <table style={{ borderSpacing: 4 }}>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              {this.renderSorter()}\n              {' · '}\n              {this.renderPreview()}\n            </th>\n          </tr>\n          <tr>\n            <th>id</th>\n            <th>song</th>\n            <th>warnings</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    )\n  }\n  renderSorter() {\n    const out = []\n    for (const key of Object.keys(sorters)) {\n      out.push(\n        <button\n          key={key}\n          onClick={() => {\n            this.setState({ sort: key })\n          }}\n        >\n          {key}\n        </button>\n      )\n    }\n    return (\n      <span>\n        <strong>Sort by:</strong> {out}\n      </span>\n    )\n  }\n  renderPreview() {\n    const button = (\n      <button\n        onClick={() => {\n          this.setState((s) => ({ previewEnabled: !s.previewEnabled }))\n        }}\n      >\n        {this.state.previewEnabled ? 'disable' : 'enable'}\n      </button>\n    )\n    return (\n      <span>\n        <strong>Music preview:</strong> {button}\n        {this.state.previewEnabled && (\n          <MusicSelectPreviewer url={this.state.previewUrl} />\n        )}\n      </span>\n    )\n  }\n  renderRows() {\n    const categories = sorters[this.state.sort](this.props.data.songs)\n    const out = []\n    for (const category of categories) {\n      out.push(\n        <tr key={category.title}>\n          <th colSpan={4}>{category.title}</th>\n        </tr>\n      )\n      for (const song of category.songs) {\n        out.push(\n          <tr key={song.id}>\n            <td>\n              <strong\n                onClick={() => {\n                  prompt('', `vim '${song.id}/README.md'`)\n                }}\n              >\n                <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n              </strong>\n              <br />\n              <span style={{ color: '#8b8685' }}>{song.added}</span>\n            </td>\n            <td style={{ textAlign: 'center', background: '#353433' }}>\n              <span\n                style={{ color: '#8b8685' }}\n                onClick={async () => {\n                  const previewUrl = await getPreviewResourceUrl(\n                    song,\n                    this.props.url\n                  )\n                  this.setState({ previewUrl })\n                }}\n              >\n                {song.genre}\n              </span>\n              <br />\n              <strong\n                onClick={() => {\n                  console.log(song)\n                  alert(require('util').inspect(song))\n                }}\n              >\n                {song.title}\n              </strong>\n              <br />\n              {song.artist}\n            </td>\n            <td>{renderSongWarnings(song)}</td>\n          </tr>\n        )\n      }\n    }\n    return out\n  }\n  renderMessage(text) {\n    return <div style={{ textAlign: 'center' }}>{text}</div>\n  }\n  render() {\n    if (!this.props.data) return this.renderMessage('No data')\n    try {\n      return this.renderTable()\n    } catch (e) {\n      return this.renderMessage(`Error: ${e}`)\n    }\n  }\n}\n\nexport default MusicTable\n","import React from 'react'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\nimport { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\n\nimport MusicTable from './MusicTable'\n\nexport class CollectionViewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: query.server || OFFICIAL_SERVER_URL,\n      status: 'Loading',\n    }\n  }\n  componentDidMount() {\n    load(this.state.url)\n      .then((result) => {\n        this.setState({ status: 'Load completed', data: result })\n      })\n      .catch((e) => {\n        this.setState({ status: 'Load error: ' + e })\n      })\n  }\n  render() {\n    return (\n      <div>\n        <header style={{ textAlign: 'center' }}>\n          <h1>Bemuse collection viewer</h1>\n          <div>\n            {this.state.url}\n            <br />\n            {this.state.status}\n          </div>\n        </header>\n        <div style={{ padding: 20 }}>\n          <MusicTable\n            data={this.state.data && preprocessCollection(this.state.data)}\n            url={this.state.url}\n            initialSort={query.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n  get value() {\n    return this._value\n  }\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (var i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    var callbacks = this._callbacks\n    for (var id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    var id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import u from 'updeep'\n\nexport const preprocessCollection = u({\n  songs: u.map(preprocessSong),\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = u(\n      {\n        charts: u.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return u(\n            {\n              info: {\n                subtitles: (subtitles) => [...subtitles, name],\n              },\n            },\n            chart\n          )\n        }),\n      },\n      song\n    )\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    let simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    let nextProgress = () => {\n      let progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    let files = new Map<string, BemusePackFileEntry>()\n    for (let file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    let file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  let array = new Uint8Array(buffer)\n  let length = array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  let groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (let song of songs) {\n    for (let { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (let { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction playAudio(element) {\n  return new Promise((resolve) => {\n    resolve(element.play())\n  })\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        playAudio(background).catch(() =>\n          console.warn('Cannot play background music')\n        )\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      playAudio(goSound).catch(() => console.warn('Cannot play go sound.'))\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          playAudio(audio)\n            .then(() => {\n              played = true\n            })\n            .catch(() => console.warn('Cannot play', audio.src))\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import bytes from 'bytes'\n\nlet wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n"],"sourceRoot":""}
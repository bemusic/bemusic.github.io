{"version":3,"sources":["file:///home/circleci/bemuse/src/scintillator/expression/index.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/animation.js","file:///home/circleci/bemuse/src/scintillator/expression/parser.pegjs","file:///home/circleci/bemuse/src/scintillator/context.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/base.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/instance.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/display-object.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/utils.js","file:///home/circleci/bemuse/src/scintillator/nodes/group.js","file:///home/circleci/bemuse/src/scintillator/nodes/if.js","file:///home/circleci/bemuse/src/scintillator/nodes/object.js","file:///home/circleci/bemuse/src/scintillator/nodes/skin-root.js","file:///home/circleci/bemuse/src/scintillator/nodes/sprite.js","file:///home/circleci/bemuse/src/scintillator/nodes/text.js","file:///home/circleci/bemuse/src/scintillator/compiler.js","file:///home/circleci/bemuse/src/scintillator/resources.js","file:///home/circleci/bemuse/src/scintillator/loader.js","file:///home/circleci/bemuse/src/scintillator/index.js"],"names":["debug__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","debug__WEBPACK_IMPORTED_MODULE_0___default","n","_parser_pegjs__WEBPACK_IMPORTED_MODULE_1__","_parser_pegjs__WEBPACK_IMPORTED_MODULE_1___default","log","debug","createFunction","code","fn","eval","displayName","constant","test","Expression","text","parser","parse","evaluate","f","data","key","createKeytime","def","Object","assign","keytime","Animation","animations","timeKey","_classCallCheck","this","_timeKey","_properties","_","map","animation","flatten","thru","array","Set","value","_animations","_events","uniq","_createClass","name","fallback","_this","has","values","_getAnimation","hasOwnProperty","event","filter","e","maxBy","t","a","on","apply","concat","_toConsumableArray","compiler","$el","animationElements","Array","from","children","el","_compile","$","attr","keyframes","_attrs","attrs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","keyframe","time","ease","isNaN","Error","_createKeyframes","push","err","return","attributes","toLowerCase","fromPairs","peg$SyntaxError","message","expected","found","location","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","i","escapedParts","parts","length","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","j","descriptions","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","expr","peg$parseexpr","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","first","rest","operate","combine","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","val","peg$c23","peg$otherExpectation","peg$c24","peg$c25","peg$c26","peg$classExpectation","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","JSON","stringify","peg$c40","peg$c41","peg$c42","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","peg$buildStructuredError","peg$parselogical_or","s0","s1","s2","s3","s4","s5","s6","s7","peg$parselogical_and","peg$parse_","substr","peg$parseadd","peg$parsemul","peg$parseval","charAt","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsenumber","peg$parseidentifier","item","createRenderer","w","h","PIXI","canUseNewCanvasBlendModes","transparent","Context","skin","refs","_skin","_instance","instantiate","_renderer","width","height","stage","object","view","skinData","_setupInteractivity","render","destroy","_teardownInteractivity","add","set","delete","mouse","touches","onMouse","onUpdateMouse","onNoMouse","onTouch","call","point","id","rect","x","clientX","left","y","clientY","top","addEventListener","removeEventListener","_input","get","output","getBoundingClientRect","touch","identifier","SkinNode","base_classCallCheck","base_createClass","node","compile","Instance","instance_classCallCheck","_context","context","_object","_children","_bindings","_concerns","onData","Callbacks","onDestroy","bindings","binding","bind","concerns","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","concern","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onCreate","attachTo","instance_createClass","_len","arguments","pipeline","_key","sideEffect","v","onChange","pop","_parent","addChild","removeChild","detach","properties","default","obj","scale","alpha","visible","DisplayObject","_SkinNode","display_object_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","display_object_createClass","_animation","_i","property","expression","getter","prop","blendMode","NORMAL","SCREEN","parseBlendMode","ref","subject","unref","parseFrame","m","match","Mask","frame","group_classCallCheck","_frame","group_createClass","mask","beginFill","drawShape","endFill","GroupNode","group_possibleConstructorReturn","group_getPrototypeOf","group_inherits","compileChildren","display","maskFrame","container","IfNode","if_classCallCheck","if_possibleConstructorReturn","if_getPrototypeOf","if_inherits","if_createClass","String","childNode","ChildManager","poolSize","instances","Map","pool","instance","initPool","unused","keys","createInstance","update","ObjectNode","object_classCallCheck","object_possibleConstructorReturn","object_getPrototypeOf","object_inherits","object_createClass","batch","ParticleContainer","position","manager","SkinRootNode","skin_root_classCallCheck","skin_root_possibleConstructorReturn","skin_root_getPrototypeOf","skin_root_inherits","skin_root_createClass","SpriteNode","sprite_classCallCheck","sprite_possibleConstructorReturn","sprite_getPrototypeOf","sprite_inherits","sprite_createClass","url","resources","anchorX","anchorY","sprite","getTexture","anchor","_texture","scaleMode","NEAREST","base","fromImage","texture","TextNode","text_classCallCheck","text_possibleConstructorReturn","text_getPrototypeOf","text_inherits","text_createClass","font","ttf","fill","align","BitmapText","updateText","NODES","group","if","Compiler","env","compiler_classCallCheck","_defs","nodeName","Node","getNodeClass","_arr","compileDefs","getDef","getAttribute","_arr2","_i2","Resources","resources_classCallCheck","_map","resources_createClass","src","load","xmlPath","progress","co","regeneratorRuntime","mark","_callee","$xml","paths","element","_element","path","assetUrl","wrap","prev","loadXml","sent","find","resolve","t0","finish","loadResources","abrupt","stop","xmlUrl","Promise","ajax","dataType","then","xml","documentElement","urls","loader","Loader","once","formatter","PERCENTAGE_FORMATTER","report","getSkinUrl","displayMode","window","innerWidth","innerHeight","d","__webpack_exports__"],"mappings":"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","file":"gameEngine-60023160463e50197a16.js","sourcesContent":["import debug from 'debug'\n\nimport parser from './parser.pegjs'\n\nconst log = debug('scintillator:expression')\n\nfunction createFunction (code) {\n  let fn = eval('(function(get) { return ' + code + ' })') // eslint-disable-line no-eval\n  fn.displayName = '(' + code + ')'\n  fn.constant = !!/^[-0-9.]+$/.test(code)\n  return fn\n}\n\nexport function Expression (text) {\n  log('parsing %s', text)\n  let code = parser.parse(text)\n  log('parsed %s => %s', text, code)\n  let f = createFunction(code)\n  let evaluate\n  if (f.constant) {\n    evaluate = f\n  } else {\n    evaluate = function (data) {\n      return f(function (key) {\n        return data[key]\n      })\n    }\n  }\n  evaluate.constant = f.constant\n  return evaluate\n}\n\nexport default Expression\n","import _ from 'lodash'\nimport $ from 'jquery'\nimport keytime from 'keytime'\n\nlet createKeytime = def => Object.assign({}, def, { data: keytime(def.data) })\n\nexport class Animation {\n  constructor (animations, timeKey) {\n    this._timeKey = timeKey || 't'\n    this._properties = _(animations)\n      .map(animation => _.map(animation.data, 'name'))\n      .flatten()\n      .thru(array => new Set(array))\n      .value()\n    this._animations = _.map(animations, createKeytime)\n    this._events = _.uniq(_.map(animations, 'on'))\n  }\n  prop (name, fallback) {\n    if (!this._properties.has(name)) {\n      return fallback\n    }\n    return data => {\n      let values = this._getAnimation(data)\n      if (values.hasOwnProperty(name)) {\n        return values[name]\n      } else {\n        return fallback(data)\n      }\n    }\n  }\n  _getAnimation (data) {\n    let event = _(this._events)\n      .filter(e => e === '' || e in data)\n      .maxBy(e => data[e] || 0)\n    let t = data[this._timeKey] - (data[event] || 0)\n    let animations = this._animations.filter(a => a.on === event)\n    let values = animations.map(a => a.data.values(t))\n    return Object.assign({}, ...values)\n  }\n  static compile (compiler, $el) {\n    let animationElements = Array.from($el.children('animation'))\n    let animations = _.map(animationElements, el => _compile($(el)))\n    let timeKey = $el.attr('t') || 't'\n    return new Animation(animations, timeKey)\n  }\n}\n\nexport function _compile ($el) {\n  let keyframes = _.map(Array.from($el.children('keyframe')), _attrs)\n  let attrs = {}\n  for (let keyframe of keyframes) {\n    let time = +keyframe.t\n    let ease = keyframe.ease || 'linear'\n    if (isNaN(time)) throw new Error('Expected keyframe to have \"t\" attribute')\n    for (let key in keyframe) {\n      if (key === 't' || key === 'ease') continue\n      let value = +keyframe[key]\n      let attr = attrs[key] || (attrs[key] = _createKeyframes(key))\n      attr.keyframes.push({ time, value, ease })\n    }\n  }\n  return {\n    on: $el.attr('on') || '',\n    data: _.values(attrs)\n  }\n}\n\nfunction _createKeyframes (name) {\n  return { name, keyframes: [] }\n}\n\nexport function _attrs (el) {\n  return _(el.attributes)\n    .map(n => [n.name.toLowerCase(), n.value])\n    .fromPairs()\n    .value()\n}\n\nexport default Animation\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { expr: peg$parseexpr },\n      peg$startRuleFunction  = peg$parseexpr,\n\n      peg$c0 = \"||\",\n      peg$c1 = peg$literalExpectation(\"||\", false),\n      peg$c2 = function(first, rest) {\n            return combine(first, rest);\n          },\n      peg$c3 = \"&&\",\n      peg$c4 = peg$literalExpectation(\"&&\", false),\n      peg$c5 = \"+\",\n      peg$c6 = peg$literalExpectation(\"+\", false),\n      peg$c7 = \"-\",\n      peg$c8 = peg$literalExpectation(\"-\", false),\n      peg$c9 = \"*\",\n      peg$c10 = peg$literalExpectation(\"*\", false),\n      peg$c11 = \"/\",\n      peg$c12 = peg$literalExpectation(\"/\", false),\n      peg$c13 = \"%\",\n      peg$c14 = peg$literalExpectation(\"%\", false),\n      peg$c15 = \"(\",\n      peg$c16 = peg$literalExpectation(\"(\", false),\n      peg$c17 = \")\",\n      peg$c18 = peg$literalExpectation(\")\", false),\n      peg$c19 = function(expr) { return \"(\" + expr + \")\"; },\n      peg$c20 = \"!\",\n      peg$c21 = peg$literalExpectation(\"!\", false),\n      peg$c22 = function(val) { return \"!\" + val },\n      peg$c23 = peg$otherExpectation(\"number\"),\n      peg$c24 = function() { return text(); },\n      peg$c25 = /^[eE]/,\n      peg$c26 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c27 = /^[0-9]/,\n      peg$c28 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c29 = \".\",\n      peg$c30 = peg$literalExpectation(\".\", false),\n      peg$c31 = \"0\",\n      peg$c32 = peg$literalExpectation(\"0\", false),\n      peg$c33 = /^[1-9]/,\n      peg$c34 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c35 = /^[a-zA-Z]/,\n      peg$c36 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c37 = /^[a-zA-Z0-9_]/,\n      peg$c38 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c39 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n      peg$c40 = peg$otherExpectation(\"whitespace\"),\n      peg$c41 = /^[ \\t\\n\\r]/,\n      peg$c42 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseexpr() {\n    var s0;\n\n    s0 = peg$parselogical_or();\n\n    return s0;\n  }\n\n  function peg$parselogical_or() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parselogical_and();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c0) {\n          s5 = peg$c0;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parselogical_and();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c0) {\n            s5 = peg$c0;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parselogical_and();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselogical_and() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseadd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c3) {\n          s5 = peg$c3;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseadd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s5 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseadd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseadd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemul();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsemul();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemul();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemul() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseval();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c11;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseval();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c11;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseval();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseval() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselogical_or();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c19(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseval();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseint();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefrac();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexp();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c24();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (peg$c25.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s2 = peg$c5;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c27.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c29;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c31;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c33.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c35.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c37.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c41.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n\n    function operate(item) {\n      var operator = item[1]\n      var operand = item[3]\n      return \" \" + operator + \" \" + operand\n    }\n    function combine(first, rest) {\n      return first + rest.map(operate).join('')\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as PIXI from 'pixi.js'\n\nfunction createRenderer (w, h) {\n  hackPIXIToForceNewBlendModes()\n\n  // For now, we are using CanvasRenderer instead of WebGLRenderer or\n  // autoDetectRenderer befcause of two reasons.\n  // 1. Current implementation has some problem with rendering\n  //    sprite batches: https://github.com/pixijs/pixi.js/issues/1910\n  // 2. It seems that Canvas performs better on some browsers, i.e. Chrome.\n  //    WebGLRenderer only performs better on Firefox from the experiment.\n  return new PIXI.CanvasRenderer(w, h, { transparent: true })\n}\n\n// HACK: Sometimes, when using the canvas renderer,\n// the blend mode is not properly set.\nfunction hackPIXIToForceNewBlendModes () {\n  PIXI.utils.canUseNewCanvasBlendModes = () => true\n}\n\nexport class Context {\n  constructor (skin) {\n    this.refs = {}\n    this._skin = skin\n    this._instance = skin.instantiate(this)\n    this._renderer = createRenderer(skin.width, skin.height)\n    this.stage = this._instance.object\n    this.view = this._renderer.view\n    this.skinData = skin.data\n    this._setupInteractivity()\n  }\n  render (data) {\n    this._instance.push(data)\n    this._renderer.render(this.stage)\n  }\n  destroy () {\n    this._instance.destroy()\n    this._instance = null\n    this._teardownInteractivity()\n  }\n  get input () {\n    return this._input.get()\n  }\n  ref (key, object) {\n    let set = this.refs[key] || (this.refs[key] = new Set())\n    set.add(object)\n  }\n  unref (key, object) {\n    let set = this.refs[key]\n    if (!set) return\n    set.delete(object)\n  }\n  _setupInteractivity () {\n    let mouse = null\n    let touches = []\n    let onMouse = e => {\n      mouse = e\n    }\n    let onUpdateMouse = e => {\n      mouse = mouse && e\n    }\n    let onNoMouse = () => {\n      mouse = null\n    }\n    let onTouch = e => {\n      touches = [].slice.call(e.touches)\n    }\n    let view = this.view\n    let width = this._skin.width\n    let height = this._skin.height\n    view.addEventListener('mousedown', onMouse, false)\n    view.addEventListener('mousemove', onUpdateMouse, false)\n    view.addEventListener('mouseup', onNoMouse, false)\n    view.addEventListener('touchstart', onTouch, false)\n    view.addEventListener('touchmove', onTouch, false)\n    view.addEventListener('touchend', onTouch, false)\n    this._teardownInteractivity = () => {\n      view.removeEventListener('mousedown', onMouse, false)\n      view.removeEventListener('mousemove', onUpdateMouse, false)\n      view.removeEventListener('mouseup', onNoMouse, false)\n      view.removeEventListener('touchstart', onTouch, false)\n      view.removeEventListener('touchmove', onTouch, false)\n      view.removeEventListener('touchend', onTouch, false)\n    }\n    this._input = {\n      get: () => {\n        let output = []\n        let rect = this.view.getBoundingClientRect()\n        if (mouse) {\n          output.push(point('mouse', mouse, rect))\n        }\n        for (let i = 0; i < touches.length; i++) {\n          let touch = touches[i]\n          output.push(point('touch' + touch.identifier, touch, rect))\n        }\n        return output\n      }\n    }\n    function point (id, p, rect) {\n      return {\n        x: (p.clientX - rect.left) / rect.width * width,\n        y: (p.clientY - rect.top) / rect.height * height,\n        id: id\n      }\n    }\n  }\n}\n\nexport default Context\n","/**\n * A SkinNode is an internal representation of a Skin.\n *\n * Node.compile     :: (compiler, $xml) -> Node\n *\n * To implement:\n *\n * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n */\nexport class SkinNode {\n  static compile (compiler, $el) {\n    let node = new this()\n    node.compile(compiler, $el)\n    return node\n  }\n}\n\nexport default SkinNode\n","import Callbacks from 'bemuse/utils/callbacks'\n\nexport class Instance {\n  constructor (options) {\n    this._context = options.context\n    this._object = options.object\n    this._children = options.children\n    this._bindings = []\n    this._concerns = []\n    this.onData = new Callbacks(options.onData)\n    this.onDestroy = new Callbacks(options.onDestroy)\n    if (options.bindings) {\n      for (let binding of options.bindings) {\n        this.bind(...binding)\n      }\n    }\n    if (options.concerns) {\n      for (let concern of options.concerns) {\n        this._concerns.push(concern.instantiate(this._context, this))\n      }\n    }\n    if (options.children) {\n      for (let children of options.children) {\n        this._concerns.push(children.instantiate(this._context, this._object))\n      }\n    }\n    if (options.onCreate) {\n      new Callbacks(options.onCreate).call()\n    }\n    if (options.parent) {\n      this.attachTo(options.parent)\n    }\n  }\n  bind (...pipeline) {\n    let sideEffect = onChange(pipeline.pop())\n    if (pipeline.length === 1 && pipeline[0].constant) {\n      // optimize: don't add binding when expression is constant --\n      // just do it once\n      sideEffect(pipeline[0]())\n    } else {\n      this._bindings.push(value => {\n        for (var i = 0; i < pipeline.length; i++) {\n          value = pipeline[i](value)\n        }\n        sideEffect(value)\n      })\n    }\n  }\n  attachTo (parent) {\n    this._parent = parent\n    this._parent.addChild(this._object)\n  }\n  detach () {\n    if (this._parent) {\n      this._parent.removeChild(this._object)\n      this._parent = null\n    }\n  }\n  push (value) {\n    var i\n    for (i = 0; i < this._bindings.length; i++) {\n      this._bindings[i](value)\n    }\n    for (i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].push(value)\n    }\n    this.onData.call(value)\n  }\n  destroy () {\n    this.detach()\n    for (var i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].destroy()\n    }\n    this.onDestroy.call()\n    this._concerns = null\n    this._bindings = null\n    this._parent = null\n    this._object = null\n  }\n  get object () {\n    return this._object\n  }\n  get parent () {\n    return this._parent\n  }\n}\n\nfunction onChange (f) {\n  let value\n  return function receiveNewValue (v) {\n    if (value !== v) {\n      value = v\n      f(v)\n    }\n  }\n}\n\nexport default Instance\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from '../lib/base'\nimport Instance from '../lib/instance'\n\nimport Expression from '../../expression'\nimport Animation from './animation'\n\n// Numeric properties that may be interpreted as expressions.\nlet properties = [\n  { name: 'x', default: '0', apply: (obj, v) => (obj.x = v) },\n  { name: 'y', default: '0', apply: (obj, v) => (obj.y = v) },\n  { name: 'scale-x', default: '1', apply: (obj, v) => (obj.scale.x = v) },\n  { name: 'scale-y', default: '1', apply: (obj, v) => (obj.scale.y = v) },\n  { name: 'alpha', default: '1', apply: (obj, v) => (obj.alpha = v) },\n  { name: 'width', apply: (obj, v) => (obj.width = v) },\n  { name: 'height', apply: (obj, v) => (obj.height = v) },\n  { name: 'visible', apply: (obj, v) => (obj.visible = v) }\n]\n\nexport class DisplayObject extends SkinNode {\n  compile (compiler, $el) {\n    this._animation = Animation.compile(compiler, $el)\n    this._bindings = []\n    for (let property of properties) {\n      let code = $el.attr(property.name) || property.default\n      if (!code) continue\n      let expression = new Expression(code)\n      let getter = this._animation.prop(property.name, expression)\n      this._bindings.push({\n        getter: getter,\n        apply: property.apply\n      })\n    }\n    this.blendMode = parseBlendMode($el.attr('blend') || 'normal')\n    this.ref = $el.attr('ref') || null\n  }\n  instantiate (context, subject) {\n    var object = subject.object\n    var bindings = []\n    var onDestroy = null\n    object.blendMode = this.blendMode\n    for (var i = 0; i < this._bindings.length; i++) {\n      var binding = this._bindings[i]\n      bindings.push([binding.getter, binding.apply.bind(null, object)])\n    }\n    if (this.ref) {\n      context.ref(this.ref, object)\n      onDestroy = () => context.unref(this.ref, object)\n    }\n    return new Instance({\n      bindings: bindings,\n      onDestroy: onDestroy\n    })\n  }\n}\n\nfunction parseBlendMode (text) {\n  if (text === 'normal') return PIXI.BLEND_MODES.NORMAL\n  if (text === 'screen') return PIXI.BLEND_MODES.SCREEN\n  throw new Error('Invalid blend mode: ' + text)\n}\n\nexport default DisplayObject\n","import * as PIXI from 'pixi.js'\n\nexport function parseFrame (text) {\n  let m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/)\n  if (!m) return null\n  return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2])\n}\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\n\nimport DisplayObject from './concerns/display-object'\nimport { parseFrame } from './lib/utils'\n\nexport class Mask {\n  constructor (frame) {\n    this._frame = frame\n  }\n  instantiate (context, subject) {\n    let mask = new PIXI.Graphics()\n    mask.beginFill()\n    mask.drawShape(this._frame)\n    mask.endFill()\n    subject.object.mask = mask\n    return new Instance({\n      context: context,\n      object: mask,\n      parent: subject.object\n    })\n  }\n}\n\nexport class GroupNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.display = DisplayObject.compile(compiler, $el)\n    let maskFrame = parseFrame($el.attr('mask') || '')\n    if (maskFrame) this.mask = new Mask(maskFrame)\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let concerns = [this.display]\n    if (this.mask) {\n      concerns.push(this.mask)\n    }\n    return new Instance({\n      context: context,\n      object: object,\n      parent: container,\n      concerns: concerns,\n      children: this.children\n    })\n  }\n}\n\nexport default GroupNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport Expression from '../expression'\n\nexport class IfNode extends SkinNode {\n  compile (compiler, $el) {\n    let children = compiler.compileChildren($el)\n    if (children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + children.length + ' found'\n      )\n    }\n    this.child = children[0]\n    this.key = new Expression($el.attr('key'))\n    this.value = String($el.attr('value'))\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let expr = this.key\n    let value = this.value\n    let childNode = this.child\n    let child = null\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      onData: data => {\n        if (String(expr(data)) === value) {\n          if (child === null) {\n            child = childNode.instantiate(context, object)\n          }\n          child.push(data)\n        } else {\n          if (child !== null) {\n            child.destroy()\n            child = null\n          }\n        }\n      }\n    })\n  }\n}\n\nexport default IfNode\n","import * as PIXI from 'pixi.js'\n\nimport Expression from '../expression'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nfunction ChildManager (expr, child, poolSize) {\n  return {\n    instantiate (context, subject) {\n      let instances = new Map()\n      let pool = []\n      initPool()\n      return new Instance({\n        context: context,\n        onData: data => {\n          update(expr(data))\n        }\n      })\n      function initPool () {\n        var instance\n        for (var i = 0; i < poolSize; i++) {\n          instance = child.instantiate(context, subject.object)\n          instance.detach()\n          pool.push(instance)\n        }\n      }\n      function update (array) {\n        var unused = new Set(instances.keys())\n        var key\n        var item\n        var instance\n        if (!array) array = []\n        for (var i = 0; i < array.length; i++) {\n          item = array[i]\n          key = item.key\n          if (instances.has(key)) {\n            instance = instances.get(key)\n          } else {\n            instance = createInstance()\n            instances.set(key, instance)\n          }\n          instance.push(item)\n          unused.delete(key)\n        }\n        for (key of unused) {\n          instance = instances.get(key)\n          instance.detach()\n          instances.delete(key)\n          pool.push(instance)\n        }\n      }\n      function createInstance () {\n        var instance = pool.pop()\n        if (instance) {\n          instance.attachTo(subject.object)\n        } else {\n          instance = child.instantiate(context, subject.object)\n        }\n        return instance\n      }\n    }\n  }\n}\n\nexport class ObjectNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    if (this.children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + this.children.length + ' given'\n      )\n    }\n    this.pool = +$el.attr('pool') || 1\n    this.key = new Expression($el.attr('key'))\n  }\n  instantiate (context, container) {\n    let batch = new PIXI.particles.ParticleContainer(undefined, {\n      position: true,\n      alpha: true\n    })\n    let manager = new ChildManager(this.key, this.children[0], this.pool)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: batch,\n      concerns: [manager]\n    })\n  }\n}\n\nexport default ObjectNode\n","import * as PIXI from 'pixi.js'\n\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nexport class SkinRootNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.width = +$el.attr('width')\n    this.height = +$el.attr('height')\n    this.data = $el.data()\n  }\n  instantiate (context) {\n    let stage = new PIXI.Stage(0x090807)\n    return new Instance({\n      context: context,\n      object: stage,\n      children: this.children\n    })\n  }\n}\n\nexport default SkinRootNode\n","import * as PIXI from 'pixi.js'\n\nimport DisplayObject from './concerns/display-object'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\nimport { parseFrame } from './lib/utils'\n\nexport class SpriteNode extends SkinNode {\n  compile (compiler, $el) {\n    this.url = compiler.resources.get($el.attr('image'))\n    this.display = DisplayObject.compile(compiler, $el)\n    this.frame = parseFrame($el.attr('frame') || '')\n    this.anchorX = +$el.attr('anchor-x') || 0\n    this.anchorY = +$el.attr('anchor-y') || 0\n  }\n  instantiate (context, container) {\n    let sprite = new PIXI.Sprite(this.getTexture())\n    sprite.anchor.x = this.anchorX\n    sprite.anchor.y = this.anchorY\n    return new Instance({\n      context: context,\n      object: sprite,\n      parent: container,\n      concerns: [this.display]\n    })\n  }\n  getTexture () {\n    if (this._texture) return this._texture\n    let scaleMode = PIXI.SCALE_MODES.NEAREST\n    let base = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode)\n    let texture = new PIXI.Texture(base, this.frame)\n    this._texture = texture\n    return texture\n  }\n}\n\nexport default SpriteNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport DisplayObject from './concerns/display-object'\nimport Expression from '../expression'\n\nexport class TextNode extends SkinNode {\n  compile (compiler, $el) {\n    this.font = $el.attr('font')\n    this.text = $el.attr('text')\n    this.data = new Expression($el.attr('data') || '0')\n    this.display = DisplayObject.compile(compiler, $el)\n    this.ttf = !$el.attr('font-src')\n    this.fill = $el.attr('fill')\n    this.align =\n      $el.attr('align') === 'left' ? 0 : $el.attr('align') === 'right' ? 1 : 0.5\n  }\n  instantiate (context, container) {\n    let text\n    if (this.ttf) {\n      text = new PIXI.Text(this.text, {\n        font: this.font,\n        fill: this.fill\n      })\n    } else {\n      text = new PIXI.extras.BitmapText(this.text, { font: this.font })\n    }\n    let object = new PIXI.Container()\n    object.addChild(text)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      concerns: [this.display],\n      bindings: [\n        [\n          this.data,\n          v => {\n            text.text = this.text.replace('%s', v)\n            text.updateText()\n            text.x = text.width * -this.align\n          }\n        ]\n      ]\n    })\n  }\n}\n\nexport default TextNode\n","import $ from 'jquery'\nimport debug from 'debug'\n\nimport GroupNode from './nodes/group'\nimport IfNode from './nodes/if'\nimport ObjectNode from './nodes/object'\nimport SkinRootNode from './nodes/skin-root'\nimport SpriteNode from './nodes/sprite'\nimport TextNode from './nodes/text'\n\nconst log = debug('scintillator:compiler')\n\nlet NODES = {\n  skin: SkinRootNode,\n  sprite: SpriteNode,\n  group: GroupNode,\n  object: ObjectNode,\n  text: TextNode,\n  if: IfNode\n}\n\n/**\n * A Compiler compiles the $xml theme file into SkinNode.\n */\nclass Compiler {\n  constructor (env) {\n    Object.assign(this, env)\n    this._defs = new Map()\n  }\n  compile ($el) {\n    let nodeName = $el[0].nodeName\n    log('compiling', $el[0])\n    let Node = Compiler.getNodeClass(nodeName)\n    if (!Node) throw new Error('Invalid node name: ' + nodeName)\n    return Node.compile(this, $el)\n  }\n  compileChildren ($el) {\n    let output = []\n    for (let child of Array.from($el.children())) {\n      let nodeName = child.nodeName\n      if (nodeName === 'defs') {\n        this.compileDefs($(child))\n      } else if (nodeName === 'use') {\n        output.push(this.getDef(child.getAttribute('def')))\n      } else {\n        let Node = Compiler.getNodeClass(nodeName)\n        if (Node) output.push(this.compile($(child)))\n      }\n    }\n    return output\n  }\n  compileDefs ($el) {\n    for (let child of Array.from($el.children())) {\n      let id = child.getAttribute('id')\n      if (!id) throw new Error('A def should have an id: ' + child.nodeName)\n      this._defs.set(id, this.compile($(child)))\n    }\n  }\n  getDef (id) {\n    let node = this._defs.get(id)\n    if (!node) throw new Error('Cannot find def: ' + id)\n    return node\n  }\n\n  static getNodeClass (nodeName) {\n    return NODES[nodeName]\n  }\n}\n\nexport default Compiler\n","import _ from 'lodash'\n\n/**\n * The resources class contains a mapping from an image \"src\" to the resolved\n * image \"url.\"\n */\nexport class Resources {\n  constructor () {\n    this._map = {}\n  }\n  add (src, url) {\n    this._map[src] = url\n  }\n  get (src) {\n    if (!(src in this._map)) throw new Error('Not registered: ' + src)\n    return this._map[src]\n  }\n  get urls () {\n    return _.values(this._map)\n  }\n}\n\nexport default Resources\n","import * as PIXI from 'pixi.js'\nimport $ from 'jquery'\nimport co from 'co'\nimport debug from 'debug'\nimport url from 'url'\nimport { PERCENTAGE_FORMATTER } from 'bemuse/progress/formatters'\n\nimport Compiler from './compiler'\nimport Resources from './resources'\n\nconst log = debug('scintillator:loader')\n\nexport function load (xmlPath, progress) {\n  return co(function * () {\n    log('load XML from %s', xmlPath)\n    let $xml = yield loadXml(xmlPath)\n\n    // scan all images\n    let resources = new Resources()\n    let paths = new Set()\n    for (let element of Array.from($xml.find('[image]'))) {\n      paths.add($(element).attr('image'))\n    }\n    for (let element of Array.from($xml.find('[font-src]'))) {\n      paths.add($(element).attr('font-src'))\n    }\n    for (let path of paths) {\n      let assetUrl = url.resolve(xmlPath, path)\n      resources.add(path, assetUrl)\n    }\n\n    // load all images + progress reporting\n    yield loadResources(resources, progress)\n\n    // compile the skin\n    log('compiling')\n    let skin = new Compiler({ resources }).compile($xml)\n\n    return skin\n  })\n}\n\nfunction loadXml (xmlUrl) {\n  return Promise.resolve($.ajax({ url: xmlUrl, dataType: 'xml' })).then(xml =>\n    $(xml.documentElement)\n  )\n}\n\nfunction loadResources (resources, progress) {\n  log('loading resources')\n  return new Promise(function (resolve) {\n    if (resources.urls.length === 0) return resolve()\n    let loader = new PIXI.loaders.Loader()\n    for (let url of resources.urls) {\n      loader.add(url, url)\n    }\n    loader.once('complete', function () {\n      log('resources finished loading')\n      resolve()\n    })\n    if (progress) {\n      progress.formatter = PERCENTAGE_FORMATTER\n      loader.once('complete', function () {\n        progress.report(100, 100)\n      })\n      loader.on('progress', function () {\n        progress.report(loader.progress, 100)\n      })\n    }\n    loader.load()\n  })\n}\n","import { Context } from './context'\nimport { load } from './loader'\n\nexport { load, Context }\n\nexport function getSkinUrl ({ displayMode } = {}) {\n  if (displayMode === 'touch3d') {\n    return '/skins/default/skin_touch3d.xml'\n  } else {\n    if (window.innerWidth < window.innerHeight) {\n      return '/skins/default/skin_touch.xml'\n    } else {\n      return '/skins/default/skin_screen.xml'\n    }\n  }\n}\n"],"sourceRoot":""}
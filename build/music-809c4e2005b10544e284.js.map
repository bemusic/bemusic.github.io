{"version":3,"file":"build/music-809c4e2005b10544e284.js","mappings":"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","sources":["file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/bytes@3.1.2/node_modules/bytes/index.js","file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/delay@5.0.0/node_modules/delay/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/MusicTable.tsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.tsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/Progress.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/formatters.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/index.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/utils.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/url.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/callbacks.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/download.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/main-element.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/observable.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/read-blob.js"],"sourcesContent":["/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport React, { useState } from 'react'\nimport { Song } from 'bemuse/collection-model/types'\n\ntype Sorter = (songs: readonly Song[]) => {\n  title: string\n  songs: Song[]\n}[]\n\nconst sorters: Record<string, Sorter> = {\n  ingame: (songs: readonly Song[]) =>\n    groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs: readonly Song[]) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song: Song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\ninterface Problem {\n  keys: readonly string[]\n  message: string\n}\n\nfunction validateSong(song: Song): Problem[] {\n  const problems: Problem[] = []\n  const report = (message: string, ...keys: string[]) =>\n    problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nconst SongWarnings = ({ song }: { song: Song }) => {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\nconst SongRow = ({\n  song,\n  url,\n  setPreviewUrl,\n}: {\n  song: Song\n  url: string\n  setPreviewUrl: (url: string | null) => void\n}): JSX.Element => (\n  <tr key={song.id}>\n    <td>\n      <strong\n        onClick={() => {\n          prompt('', `vim '${song.id}/README.md'`)\n        }}\n      >\n        <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n      </strong>\n      <br />\n      <span style={{ color: '#8b8685' }}>{song.added}</span>\n    </td>\n    <td style={{ textAlign: 'center', background: '#353433' }}>\n      <span\n        style={{ color: '#8b8685' }}\n        onClick={async () => {\n          const previewUrl = await getPreviewResourceUrl(song, url)\n          setPreviewUrl(previewUrl)\n        }}\n      >\n        {song.genre}\n      </span>\n      <br />\n      <strong\n        onClick={() => {\n          console.log(song)\n          alert(require('util').inspect(song))\n        }}\n      >\n        {song.title}\n      </strong>\n      <br />\n      {song.artist}\n    </td>\n    <td>\n      <SongWarnings song={song} />\n    </td>\n  </tr>\n)\n\nconst Rows = ({\n  sort,\n  songs,\n  url,\n  setPreviewUrl,\n}: {\n  sort: string\n  songs: readonly Song[]\n  url: string\n  setPreviewUrl: (url: string | null) => void\n}) => {\n  const categories = sorters[sort](songs)\n  const out: JSX.Element[] = []\n  for (const category of categories) {\n    out.push(\n      <tr key={category.title}>\n        <th colSpan={4}>{category.title}</th>\n      </tr>\n    )\n    for (const song of category.songs) {\n      out.push(<SongRow {...{ song, url, setPreviewUrl }} />)\n    }\n  }\n  return <>{out}</>\n}\n\nconst Preview = ({\n  previewUrl,\n  previewEnabled,\n  togglePreview,\n}: {\n  previewUrl: string | null\n  previewEnabled: boolean\n  togglePreview: () => void\n}) => {\n  const button = (\n    <button onClick={togglePreview}>\n      {previewEnabled ? 'disable' : 'enable'}\n    </button>\n  )\n  return (\n    <span>\n      <strong>Music preview:</strong> {button}\n      {previewEnabled && previewUrl && (\n        <MusicSelectPreviewer url={previewUrl} />\n      )}\n    </span>\n  )\n}\n\nconst Sorter = ({ setSort }: { setSort: (key: string) => void }) => {\n  const out = []\n  for (const key of Object.keys(sorters)) {\n    out.push(\n      <button key={key} onClick={() => setSort(key)}>\n        {key}\n      </button>\n    )\n  }\n  return (\n    <span>\n      <strong>Sort by:</strong> {out}\n    </span>\n  )\n}\n\nconst Table = ({\n  data,\n  url,\n  initialSort,\n}: {\n  data: { songs: readonly Song[] }\n  url: string\n  initialSort: string\n}) => {\n  const [sort, setSort] = useState(initialSort || Object.keys(sorters)[0])\n  const [previewEnabled, setPreviewEnabled] = useState(false)\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null)\n\n  return (\n    <table style={{ borderSpacing: 4 }}>\n      <thead>\n        <tr>\n          <th colSpan={4}>\n            <Sorter setSort={setSort} />\n            {' · '}\n            <Preview\n              previewEnabled={previewEnabled}\n              previewUrl={previewUrl}\n              togglePreview={() => setPreviewEnabled((flag) => !flag)}\n            />\n          </th>\n        </tr>\n        <tr>\n          <th>id</th>\n          <th>song</th>\n          <th>warnings</th>\n        </tr>\n      </thead>\n      <tbody>\n        <Rows\n          sort={sort}\n          songs={data.songs}\n          url={url}\n          setPreviewUrl={setPreviewUrl}\n        />\n      </tbody>\n    </table>\n  )\n}\n\nconst Message = ({ text }: { text: string }) => (\n  <div style={{ textAlign: 'center' }}>{text}</div>\n)\n\nexport interface MusicTableProps {\n  data: { songs: readonly Song[] } | null\n  url: string\n  initialSort: string\n}\n\nexport const MusicTable = ({ data, url, initialSort }: MusicTableProps) => {\n  if (!data) return <Message text='No data' />\n  try {\n    return <Table data={data} url={url} initialSort={initialSort} />\n  } catch (e) {\n    return <Message text={`Error: ${e}`} />\n  }\n}\n\nexport default MusicTable\n","import { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\nimport React, { useEffect, useState } from 'react'\n\nimport { MusicServerIndex } from 'bemuse-types'\nimport MusicTable from './MusicTable'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\n\nexport const CollectionViewer = () => {\n  const [status, setStatus] = useState('Loading')\n  const [data, setData] = useState<MusicServerIndex | null>(null)\n\n  const url = query.server || OFFICIAL_SERVER_URL\n\n  useEffect(() => {\n    load(url).then(\n      (result) => {\n        setStatus('Load completed')\n        setData(result)\n      },\n      (e: Error) => {\n        setStatus('Load error: ' + e)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n      <header style={{ textAlign: 'center' }}>\n        <h1>Bemuse collection viewer</h1>\n        <div>\n          {url}\n          <br />\n          {status}\n        </div>\n      </header>\n      <div style={{ padding: 20 }}>\n        <MusicTable\n          data={data && preprocessCollection(data)}\n          url={url}\n          initialSort={query.sort}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  const groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (const song of songs) {\n    for (const { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (const { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","import produce from 'immer'\n\nexport const preprocessCollection = produce((draft, songs) => {\n  if (songs) {\n    draft.songs = songs.map((song) => preprocessSong(song))\n  }\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = produce(song, (draft) => {\n      if (draft.charts) {\n        draft.charts = draft.charts.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return produce(chart, (draft) => {\n            draft.info = {\n              subtitles: (subtitles) => [...subtitles, name],\n            }\n          })\n        })\n      }\n    })\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import { useEffect } from 'react'\n\nimport * as MusicPreviewer from '.'\n\nMusicPreviewer.preload()\n\nexport interface MusicSelectPreviewerProps {\n  url: string | null\n}\n\nconst MusicSelectPreviewer = ({ url }: MusicSelectPreviewerProps) => {\n  useEffect(() => {\n    const handleMessage = ({ data }: MessageEvent) => {\n      if (data.type === 'calibration-started') {\n        MusicPreviewer.disable()\n      } else if (data.type === 'calibration-closed') {\n        MusicPreviewer.enable()\n      }\n    }\n    addEventListener('message', handleMessage)\n    return () => {\n      MusicPreviewer.disable()\n      removeEventListener('message', handleMessage)\n    }\n  }, [])\n  useEffect(() => {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(url)\n  })\n\n  return null\n}\n\nexport default MusicSelectPreviewer\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction playAudio(element) {\n  return new Promise((resolve) => {\n    resolve(element.play())\n  })\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        playAudio(background).catch(() =>\n          console.warn('Cannot play background music')\n        )\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      playAudio(goSound).catch(() => console.warn('Cannot play go sound.'))\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          playAudio(audio)\n            .then(() => {\n              played = true\n            })\n            .catch(() => console.warn('Cannot play', audio.src))\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","import bytes from 'bytes'\n\nconst wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport const BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport const PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport const EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport async function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): Promise<T> {\n  if (!progress) return promise\n  const data = await Promise.resolve(promise)\n  if (hasByteLength(data)) {\n    progress.formatter = BYTES_FORMATTER\n    progress.report(data.byteLength, data.byteLength)\n  } else {\n    progress.report(1, 1)\n  }\n  return data\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return async function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    const ret = await f.apply(this, args)\n    progress.report(++current, total)\n    return ret\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  const queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    const simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    const nextProgress = () => {\n      const progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    const files = new Map<string, BemusePackFileEntry>()\n    for (const file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    const file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  const array = new Uint8Array(buffer)\n  const length =\n    array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (let i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    const callbacks = this._callbacks\n    for (const id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    const id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import delay from 'delay'\nimport { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await delay(waitMs)\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          const xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","export default document.querySelector('#scene-root')\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        const reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n"],"names":["module","exports","value","options","parse","format","formatThousandsRegExp","formatDecimalsRegExp","map","b","kb","mb","gb","tb","Math","pow","pb","parseRegExp","Number","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","Boolean","unit","toLowerCase","str","toFixed","replace","split","s","i","join","val","isNaN","floatValue","results","exec","parseFloat","parseInt","floor","createAbortError","error","Error","name","createDelay","clearTimeout","defaultClear","setTimeout","set","willResolve","ms","signal","aborted","Promise","reject","timeoutId","settle","rejectFn","clear","signalListener","delayPromise","resolve","removeEventListener","addEventListener","once","createWithTimers","clearAndSet","delay","range","minimum","maximum","random","randomInteger","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","getAdded","song","initial","SongWarnings","problems","report","message","keys","push","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","length","getPlayableCharts","info","subtitles","file","validateSong","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","SongRow","url","setPreviewUrl","id","onClick","prompt","color","textAlign","async","previewUrl","getPreviewResourceUrl","genre","console","log","alert","artist","Rows","sort","categories","out","category","colSpan","Preview","previewEnabled","togglePreview","button","MusicSelectPreviewer","Sorter","setSort","Object","Table","data","initialSort","useState","setPreviewEnabled","borderSpacing","flag","Message","text","e","status","setStatus","setData","query","useEffect","then","result","preprocessCollection","main","render","orderBy","difficulty","level","serverUrl","tutorial","baseResources","preview_url","resolveUrl","getSongResources","resources","URL","path","assetResources","base","bemusepackUrl","assetsBase","metadataFilename","fallback","fallbackPattern","wrapAssetResources","bemusepack_url","getHashFunction","today","Date","now","toISOString","md5","createHash","update","digest","SongOfTheDay","constructor","enabled","this","ids","Set","sorted","custom","slice","isSongOfTheDay","has","grouping","criteria","reverse","context","songOfTheDay","songOfTheDayEnabled","groups","group","input","output","OFFICIAL_SERVER_URL","load","fetch","g","indexUrl","getServerIndexFileUrl","response","json","Array","isArray","dir","endsWith","draft","chart_names","preprocessSong","min","bpm","handleMessage","type","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","document","createElement","src","volume","backgroundFader","createFader","target","pause","fadeTo","destroy","playing","loaded","play","stop","playAudio","catch","warn","createInstance","songUrl","audio","played","fader","onended","enable","disable","go","currentTime","preview","createMusicPreviewer","element","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","max","currentVolume","requestAnimationFrame","speed","Progress","current","total","_observable","extra","notify","watch","f","progress","toString","formatter","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","fixed","atomic","promise","byteLength","hasByteLength","wrapPromise","args","ret","apply","bind","from","to","simultaneous","queue","unsubscribe","shift","add","BemusePackageFileResource","ref","read","getBlob","blob","as","createObjectURL","Ref","spec","_basePromise","_promise","loadPayload","getPayload","buffer","array","Uint8Array","metadataLength","all","_getMetadata","_base","_metadataFilename","Blob","JSON","_getRefs","refs","_getFileMap","metadata","files","Map","location","href","_fallback","_fallbackPattern","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","resolveRelativeResources","includes","parts","dirName","DirectoryResources","filename","URLResource","basename","URLResources","part","encodeURIComponent","init","_callbacks","_nextId","call","callbacks","callback","getRetryDelay","shouldGiveUp","xh","XMLHttpRequest","open","responseType","onload","onerror","onprogress","send","waitMs","querySelector","_value","reader","FileReader","readAsArrayBuffer","readAsText"],"sourceRoot":""}
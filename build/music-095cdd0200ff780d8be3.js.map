{"version":3,"file":"build/music-095cdd0200ff780d8be3.js","mappings":"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","sources":["file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/MusicTable.tsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.tsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/Progress.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/formatters.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/index.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/utils.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/url.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/callbacks.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/download.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/main-element.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/observable.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/read-blob.js"],"sourcesContent":["import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport React, { useState } from 'react'\nimport { Song } from 'bemuse/collection-model/types'\n\ntype Sorter = (songs: readonly Song[]) => {\n  title: string\n  songs: Song[]\n}[]\n\nconst sorters: Record<string, Sorter> = {\n  ingame: (songs: readonly Song[]) =>\n    groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs: readonly Song[]) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song: Song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\ninterface Problem {\n  keys: readonly string[]\n  message: string\n}\n\nfunction validateSong(song: Song): Problem[] {\n  const problems: Problem[] = []\n  const report = (message: string, ...keys: string[]) =>\n    problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nconst SongWarnings = ({ song }: { song: Song }) => {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\nconst SongRow = ({\n  song,\n  url,\n  setPreviewUrl,\n}: {\n  song: Song\n  url: string\n  setPreviewUrl: (url: string | null) => void\n}): JSX.Element => (\n  <tr key={song.id}>\n    <td>\n      <strong\n        onClick={() => {\n          prompt('', `vim '${song.id}/README.md'`)\n        }}\n      >\n        <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n      </strong>\n      <br />\n      <span style={{ color: '#8b8685' }}>{song.added}</span>\n    </td>\n    <td style={{ textAlign: 'center', background: '#353433' }}>\n      <span\n        style={{ color: '#8b8685' }}\n        onClick={async () => {\n          const previewUrl = await getPreviewResourceUrl(song, url)\n          setPreviewUrl(previewUrl)\n        }}\n      >\n        {song.genre}\n      </span>\n      <br />\n      <strong\n        onClick={() => {\n          console.log(song)\n          alert(require('util').inspect(song))\n        }}\n      >\n        {song.title}\n      </strong>\n      <br />\n      {song.artist}\n    </td>\n    <td>\n      <SongWarnings song={song} />\n    </td>\n  </tr>\n)\n\nconst Rows = ({\n  sort,\n  songs,\n  url,\n  setPreviewUrl,\n}: {\n  sort: string\n  songs: readonly Song[]\n  url: string\n  setPreviewUrl: (url: string | null) => void\n}) => {\n  const categories = sorters[sort](songs)\n  const out: JSX.Element[] = []\n  for (const category of categories) {\n    out.push(\n      <tr key={category.title}>\n        <th colSpan={4}>{category.title}</th>\n      </tr>\n    )\n    for (const song of category.songs) {\n      out.push(<SongRow {...{ song, url, setPreviewUrl }} />)\n    }\n  }\n  return <>{out}</>\n}\n\nconst Preview = ({\n  previewUrl,\n  previewEnabled,\n  togglePreview,\n}: {\n  previewUrl: string | null\n  previewEnabled: boolean\n  togglePreview: () => void\n}) => {\n  const button = (\n    <button onClick={togglePreview}>\n      {previewEnabled ? 'disable' : 'enable'}\n    </button>\n  )\n  return (\n    <span>\n      <strong>Music preview:</strong> {button}\n      {previewEnabled && previewUrl && (\n        <MusicSelectPreviewer url={previewUrl} />\n      )}\n    </span>\n  )\n}\n\nconst Sorter = ({ setSort }: { setSort: (key: string) => void }) => {\n  const out = []\n  for (const key of Object.keys(sorters)) {\n    out.push(\n      <button key={key} onClick={() => setSort(key)}>\n        {key}\n      </button>\n    )\n  }\n  return (\n    <span>\n      <strong>Sort by:</strong> {out}\n    </span>\n  )\n}\n\nconst Table = ({\n  data,\n  url,\n  initialSort,\n}: {\n  data: { songs: readonly Song[] }\n  url: string\n  initialSort: string\n}) => {\n  const [sort, setSort] = useState(initialSort || Object.keys(sorters)[0])\n  const [previewEnabled, setPreviewEnabled] = useState(false)\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null)\n\n  return (\n    <table style={{ borderSpacing: 4 }}>\n      <thead>\n        <tr>\n          <th colSpan={4}>\n            <Sorter setSort={setSort} />\n            {' · '}\n            <Preview\n              previewEnabled={previewEnabled}\n              previewUrl={previewUrl}\n              togglePreview={() => setPreviewEnabled((flag) => !flag)}\n            />\n          </th>\n        </tr>\n        <tr>\n          <th>id</th>\n          <th>song</th>\n          <th>warnings</th>\n        </tr>\n      </thead>\n      <tbody>\n        <Rows\n          sort={sort}\n          songs={data.songs}\n          url={url}\n          setPreviewUrl={setPreviewUrl}\n        />\n      </tbody>\n    </table>\n  )\n}\n\nconst Message = ({ text }: { text: string }) => (\n  <div style={{ textAlign: 'center' }}>{text}</div>\n)\n\nexport interface MusicTableProps {\n  data: { songs: readonly Song[] } | null\n  url: string\n  initialSort: string\n}\n\nexport const MusicTable = ({ data, url, initialSort }: MusicTableProps) => {\n  if (!data) return <Message text='No data' />\n  try {\n    return <Table data={data} url={url} initialSort={initialSort} />\n  } catch (e) {\n    return <Message text={`Error: ${e}`} />\n  }\n}\n\nexport default MusicTable\n","import { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\nimport React, { useEffect, useState } from 'react'\n\nimport { MusicServerIndex } from 'bemuse-types'\nimport MusicTable from './MusicTable'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\n\nexport const CollectionViewer = () => {\n  const [status, setStatus] = useState('Loading')\n  const [data, setData] = useState<MusicServerIndex | null>(null)\n\n  const url = query.server || OFFICIAL_SERVER_URL\n\n  useEffect(() => {\n    load(url).then(\n      (result) => {\n        setStatus('Load completed')\n        setData(result)\n      },\n      (e: Error) => {\n        setStatus('Load error: ' + e)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n      <header style={{ textAlign: 'center' }}>\n        <h1>Bemuse collection viewer</h1>\n        <div>\n          {url}\n          <br />\n          {status}\n        </div>\n      </header>\n      <div style={{ padding: 20 }}>\n        <MusicTable\n          data={data && preprocessCollection(data)}\n          url={url}\n          initialSort={query.sort}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  const groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (const song of songs) {\n    for (const { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (const { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","import produce from 'immer'\n\nexport const preprocessCollection = produce((draft, songs) => {\n  if (songs) {\n    draft.songs = songs.map((song) => preprocessSong(song))\n  }\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = produce(song, (draft) => {\n      if (draft.charts) {\n        draft.charts = draft.charts.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return produce(chart, (draft) => {\n            draft.info = {\n              subtitles: (subtitles) => [...subtitles, name],\n            }\n          })\n        })\n      }\n    })\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import { useEffect } from 'react'\n\nimport * as MusicPreviewer from '.'\n\nMusicPreviewer.preload()\n\nexport interface MusicSelectPreviewerProps {\n  url: string | null\n}\n\nconst MusicSelectPreviewer = ({ url }: MusicSelectPreviewerProps) => {\n  useEffect(() => {\n    const handleMessage = ({ data }: MessageEvent) => {\n      if (data.type === 'calibration-started') {\n        MusicPreviewer.disable()\n      } else if (data.type === 'calibration-closed') {\n        MusicPreviewer.enable()\n      }\n    }\n    addEventListener('message', handleMessage)\n    return () => {\n      MusicPreviewer.disable()\n      removeEventListener('message', handleMessage)\n    }\n  }, [])\n  useEffect(() => {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(url)\n  })\n\n  return null\n}\n\nexport default MusicSelectPreviewer\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction playAudio(element) {\n  return new Promise((resolve) => {\n    resolve(element.play())\n  })\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        playAudio(background).catch(() =>\n          console.warn('Cannot play background music')\n        )\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      playAudio(goSound).catch(() => console.warn('Cannot play go sound.'))\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          playAudio(audio)\n            .then(() => {\n              played = true\n            })\n            .catch(() => console.warn('Cannot play', audio.src))\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","import bytes from 'bytes'\n\nconst wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport const BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport const PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport const EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport async function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): Promise<T> {\n  if (!progress) return promise\n  const data = await Promise.resolve(promise)\n  if (hasByteLength(data)) {\n    progress.formatter = BYTES_FORMATTER\n    progress.report(data.byteLength, data.byteLength)\n  } else {\n    progress.report(1, 1)\n  }\n  return data\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return async function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    const ret = await f.apply(this, args)\n    progress.report(++current, total)\n    return ret\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  const queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    const simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    const nextProgress = () => {\n      const progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    const files = new Map<string, BemusePackFileEntry>()\n    for (const file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    const file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  const array = new Uint8Array(buffer)\n  const length =\n    array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (let i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    const callbacks = this._callbacks\n    for (const id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    const id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import delay from 'delay'\nimport { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await delay(waitMs)\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          const xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","import { createRoot } from 'react-dom/client'\n\nconst sceneRootElement = document.querySelector('#scene-root')\n\nif (!sceneRootElement) {\n  throw new Error('The scene root element `#scene-root` not found')\n}\n\nexport const sceneRoot = createRoot(sceneRootElement)\n\nexport default sceneRootElement\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        const reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n"],"names":["sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","getAdded","song","initial","SongWarnings","problems","report","message","keys","push","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","length","getPlayableCharts","info","subtitles","file","validateSong","map","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","SongRow","url","setPreviewUrl","id","onClick","prompt","color","textAlign","async","previewUrl","getPreviewResourceUrl","genre","console","log","alert","artist","Rows","sort","categories","out","category","colSpan","Preview","previewEnabled","togglePreview","button","MusicSelectPreviewer","Sorter","setSort","Object","Table","data","initialSort","useState","setPreviewEnabled","borderSpacing","flag","Message","text","e","status","setStatus","setData","query","useEffect","then","result","preprocessCollection","main","render","orderBy","difficulty","level","value","serverUrl","tutorial","baseResources","preview_url","resolveUrl","getSongResources","resources","URL","path","replace","assetResources","base","bemusepackUrl","undefined","assetsBase","metadataFilename","fallback","fallbackPattern","wrapAssetResources","bemusepack_url","getHashFunction","today","Date","now","toISOString","split","md5","createHash","update","digest","SongOfTheDay","constructor","enabled","this","ids","Set","sorted","s","custom","slice","isSongOfTheDay","has","grouping","criteria","parse","reverse","context","songOfTheDay","songOfTheDayEnabled","groups","group","input","output","OFFICIAL_SERVER_URL","load","fetch","g","indexUrl","getServerIndexFileUrl","response","json","Array","isArray","dir","Error","endsWith","draft","chart_names","name","preprocessSong","min","bpm","toLowerCase","handleMessage","type","addEventListener","removeEventListener","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","document","createElement","src","volume","backgroundFader","createFader","target","pause","fadeTo","destroy","playing","loaded","play","stop","playAudio","catch","warn","createInstance","songUrl","audio","played","fader","onended","enable","disable","go","currentTime","preview","createMusicPreviewer","element","Promise","resolve","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","Math","max","currentVolume","requestAnimationFrame","speed","Progress","current","total","_observable","extra","notify","watch","f","progress","toString","formatter","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","fixed","atomic","promise","byteLength","hasByteLength","wrapPromise","args","ret","apply","bind","from","to","simultaneous","queue","unsubscribe","shift","add","BemusePackageFileResource","ref","read","getBlob","blob","as","createObjectURL","Ref","spec","_basePromise","_promise","loadPayload","getPayload","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","_base","_metadataFilename","Blob","JSON","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","href","_fallback","_fallbackPattern","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","resolveRelativeResources","includes","parts","dirName","DirectoryResources","filename","URLResource","basename","URLResources","part","encodeURIComponent","join","init","_callbacks","_nextId","i","call","callbacks","callback","getRetryDelay","random","shouldGiveUp","reject","xh","XMLHttpRequest","open","responseType","onload","onerror","onprogress","send","error","waitMs","sceneRootElement","querySelector","sceneRoot","_value","reader","FileReader","readAsArrayBuffer","readAsText"],"sourceRoot":""}
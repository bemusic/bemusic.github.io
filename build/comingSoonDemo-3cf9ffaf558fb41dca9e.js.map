{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/packages/bms/lib/index.js","file:///home/circleci/bemuse/bemuse/src/progress/index.ts","file:///home/circleci/bemuse/packages/bms/lib/util/match.js","file:///home/circleci/bemuse/packages/bms/lib/bms/headers.js","file:///home/circleci/bemuse/packages/bms/lib/bms/objects.js","file:///home/circleci/bemuse/packages/bms/lib/time-signatures/index.js","file:///home/circleci/bemuse/bemuse/src/progress/Progress.ts","file:///home/circleci/bemuse/bemuse/src/utils/observable.ts","file:///home/circleci/bemuse/bemuse/src/utils/callbacks.ts","file:///home/circleci/bemuse/bemuse/src/audio-context/index.js","file:///home/circleci/bemuse/bemuse/src/coming-soon/demo/index.js","file:///home/circleci/bemuse/bemuse/src/coming-soon/demo/style.scss?5622","file:///home/circleci/bemuse/bemuse/src/coming-soon/demo/style.scss","file:///home/circleci/bemuse/bemuse/src/coming-soon/demo/template.jade","file:///home/circleci/bemuse/bemuse/src/sampling-master/index.js","file:///home/circleci/bemuse/bemuse/src/sampling-master/ogg.ts","file:///home/circleci/bemuse/packages/bms/lib/reader/index.web.js","file:///home/circleci/bemuse/packages/bms/lib/reader/getReaderOptionsFromFilename.js","file:///home/circleci/bemuse/packages/bms/lib/compiler/index.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/segment.js","file:///home/circleci/bemuse/packages/bms/lib/notes/index.js","file:///home/circleci/bemuse/packages/bms/lib/notes/note.js","file:///home/circleci/bemuse/packages/bms/lib/notes/channels.js","file:///home/circleci/bemuse/packages/bms/lib/timing/index.js","file:///home/circleci/bemuse/packages/bms/lib/song-info/index.js","file:///home/circleci/bemuse/packages/bms/lib/keysounds/index.js","file:///home/circleci/bemuse/packages/bms/lib/positioning/index.js","file:///home/circleci/bemuse/packages/bms/lib/spacing/index.js","file:///home/circleci/bemuse/bemuse/src/resources/resource-logging.ts","file:///home/circleci/bemuse/bemuse/src/resources/unarchiver.ts","file:///home/circleci/bemuse/bemuse/src/resources/custom-song-resources.ts","file:///home/circleci/bemuse/packages/bms/lib/bms/chart.js","file:///home/circleci/bemuse/bemuse/src/resources/dnd-resources.ts","file:///home/circleci/bemuse/packages/bms/lib/speedcore/index.js","file:///home/circleci/bemuse/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/bemuse/src/progress/utils.ts","file:///home/circleci/bemuse/bemuse/src/utils/download.js","file:///home/circleci/bemuse/packages/bms/lib/util/lodash.js"],"names":["blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","__export","m","p","exports","hasOwnProperty","__importStar","this","mod","__esModule","k","Object","call","defineProperty","value","Reader","Compiler","match","text","matched","when","pattern","callback","else","BMSHeaders","_data","_dataAll","prototype","each","i","get","name","toLowerCase","getAll","set","key","push","BMSObjects","_objects","add","object","channel","length","test","measure","fraction","all","slice","allSorted","list","sort","a","b","TimeSignatures","_values","getBeats","measureToBeat","sum","Progress","current","undefined","total","_observable","extra","notify","f","watch","formatter","progress","_callbacks","_value","init","_nextId","args","callbacks","id","latencyHint","main","element","on","handler","el","appendTo","find","hide","e","preventDefault","loader","master","$log","$play","$sampler","log","bmsFile","fileList","filter","loadedFile","file","arraybuffer","read","buffer","Buffer","from","Uint8Array","promisify","readAsync","chart","compile","timing","fromBMSChart","notes","info","JSON","stringify","loadedSamples","_notes","_chart","samples","promises","completed","note","keysound","loadKeysound","headers","then","sample","catch","console","error","tap","loadSamples","t","replace","show","unmute","setTimeout","span","instance","play","scrollTop","scrollHeight","onstop","addClass","beatToSeconds","beat","go","originalEvent","ui","off","content","module","options","transform","locals","buf","join","FADE_LENGTH","dummyAudioTag","document","createElement","needsVorbisDecoder","canPlayType","SoundGroup","samplingMaster","volume","_master","_gain","audioContext","createGain","gain","connect","destination","disconnect","Sample","audioBuffer","_buffer","delay","PlayInstance","context","source","createBufferSource","onended","stop","node","group","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","playbackRate","random","pow","unmuteAudio","ctx","osc","createOscillator","frequency","resume","_audioContext","_samples","_groups","_instances","Set","_destination","_destroyed","destroy","blobOrArrayBuffer","_coerceToArrayBuffer","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","numberOfChannels","decode","ArrayBuffer","byteLength","view","decodeAudioData","delete","decoderPromise","limit","decodeOGG","stbvorbis","ns","default","src","eval","buffers","sampleRate","totalLength","data","eof","decodedChunks","createBuffer","channels","Array","fill","map","_","ch","ChannelDataWriter","getChannelData","chunk","forEach","audioSamples","channelIndex","write","doDecodeOGG","offset","chardet","_i","arguments","charset","forceEncoding","detect","Blob","getReaderOptionsFromFilename_1","getReaderOptionsFromFilename","filename","match_1","chart_1","matchers","bms","if","endif","timeSignature","header","dtx","BMSChart","rng","floor","matcher","format","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","warnings","split","line","trim","index","eachLine","lineNumber","flow","charAt","pop","skipped","timeSignatures","string","items","substr","objects","handleChannelSentence","message","warn","__importDefault","data_structure_1","Segment","x","dx","note_1","invariant_1","ChannelMapping","Notes","Note","count","mapping","CHANNEL_MAPPING","IIDX_P1","BMSNoteBuilder","build","_mapping","_activeLN","_lastNote","_lnObj","_channelMapping","_this","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","_getBeat","endBeat","column","_getColumn","maybe","speedcore_1","lodash_1","precedence","bpm","Timing","initialBPM","actions","state","seconds","segments","inclusive","action","stopBeats","_speedcore","Speedcore","_eventBeats","uniq","secondsToBeat","bpmAtBeat","segmentAtX","getEventBeats","parseInt","isNaN","SongInfo","title","artist","genre","subtitles","subartists","difficulty","level","assign","extractSubtitle","Keysounds","_map","files","values","Positioning","speed","position","previous","Spacing","factor","unshift","ResourceLogging","loggingFunction","setLoggingFunction","fn","workerUrl","ARCHIVE_REGEXP","DROPBOX_REGEXP","provider","_logging","_files","getFiles","fileEntry","out","archive","open","extracted","extractFiles","traverse","tree","keys","File","unarchive","unarchiveIfNeeded","_file","URL","createObjectURL","downloadFileEntryFromURL","url","lastTime","Date","now","download","headers_1","objects_1","time_signatures_1","DndResources","event","super","dataTransfer","types","indexOf","getData","startsWith","item","readItem","addFile","entry","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","entries","createReader","results","readEntries","readDirectory","getFilesFromEvent","segment_1","_segments","_reached","targetFn","segment","target","_segmentAt","X","segmentAtT","T","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","fixed","loaded","report","atomic","promise","hasByteLength","wrapPromise","apply","bind","to","simultaneous","queue","unsubscribe","update","shift","xh","XMLHttpRequest","responseType","status","response","onprogress","send","lodash_uniq_1","lodash_map_1","lodash_values_1","lodash_assign_1"],"mappings":"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","file":"build/comingSoonDemo-3cf9ffaf558fb41dca9e.js","sourcesContent":["export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function(resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function() {\n          resolve(reader.result)\n        }\n        reader.onerror = function() {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","\"use strict\";\n/**\n * Public: The `bms` package is a library for working with rhythm game data.\n *\n * Although this library’s name suggests that it is for BMS file format,\n * almost every part can be used standalone.\n *\n * This package contains:\n *\n * - __Modules that reads and parses BMS files:__\n *\n *   - {Reader} reads the BMS file from a {Buffer}, detects the character set\n *     and decodes the buffer using that character set into a {String}.\n *   - {Compiler} reads the BMS source from a {String}, and converts into\n *     {BMSChart}, an internal representation of a BMS notechart.\n *\n * - __Classes for representing a BMS notechart.__\n *   These module stores the data as close to the BMS file format as possible.\n *\n *   Almost no musical interpretation is made.\n *   For example, a BPM change is simply represented using a\n *   BMSObject with `channel` = `03` or `08`.\n *\n *   - {BMSChart} is composed of {BMSHeaders}, {BMSObjects}, and {TimeSignatures}.\n *   - {BMSHeaders} represents the header sentences in a BMS file.\n *   - {BMSObjects} represents the objects in a BMS file.\n *   - {BMSObject} represents a single object.\n *\n * - __Classes that represent different aspects of a notechart.__\n *   Instance of these classes may be created from a {BMSChart},\n *   but they can be used in a standalone manner as well.\n *\n *   This makes this library very flexible,\n *   and able to accommodate different formats of notechart.\n *   For example, see the [bmson](https: *github.com/bemusic/bmson) package.\n *\n *   It’s also possible to use these classes in context other than music gaming,\n *   for example, you can use these classes to help building a music player\n *   that requires precise synchronization between beats.\n *\n *   - {TimeSignatures} represents a collection of time signatures\n *     in a musical score, and lets you convert the measure number and fraction\n *     into beat number.\n *   - {Timing} represents the timing information in a musical score,\n *     and provides methods to convert between musical time (beats) and\n *     metric time (seconds).\n *   - {SongInfo} represents the basic song information,\n *     such as title, artist, and genre.\n *   - {Notes} represents the sound objects inside your notechart.\n *   - {Keysounds} represents a mapping between keysound ID and filename.\n *   - {Positioning} represents a mapping between beat and in-game position.\n *     Some rhythm game lets chart author control the amount of scrolling\n *     per beat. In StepMania 5, this is called the scroll segments.\n *   - {Spacing} represents a mapping between beat and note spacing.\n *     Some rhythm game lets chart author change the note spacing (HI-SPEED)\n *     dynamically. In StepMania 5, this is called the speed segments.\n *\n * - __Low-level utility classes:__\n *\n *   - {Speedcore} represents a linear animation.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Reader = __importStar(require(\"./reader\"));\nexports.Reader = Reader;\nvar Compiler = __importStar(require(\"./compiler\"));\nexports.Compiler = Compiler;\n__export(require(\"./bms/chart\"));\n__export(require(\"./bms/headers\"));\n__export(require(\"./bms/objects\"));\n__export(require(\"./speedcore\"));\n__export(require(\"./time-signatures\"));\n__export(require(\"./notes\"));\n__export(require(\"./timing\"));\n__export(require(\"./song-info\"));\n__export(require(\"./keysounds\"));\n__export(require(\"./positioning\"));\n__export(require(\"./spacing\"));\n//# sourceMappingURL=index.js.map","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction match(text) {\n    var matched = false;\n    return {\n        when: function (pattern, callback) {\n            if (matched)\n                return this;\n            var match = text.match(pattern);\n            if (match) {\n                matched = true;\n                callback(match);\n            }\n            return this;\n        },\n        else: function (callback) {\n            if (matched)\n                return this;\n            callback();\n        },\n    };\n}\nexports.match = match;\n//# sourceMappingURL=match.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A BMSHeader holds the header information in a BMS file, such as\n * `#TITLE`, `#ARTIST`, or `#BPM`.\n *\n * You get retrieve a header using the `get()` method:\n *\n * ```js\n * chart.headers.get('title')\n * ```\n *\n * For some header fields that may contain multiple values, such as `#SUBTITLE`,\n * you can get them all using `getAll()`:\n *\n * ```js\n * chart.headers.getAll()\n * ```\n */\nvar BMSHeaders = /** @class */ (function () {\n    function BMSHeaders() {\n        this._data = {};\n        this._dataAll = {};\n    }\n    /**\n     * Iterates through each header field using a callback function.\n     * @param callback will be called for each header field\n     */\n    BMSHeaders.prototype.each = function (callback) {\n        for (var i in this._data) {\n            callback(i, this._data[i]);\n        }\n    };\n    /**\n     * Retrieves the header field’s latest value.\n     * @param name field’s name\n     * @return the field’s latest value\n     */\n    BMSHeaders.prototype.get = function (name) {\n        return this._data[name.toLowerCase()];\n    };\n    /**\n     * Retrieves the header field’s values.\n     * This is useful when a header field is specified multiple times.\n     * @param name field’s name\n     */\n    BMSHeaders.prototype.getAll = function (name) {\n        return this._dataAll[name.toLowerCase()];\n    };\n    /**\n     * Sets the header field’s value.\n     * @param name field’s name\n     * @param value field’s value\n     */\n    BMSHeaders.prototype.set = function (name, value) {\n        var key = name.toLowerCase();\n        this._data[key] = value;\n        (this._dataAll[key] || (this._dataAll[key] = [])).push(value);\n    };\n    return BMSHeaders;\n}());\nexports.BMSHeaders = BMSHeaders;\n//# sourceMappingURL=headers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * BMSObjects holds a collection of objects inside a BMS notechart.\n */\nvar BMSObjects = /** @class */ (function () {\n    function BMSObjects() {\n        this._objects = [];\n    }\n    /**\n     * Adds a new object to this collection.\n     * If an object already exists on the same channel and position,\n     * the object is replaced (except for autokeysound tracks).\n     * @param object the object to add\n     */\n    BMSObjects.prototype.add = function (object) {\n        if (object.channel !== '01') {\n            for (var i = 0; i < this._objects.length; i++) {\n                var test = this._objects[i];\n                if (test.channel === object.channel &&\n                    test.measure === object.measure &&\n                    test.fraction === object.fraction) {\n                    this._objects[i] = object;\n                    return;\n                }\n            }\n        }\n        this._objects.push(object);\n    };\n    /**\n     * Returns an array of all objects.\n     */\n    BMSObjects.prototype.all = function () {\n        return this._objects.slice();\n    };\n    /**\n     * Returns a sorted array of all objects.\n     */\n    BMSObjects.prototype.allSorted = function () {\n        var list = this.all();\n        list.sort(function (a, b) {\n            return a.measure + a.fraction - (b.measure + b.fraction);\n        });\n        return list;\n    };\n    return BMSObjects;\n}());\nexports.BMSObjects = BMSObjects;\n//# sourceMappingURL=objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A TimeSignatures is a collection of time signature values\n * index by measure number.\n *\n * The measure number starts from 0.\n * By default, each measure has a measure size of 1\n * (which represents the common 4/4 time signature)\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00102:0.75\n * #00103:1.25\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can access the {TimeSignatures} object:\n *\n * ```js\n * var timeSignatures = bmsChart.timeSignatures\n * ```\n *\n * Note that you can also use the constructor\n * to create a {TimeSignatures} from scratch.\n *\n * One of the most useful use case of this class\n * is to convert the measure and fraction into beat number.\n *\n * ```js\n * timeSignatures.measureToBeat(0, 0.000) // =>  0.0\n * timeSignatures.measureToBeat(0, 0.500) // =>  2.0\n * timeSignatures.measureToBeat(1, 0.000) // =>  4.0\n * timeSignatures.measureToBeat(1, 0.500) // =>  5.5\n * timeSignatures.measureToBeat(2, 0.000) // =>  7.0\n * timeSignatures.measureToBeat(2, 0.500) // =>  9.5\n * timeSignatures.measureToBeat(3, 0.000) // => 12.0\n * ```\n */\nvar TimeSignatures = /** @class */ (function () {\n    function TimeSignatures() {\n        this._values = {};\n    }\n    /**\n     * Sets the size of a specified measure.\n     * @param measure the measure number, starting from 0\n     * @param value the measure size.\n     *  For example, a size of 1.0 represents a common 4/4 time signature,\n     *  whereas a size of 0.75 represents the 3/4 or 6/8 time signature.\n     */\n    TimeSignatures.prototype.set = function (measure, value) {\n        this._values[measure] = value;\n    };\n    /**\n     * Retrieves the size of a specified measure.\n     * @param measure representing the measure number.\n     * @returns the size of the measure.\n     *  By default, a measure has a size of 1.\n     */\n    TimeSignatures.prototype.get = function (measure) {\n        return this._values[measure] || 1;\n    };\n    /**\n     * Retrieves the number of beats in a specified measure.\n     *\n     * Since one beat is equivalent to a quarter note in 4/4 time signature,\n     * this is equivalent to `(timeSignatures.get(measure) * 4)`.\n     * @param measure representing the measure number.\n     * @returns the size of the measure in beats.\n     */\n    TimeSignatures.prototype.getBeats = function (measure) {\n        return this.get(measure) * 4;\n    };\n    /**\n     * Converts a measure number and a fraction inside that measure\n     * into the beat number.\n     *\n     * @param measure the measure number.\n     * @param fraction the fraction of a measure,\n     * @returns the number of beats since measure 0.\n     */\n    TimeSignatures.prototype.measureToBeat = function (measure, fraction) {\n        var sum = 0;\n        for (var i = 0; i < measure; i++)\n            sum += this.getBeats(i);\n        return sum + this.getBeats(measure) * fraction;\n    };\n    return TimeSignatures;\n}());\nexports.TimeSignatures = TimeSignatures;\n//# sourceMappingURL=index.js.map","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n  get value() {\n    return this._value\n  }\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (var i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    var callbacks = this._callbacks\n    for (var id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    var id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction',\n})\n","import './style.scss'\n\nimport $ from 'jquery'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main(element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nasync function go(loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  log('Loading file list')\n  let list = await loader.fileList\n  let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n  log('Loading ' + bmsFile)\n\n  let loadedFile = await loader.file(bmsFile)\n  let arraybuffer = await loadedFile.read()\n  let buffer = Buffer.from(new Uint8Array(arraybuffer))\n  let text = await Promise.promisify(Reader.readAsync)(buffer)\n  let chart = Compiler.compile(text).chart\n  var timing = Timing.fromBMSChart(chart)\n  var notes = Notes.fromBMSChart(chart)\n  var info = SongInfo.fromBMSChart(chart)\n  $('<pre wrap></pre>')\n    .text(JSON.stringify(info, null, 2))\n    .appendTo($sampler)\n  log('Loading samples')\n  var loadedSamples = await loadSamples(notes, chart)\n  log('Click the button to play!')\n  await waitForPlay()\n  void (function() {\n    master.unmute()\n    for (let note of notes.all()) {\n      setTimeout(() => {\n        let sample = loadedSamples[note.keysound]\n        if (!sample) {\n          console.log('warn: unknown sample ' + note.keysound)\n          return\n        }\n        let span = $('<span></span>')\n          .text('[' + note.keysound + '] ')\n          .appendTo($sampler)\n        let instance = sample.play()\n        $sampler[0].scrollTop = $sampler[0].scrollHeight\n        instance.onstop = function() {\n          span.addClass('is-off')\n        }\n      }, timing.beatToSeconds(note.beat) * 1000)\n    }\n    return false\n  })()\n\n  function waitForPlay() {\n    return new Promise(function(resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(_notes, _chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of _notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(_chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--9-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--9-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--9-1!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\", \"\"]);\n\n// exports\n","var jade = require(\"/home/circleci/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\nimport { decodeOGG } from './ogg'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  // We have a Vorbis audio decoder!\n  if (type === 'audio/ogg; codecs=\"vorbis\"') return true\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\nconst needsVorbisDecoder = !dummyAudioTag.canPlayType(\n  'audio/ogg; codecs=\"vorbis\"'\n)\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination() {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample(blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group(options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      if (needsVorbisDecoder && arrayBuffer.byteLength > 4) {\n        const view = new Uint8Array(arrayBuffer, 0, 4)\n        if (\n          view[0] === 0x4f &&\n          view[1] === 0x67 &&\n          view[2] === 0x67 &&\n          view[3] === 0x53\n        ) {\n          return resolve(decodeOGG(this.audioContext, arrayBuffer))\n        }\n      }\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor(samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination() {\n    return this._gain\n  }\n\n  destroy() {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor(samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor(samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio(ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","import throat from 'throat'\n\ntype OGGDecodeEvent = {\n  data?: Float32Array[]\n  sampleRate: number\n  error?: any\n  eof?: boolean\n}\n\ntype OGGDecoder = {\n  decode(arrayBuffer: ArrayBuffer, callback: (e: OGGDecodeEvent) => void): void\n}\n\nlet decoderPromise: Promise<OGGDecoder>\n\nconst limit = throat(1)\n\nfunction getDecoder() {\n  if (!decoderPromise) {\n    // @ts-ignore\n    decoderPromise = import(/* webpackChunkName: 'stbvorbis' */ 'raw-loader!./vendor/stbvorbis/stbvorbis-e6da5fe-NDEBUG.js')\n      .then(ns => ns.default)\n      .then(src => {\n        // eslint-disable-next-line no-eval\n        return (0, eval)(src + ';stbvorbis')\n      })\n  }\n  return decoderPromise\n}\n\n/**\n * Decodes an OGG file using stbvorbis.js.\n */\nexport async function decodeOGG(\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  const stbvorbis = await getDecoder()\n  return limit(() => doDecodeOGG(stbvorbis, audioContext, arrayBuffer))\n}\n\nfunction doDecodeOGG(\n  stbvorbis: OGGDecoder,\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  return new Promise<AudioBuffer>((resolve, reject) => {\n    const buffers: Float32Array[][] = []\n    let totalLength = 0\n    let sampleRate: number\n    stbvorbis.decode(arrayBuffer, function(e) {\n      if (e.data) {\n        sampleRate = e.sampleRate\n        buffers.push(e.data)\n        totalLength += e.data[0].length\n      }\n      if (e.error) {\n        const error =\n          e.error instanceof Error ? e.error : `stbvorbis.js Error: ${e.error}`\n        reject(error)\n      }\n      if (e.eof) {\n        resolve(createBuffer(audioContext, buffers, totalLength, sampleRate))\n      }\n    })\n  })\n}\n\nasync function createBuffer(\n  audioContext: AudioContext,\n  decodedChunks: Float32Array[][],\n  length: number,\n  sampleRate: number\n) {\n  if (!length) throw new Error(`stbvorbis.js Error: No length`)\n  if (!sampleRate) throw new Error(`stbvorbis.js Error: No sample rate`)\n  const numberOfChannels = decodedChunks[0].length\n  const audioBuffer = audioContext.createBuffer(\n    numberOfChannels,\n    length,\n    sampleRate\n  )\n  const channels: ChannelDataWriter[] = Array(audioBuffer.numberOfChannels)\n    .fill(null)\n    .map((_, ch) => new ChannelDataWriter(audioBuffer.getChannelData(ch)))\n  for (const chunk of decodedChunks) {\n    chunk.forEach((audioSamples, channelIndex) => {\n      channels[channelIndex].write(audioSamples)\n    })\n  }\n  return audioBuffer\n}\n\nclass ChannelDataWriter {\n  private offset = 0\n  constructor(private data: Float32Array) {}\n  write(audioSamples: Float32Array) {\n    // iOS Safari does not support `buf.copyToChannel(a, ch, track[ch])`, so we had to copy audio data sample-by-sample.\n    const { offset, data } = this\n    for (var i = 0; i < audioSamples.length; i++) {\n      data[i + offset] = audioSamples[i]\n    }\n    this.offset += audioSamples.length\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chardet = require(\"bemuse-chardet/bemuse-chardet\");\nfunction read(buffer) {\n    throw new Error('Synchronous read unsupported in browser!');\n}\nexports.read = read;\nfunction readAsync() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var buffer = args[0];\n    var options = args[1];\n    var callback = args[2];\n    if (callback) {\n        options = args[1];\n        callback = args[2];\n    }\n    else {\n        options = null;\n        callback = args[1];\n    }\n    var charset = (options && options.forceEncoding) || chardet.detect(buffer);\n    var reader = new FileReader();\n    reader.onload = function () {\n        callback(null, reader.result);\n    };\n    reader.onerror = function () {\n        callback(new Error('cannot read it'));\n    };\n    reader.readAsText(new Blob([buffer]), charset);\n}\nexports.readAsync = readAsync;\nvar getReaderOptionsFromFilename_1 = require(\"./getReaderOptionsFromFilename\");\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename_1.getReaderOptionsFromFilename;\n//# sourceMappingURL=index.web.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Given the filename, returns the reader options.\n * @param {string} filename\n */\nfunction getReaderOptionsFromFilename(filename) {\n    var forceEncoding;\n    if (filename.match(/\\.sjis\\.\\w+$/i)) {\n        forceEncoding = 'Shift-JIS';\n    }\n    if (filename.match(/\\.euc_kr\\.\\w+$/i)) {\n        forceEncoding = 'EUC-KR';\n    }\n    if (filename.match(/\\.utf8\\.\\w+$/i)) {\n        forceEncoding = 'UTF-8';\n    }\n    return { forceEncoding: forceEncoding };\n}\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename;\n//# sourceMappingURL=getReaderOptionsFromFilename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Public: A module that takes a string representing the BMS notechart,\n// parses it, and compiles into a {BMSChart}.\n/* module */\nvar match_1 = require(\"../util/match\");\nvar chart_1 = require(\"../bms/chart\");\nvar matchers = {\n    bms: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):(\\S*)$/,\n        header: /^#(\\w+)(?:\\s+(\\S.*))?$/,\n    },\n    dtx: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:\\s*(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):\\s*(\\S*)$/,\n        header: /^#(\\w+):(?:\\s+(\\S.*))?$/,\n    },\n};\n/**\n * Reads the string representing the BMS notechart, parses it,\n * and compiles into a {BMSChart}.\n * @param text the BMS notechart\n * @param options additional parser options\n */\nfunction compile(text, options) {\n    options = options || {};\n    var chart = new chart_1.BMSChart();\n    var rng = options.rng ||\n        function (max) {\n            return 1 + Math.floor(Math.random() * max);\n        };\n    var matcher = (options.format && matchers[options.format]) || matchers.bms;\n    var randomStack = [];\n    var skipStack = [false];\n    var result = {\n        headerSentences: 0,\n        channelSentences: 0,\n        controlSentences: 0,\n        skippedSentences: 0,\n        malformedSentences: 0,\n        /**\n         * The resulting chart\n         */\n        chart: chart,\n        /**\n         * Warnings found during compilation\n         */\n        warnings: [],\n    };\n    eachLine(text, function (text, lineNumber) {\n        var flow = true;\n        if (text.charAt(0) !== '#')\n            return;\n        match_1.match(text)\n            .when(matcher.random, function (m) {\n            result.controlSentences += 1;\n            randomStack.push(rng(+m[1]));\n        })\n            .when(matcher.if, function (m) {\n            result.controlSentences += 1;\n            skipStack.push(randomStack[randomStack.length - 1] !== +m[1]);\n        })\n            .when(matcher.endif, function (m) {\n            result.controlSentences += 1;\n            skipStack.pop();\n        })\n            .else(function () {\n            flow = false;\n        });\n        if (flow)\n            return;\n        var skipped = skipStack[skipStack.length - 1];\n        match_1.match(text)\n            .when(matcher.timeSignature, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                chart.timeSignatures.set(+m[1], +m[2]);\n        })\n            .when(matcher.channel, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                handleChannelSentence(+m[1], m[2], m[3], lineNumber);\n        })\n            .when(matcher.header, function (m) {\n            result.headerSentences += 1;\n            if (!skipped)\n                chart.headers.set(m[1], m[2]);\n        })\n            .else(function () {\n            warn(lineNumber, 'Invalid command');\n        });\n    });\n    return result;\n    function handleChannelSentence(measure, channel, string, lineNumber) {\n        var items = Math.floor(string.length / 2);\n        if (items === 0)\n            return;\n        for (var i = 0; i < items; i++) {\n            var value = string.substr(i * 2, 2);\n            var fraction = i / items;\n            if (value === '00')\n                continue;\n            chart.objects.add({\n                measure: measure,\n                fraction: fraction,\n                value: value,\n                channel: channel,\n                lineNumber: lineNumber,\n            });\n        }\n    }\n    function warn(lineNumber, message) {\n        result.warnings.push({\n            lineNumber: lineNumber,\n            message: message,\n        });\n    }\n}\nexports.compile = compile;\nfunction eachLine(text, callback) {\n    text\n        .split(/\\r\\n|\\r|\\n/)\n        .map(function (line) {\n        return line.trim();\n    })\n        .forEach(function (line, index) {\n        callback(line, index + 1);\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Segment = data_structure_1.default({\n    t: 'number',\n    x: 'number',\n    dx: 'number',\n});\n//# sourceMappingURL=segment.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar note_1 = require(\"./note\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar ChannelMapping = __importStar(require(\"./channels\"));\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Notes holds the {Note} objects in the game.\n * A note object may or may not be playable.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00111:AA\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Notes} using `fromBMSChart()`:\n *\n * ```js\n * var notes = Notes.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can get all notes using `.all()` method\n *\n * ```js\n * notes.all()\n * ```\n */\nvar Notes = /** @class */ (function () {\n    /**\n     * @param {BMSNote[]} notes An array of Note objects\n     */\n    function Notes(notes) {\n        notes.forEach(note_1.Note);\n        this._notes = notes;\n    }\n    /**\n     * Returns the number of notes in this object,\n     * counting both playable and non-playable notes.\n     */\n    Notes.prototype.count = function () {\n        return this._notes.length;\n    };\n    /**\n     * Returns an Array of all notes.\n     */\n    Notes.prototype.all = function () {\n        return this._notes.slice();\n    };\n    /**\n     * Creates a Notes object from a BMSChart.\n     * @param chart the chart to process\n     * @param options options\n     */\n    Notes.fromBMSChart = function (chart, options) {\n        void chart_1.BMSChart;\n        options = options || {};\n        var mapping = options.mapping || Notes.CHANNEL_MAPPING.IIDX_P1;\n        var builder = new BMSNoteBuilder(chart, { mapping: mapping });\n        return builder.build();\n    };\n    Notes.CHANNEL_MAPPING = ChannelMapping;\n    return Notes;\n}());\nexports.Notes = Notes;\nvar BMSNoteBuilder = /** @class */ (function () {\n    function BMSNoteBuilder(chart, options) {\n        this._chart = chart;\n        invariant_1.default(options.mapping, 'Expected options.mapping');\n        invariant_1.default(typeof options.mapping === 'object', 'options.mapping must be object');\n        this._mapping = options.mapping;\n        this._notes = [];\n        this._activeLN = {};\n        this._lastNote = {};\n        this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase();\n        this._channelMapping = this._mapping;\n        this._objects = this._chart.objects.allSorted();\n    }\n    BMSNoteBuilder.prototype.build = function () {\n        var _this = this;\n        this._objects.forEach(function (object) {\n            _this._handle(object);\n        });\n        return new Notes(this._notes);\n    };\n    BMSNoteBuilder.prototype._handle = function (object) {\n        if (object.channel === '01') {\n            this._handleNormalNote(object);\n        }\n        else {\n            switch (object.channel.charAt(0)) {\n                case '1':\n                case '2':\n                    this._handleNormalNote(object);\n                    break;\n                case '5':\n                case '6':\n                    this._handleLongNote(object);\n                    break;\n            }\n        }\n    };\n    BMSNoteBuilder.prototype._handleNormalNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (object.value.toLowerCase() === this._lnObj) {\n            if (this._lastNote[channel]) {\n                this._lastNote[channel].endBeat = beat;\n            }\n        }\n        else {\n            var note = {\n                beat: beat,\n                endBeat: undefined,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n            this._lastNote[channel] = note;\n            this._notes.push(note);\n        }\n    };\n    BMSNoteBuilder.prototype._handleLongNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (this._activeLN[channel]) {\n            var note = this._activeLN[channel];\n            note.endBeat = beat;\n            this._notes.push(note);\n            delete this._activeLN[channel];\n        }\n        else {\n            this._activeLN[channel] = {\n                beat: beat,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n        }\n    };\n    BMSNoteBuilder.prototype._getBeat = function (object) {\n        return this._chart.measureToBeat(object.measure, object.fraction);\n    };\n    BMSNoteBuilder.prototype._getColumn = function (channel) {\n        return this._channelMapping[channel];\n    };\n    BMSNoteBuilder.prototype._normalizeChannel = function (channel) {\n        return channel.replace(/^5/, '1').replace(/^6/, '2');\n    };\n    return BMSNoteBuilder;\n}());\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Note = data_structure_1.default({\n    beat: 'number',\n    endBeat: data_structure_1.default.maybe('number'),\n    column: data_structure_1.default.maybe('string'),\n    keysound: 'string',\n});\n//# sourceMappingURL=note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IIDX_P1 = {\n    '11': '1',\n    '12': '2',\n    '13': '3',\n    '14': '4',\n    '15': '5',\n    '18': '6',\n    '19': '7',\n    '16': 'SC',\n};\n//# sourceMappingURL=channels.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\nvar precedence = { bpm: 1, stop: 2 };\n/**\n * A Timing represents the timing information of a musical score.\n * A Timing object provides facilities to synchronize between\n * metric time (seconds) and musical time (beats).\n *\n * A Timing are created from a series of actions:\n *\n * - BPM changes.\n * - STOP action.\n */\nvar Timing = /** @class */ (function () {\n    /**\n     * Constructs a Timing with an initial BPM and specified actions.\n     *\n     * Generally, you would use `Timing.fromBMSChart` to create an instance\n     * from a BMSChart, but the constructor may also be used in other situations\n     * unrelated to the BMS file format. (e.g. bmson package)\n     */\n    function Timing(initialBPM, actions) {\n        var state = { bpm: initialBPM, beat: 0, seconds: 0 };\n        var segments = [];\n        segments.push({\n            t: 0,\n            x: 0,\n            dx: state.bpm / 60,\n            bpm: state.bpm,\n            inclusive: true,\n        });\n        actions = actions.slice();\n        actions.sort(function (a, b) {\n            return a.beat - b.beat || precedence[a.type] - precedence[b.type];\n        });\n        actions.forEach(function (action) {\n            var beat = action.beat;\n            var seconds = state.seconds + ((beat - state.beat) * 60) / state.bpm;\n            switch (action.type) {\n                case 'bpm':\n                    state.bpm = action.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    break;\n                case 'stop':\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: 0,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    seconds += ((action.stopBeats || 0) * 60) / state.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: false,\n                    });\n                    break;\n                default:\n                    throw new Error('Unrecognized segment object!');\n            }\n            state.beat = beat;\n            state.seconds = seconds;\n        });\n        this._speedcore = new speedcore_1.Speedcore(segments);\n        this._eventBeats = lodash_1.uniq(lodash_1.map(actions, function (action) { return action.beat; }));\n    }\n    /**\n     * Convert the given beat into seconds.\n     * @param {number} beat\n     */\n    Timing.prototype.beatToSeconds = function (beat) {\n        return this._speedcore.t(beat);\n    };\n    /**\n     * Convert the given second into beats.\n     * @param {number} seconds\n     */\n    Timing.prototype.secondsToBeat = function (seconds) {\n        return this._speedcore.x(seconds);\n    };\n    /**\n     * Returns the BPM at the specified beat.\n     * @param {number} beat\n     */\n    Timing.prototype.bpmAtBeat = function (beat) {\n        return this._speedcore.segmentAtX(beat).bpm;\n    };\n    /**\n     * Returns an array representing the beats where there are events.\n     */\n    Timing.prototype.getEventBeats = function () {\n        return this._eventBeats;\n    };\n    /**\n     * Creates a Timing instance from a BMSChart.\n     * @param {BMSChart} chart\n     */\n    Timing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var actions = [];\n        chart.objects.all().forEach(function (object) {\n            var bpm;\n            var beat = chart.measureToBeat(object.measure, object.fraction);\n            if (object.channel === '03') {\n                bpm = parseInt(object.value, 16);\n                actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '08') {\n                bpm = +chart.headers.get('bpm' + object.value);\n                if (!isNaN(bpm))\n                    actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '09') {\n                var stopBeats = +chart.headers.get('stop' + object.value) / 48;\n                actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats });\n            }\n        });\n        return new Timing(+chart.headers.get('bpm') || 60, actions);\n    };\n    return Timing;\n}());\nexports.Timing = Timing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_1 = require(\"../util/match\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A SongInfo represents the song info, such as title, artist, genre.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #TITLE Exargon [HYPER]\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {SongInfo} using `fromBMSChart()`:\n *\n * ```js\n * var info = SongInfo.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can query the song information by accessing its properties.\n *\n * ```js\n * info.title     // => 'Exargon'\n * info.subtitles // => ['HYPER']\n * ```\n */\nvar SongInfo = /** @class */ (function () {\n    /**\n     * Constructs a SongInfo with given data\n     * @param info the properties to set on this new instance\n     */\n    function SongInfo(info) {\n        /** the song title */\n        this.title = 'NO TITLE';\n        /** the song artist */\n        this.artist = 'NO ARTIST';\n        /** the song genre */\n        this.genre = 'NO GENRE';\n        /**\n         * the song's subtitles, one line per element.\n         * The subtitle may be used to represent the difficulty name,\n         * such as NORMAL, HYPER, ANOTHER.\n         * @type {string[]}\n         */\n        this.subtitles = [];\n        /**\n         * the song's other artists, one artist per element.\n         * @type {string[]}\n         */\n        this.subartists = [];\n        /**\n         * the difficulty.\n         * Meaning of the number is same as BMS's [`#DIFFICULTY`](http:*hitkey.nekokan.dyndns.info/cmds.htm#DIFFICULTY) header.\n         *\n         * | difficulty | meaning  |\n         * | ----------:|:--------:|\n         * |          1 | BEGINNER |\n         * |          2 | NORMAL   |\n         * |          3 | HYPER    |\n         * |          4 | ANOTHER  |\n         * |          5 | INSANE   |\n         */\n        this.difficulty = 0;\n        /**\n         * the level of the song.\n         * When converted from a BMS chart, this is the value of `#PLAYLEVEL` header.\n         */\n        this.level = 0;\n        if (info)\n            lodash_1.assign(this, info);\n    }\n    /**\n     * Constructs a new {SongInfo} object from a {BMSChart}.\n     * @param chart A {BMSChart} to construct a {SongInfo} from\n     */\n    SongInfo.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var info = {};\n        var title = chart.headers.get('title');\n        var artist = chart.headers.get('artist');\n        var genre = chart.headers.get('genre');\n        var difficulty = +chart.headers.get('difficulty') || 0;\n        var level = +chart.headers.get('playlevel') || 0;\n        var subtitles = chart.headers.getAll('subtitle');\n        var subartists = chart.headers.getAll('subartist');\n        if (typeof title === 'string' && !subtitles) {\n            var extractSubtitle = function (m) {\n                title = m[1];\n                subtitles = [m[2]];\n            };\n            match_1.match(title)\n                .when(/^(.*\\S)\\s*-(.+?)-$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*<(.+?)>$/, extractSubtitle);\n        }\n        if (title)\n            info.title = title;\n        if (artist)\n            info.artist = artist;\n        if (genre)\n            info.genre = genre;\n        if (subtitles)\n            info.subtitles = subtitles;\n        if (subartists)\n            info.subartists = subartists;\n        if (difficulty)\n            info.difficulty = difficulty;\n        if (level)\n            info.level = level;\n        return new SongInfo(info);\n    };\n    return SongInfo;\n}());\nexports.SongInfo = SongInfo;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Public: A module that exposes {Keysounds}\n/* module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A simple mapping between keysounds ID and the file name.\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #WAVAA cat.wav\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Keysounds} using `fromBMSChart()`:\n *\n * ```js\n * var keysounds = Keysounds.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can retrieve the filename using `.get()`:\n *\n * ```js\n * keysounds.get('aa') // => 'cat.wav'\n * ```\n */\nvar Keysounds = /** @class */ (function () {\n    function Keysounds(map) {\n        this._map = map;\n    }\n    /**\n     * Returns the keysound file at the specified ID.\n     * @param id the two-character keysound ID\n     * @returns the sound filename\n     */\n    Keysounds.prototype.get = function (id) {\n        return this._map[id.toLowerCase()];\n    };\n    /**\n     * Returns an array of unique filenames in this Keysounds object.\n     * @returns filenames array\n     */\n    Keysounds.prototype.files = function () {\n        return lodash_1.uniq(lodash_1.values(this._map));\n    };\n    /**\n     * Returns a mapping from keysound ID to keysound filename.\n     *\n     * **Warning:** This method returns the internal data structure used\n     * in this Keysounds object. Do not mutate!\n     */\n    Keysounds.prototype.all = function () {\n        return this._map;\n    };\n    /**\n     * Constructs a new {Keysounds} object from a {BMSChart}.\n     * @param chart\n     */\n    Keysounds.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var map = {};\n        chart.headers.each(function (name, value) {\n            var match = name.match(/^wav(\\S\\S)$/i);\n            if (!match)\n                return;\n            map[match[1].toLowerCase()] = value;\n        });\n        return new Keysounds(map);\n    };\n    return Keysounds;\n}());\nexports.Keysounds = Keysounds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Positioning represents the relation between song beats and\n * display position, and provides a way to convert between them.\n *\n * In some rhythm games, the amount of scrolling per beat may be different.\n * StepMania’s `#SCROLL` segments is an example.\n */\nvar Positioning = /** @class */ (function () {\n    /**\n     * Constructs a Positioning from the given `segments`.\n     * @param segments\n     */\n    function Positioning(segments) {\n        this._speedcore = new speedcore_1.Speedcore(segments);\n    }\n    /**\n     * Returns the scrolling speed at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.speed = function (beat) {\n        return this._speedcore.dx(beat);\n    };\n    /**\n     * Returns the total elapsed scrolling amount at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.position = function (beat) {\n        return this._speedcore.x(beat);\n    };\n    /**\n     * Creates a {Positioning} object from the {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {Positioning} from\n     */\n    Positioning.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        var x = 0;\n        segments.push({\n            t: 0,\n            x: x,\n            dx: 1,\n            inclusive: true,\n        });\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SC') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var dx = +chart.headers.get('scroll' + object.value);\n                if (isNaN(dx))\n                    return;\n                var previous = segments[segments.length - 1];\n                x += (beat - previous.t) * previous.dx;\n                if (beat === 0 && segments.length === 1) {\n                    segments[0].dx = dx;\n                }\n                else {\n                    segments.push({\n                        t: beat,\n                        x: x,\n                        dx: dx,\n                        inclusive: true,\n                    });\n                }\n            }\n        });\n        return new Positioning(segments);\n    };\n    return Positioning;\n}());\nexports.Positioning = Positioning;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * Public: A Spacing represents the relation between song beats and\n * notes spacing.\n *\n * In some rhythm games, such as Pump It Up!,\n * the speed (note spacing factor) may be adjusted by the notechart.\n * StepMania’s `#SPEED` segments is an example.\n */\nvar Spacing = /** @class */ (function () {\n    /**\n     * Constructs a Spacing from the given `segments`.\n     */\n    function Spacing(segments) {\n        if (segments.length > 0) {\n            this._speedcore = new speedcore_1.Speedcore(segments);\n        }\n    }\n    /**\n     * Returns the note spacing factor at the specified beat.\n     * @param beat the beat\n     */\n    Spacing.prototype.factor = function (beat) {\n        if (this._speedcore) {\n            return this._speedcore.x(beat);\n        }\n        else {\n            return 1;\n        }\n    };\n    /**\n     * Creates a {Spacing} object from the {BMSChart}.\n     *\n     * ## `#SPEED` and `#xxxSP`\n     *\n     * Speed is defined as keyframes. These keyframes will be linearly interpolated.\n     *\n     * ```\n     * #SPEED01 1.0\n     * #SPEED02 2.0\n     *\n     * #001SP:01010202\n     * ```\n     *\n     * In this example, the note spacing factor will gradually change\n     * from 1.0x at beat 1 to 2.0x at beat 2.\n     *\n     * Returns a {Spacing} object\n     *\n     * @param {BMSChart} chart the chart\n     */\n    Spacing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SP') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var factor = +chart.headers.get('speed' + object.value);\n                if (isNaN(factor))\n                    return;\n                if (segments.length > 0) {\n                    var previous = segments[segments.length - 1];\n                    previous.dx = (factor - previous.x) / (beat - previous.t);\n                }\n                segments.push({\n                    t: beat,\n                    x: factor,\n                    dx: 0,\n                    inclusive: true,\n                });\n            }\n        });\n        if (segments.length > 0) {\n            segments.unshift({\n                t: 0,\n                x: segments[0].x,\n                dx: 0,\n                inclusive: true,\n            });\n        }\n        return new Spacing(segments);\n    };\n    return Spacing;\n}());\nexports.Spacing = Spacing;\n//# sourceMappingURL=index.js.map","import { LoggingFunction } from './types'\n\nexport default class ResourceLogging {\n  private buffer: string[] | null = []\n  private loggingFunction: LoggingFunction = text => {\n    if (this.buffer) this.buffer.push(text)\n  }\n  public log: LoggingFunction = text => {\n    this.loggingFunction(text)\n  }\n  setLoggingFunction = (fn: LoggingFunction) => {\n    this.loggingFunction = fn\n    if (this.buffer) {\n      this.buffer.forEach(text => fn(text))\n      this.buffer = null\n    }\n  }\n}\n","import { Archive } from 'libarchive.js/main.js'\nimport { FileEntry } from './types'\n\nArchive.init({\n  workerUrl: '/vendor/libarchive.js-1.3.0/dist/worker-bundle.js',\n})\n\nexport async function unarchive(file: File): Promise<FileEntry[]> {\n  const out: FileEntry[] = []\n  const archive = await Archive.open(file)\n  const extracted = await archive.extractFiles()\n  const traverse = (tree: any) => {\n    for (const key of Object.keys(tree)) {\n      if (tree[key] instanceof File) {\n        out.push({ name: key, file: tree[key] })\n      } else if (tree[key] && typeof tree[key] === 'object') {\n        traverse(tree[key])\n      }\n    }\n  }\n  traverse(extracted)\n  return out\n}\n","import * as ProgressUtils from 'bemuse/progress/utils'\nimport { IResources, FileEntry, LoggingFunction, IResource } from './types'\nimport ResourceLogging from './resource-logging'\nimport { unarchive } from './unarchiver'\nimport readBlob from 'bemuse/utils/read-blob'\nimport Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\n\nexport const ARCHIVE_REGEXP = /\\.(?:zip|rar|7z|tar(?:\\.(?:gz|bz2))?)/i\n\n// http://nekokan.dyndns.info/tool/DropboxReplacer/index.html\nconst DROPBOX_REGEXP = /https?:\\/\\/(?:(?:www|dl)\\.dropbox\\.com|dl\\.dropboxusercontent\\.com)\\/(sh?)\\/([^?]*)(.*)?$/\n\n/**\n * A resource provider for custom songs.\n * It may retrieve the files from, e.g., a drag and drop event or an `?archive` flag.\n */\nexport interface CustomResourceProvider {\n  getFiles(loggingFunction: LoggingFunction): PromiseLike<FileEntry[]>\n}\n\n/**\n * An IResources for songs provided by a CustomResourceProvider.\n */\nexport class CustomSongResources implements IResources {\n  private _logging = new ResourceLogging()\n  private _files: PromiseLike<FileEntry[]>\n  public setLoggingFunction = this._logging.setLoggingFunction\n\n  constructor(provider: CustomResourceProvider) {\n    this._files = Promise.resolve(provider.getFiles(this._logging.log)).then(\n      files => unarchiveIfNeeded(files, this._logging.log)\n    )\n  }\n  file(name: string) {\n    return this._files.then(function(files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList() {\n    return Promise.resolve(this._files).map(f => f.name)\n  }\n}\n\nexport class FileResource implements IResource {\n  constructor(private _file: File) {}\n  read(progress: Progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl() {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name() {\n    return this._file.name\n  }\n}\n\n/**\n * If only 1 FileEntry is present and it is an archive file, extract it.\n */\nexport async function unarchiveIfNeeded(\n  files: FileEntry[],\n  log: LoggingFunction\n): Promise<FileEntry[]> {\n  if (files.length !== 1) return files\n  const fileEntry = files[0]\n  if (!fileEntry.name.match(ARCHIVE_REGEXP)) {\n    return files\n  }\n  log('Archive file detected! Now unarchiving…')\n  return unarchive(fileEntry.file)\n}\n\n/**\n * Downloads a URL as a FileEntry.\n */\nexport async function downloadFileEntryFromURL(\n  url: string,\n  log: LoggingFunction\n): Promise<FileEntry> {\n  const name = url\n    .replace(/[?#].*/, '')\n    .split('/')\n    .pop()!\n\n  // Try Dropbox URL replacement\n  const match = url.match(DROPBOX_REGEXP)\n  if (match) {\n    url = `https://dl.dropboxusercontent.com/${match[1]}/${match[2]}`\n  }\n\n  const progress = new Progress()\n  let lastTime = 0\n  progress.watch(() => {\n    if (Date.now() < lastTime + 5e3) return\n    log(`Downloading: ${progress}`)\n    lastTime = Date.now()\n  })\n  const blob = await download(url).as('blob', progress)\n  return { name, file: blob }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar headers_1 = require(\"./headers\");\nvar objects_1 = require(\"./objects\");\nvar time_signatures_1 = require(\"../time-signatures\");\n/**\n * A BMSChart holds information about a particular BMS notechart.\n * Note that a BMSChart does not contain any information about `#RANDOM`,\n * as they are already processed after compilation.\n *\n * There is not many useful things you can do with a BMSChart other than\n * accessing the header fields and objects inside it.\n *\n * To extract information from a BMSChart,\n * please look at the documentation of higher-level classes,\n * such as {Keysounds}, {Notes}, and {Timing}.\n */\nvar BMSChart = /** @class */ (function () {\n    function BMSChart() {\n        /**\n         * {BMSHeaders} representing the BMS-specific headers of this notechart\n         */\n        this.headers = new headers_1.BMSHeaders();\n        /**\n         * {BMSObjects} representing all objects of this notechart\n         */\n        this.objects = new objects_1.BMSObjects();\n        /**\n         * {TimeSignatures} representing the time signature information in this chart\n         */\n        this.timeSignatures = new time_signatures_1.TimeSignatures();\n    }\n    /**\n     * Public: Converts measure number and fraction into beat.\n     * A single beat is equivalent to a quarter note in common time signature.\n     *\n     * @param {number} measure representing the measure number, starting from 0\n     * @param {number} fraction representing the fraction inside that measure, from 0 to 1\n     */\n    BMSChart.prototype.measureToBeat = function (measure, fraction) {\n        return this.timeSignatures.measureToBeat(measure, fraction);\n    };\n    return BMSChart;\n}());\nexports.BMSChart = BMSChart;\n//# sourceMappingURL=chart.js.map","import { IResources, FileEntry, LoggingFunction } from './types'\nimport {\n  CustomSongResources,\n  ARCHIVE_REGEXP,\n  downloadFileEntryFromURL,\n} from './custom-song-resources'\n\n// TODO [#634]: Remove the `DndResources` class and have users of this class create a `CustomSongResources` directly.\n//\n// The original implementation of DndResources class has been extracted\n// into a CustomSongResources superclass in commit cc6a6e70586487ef476890f5a7911837186a7a32,\n// so that part of its logic can be re-used in other contexts, such as in commit ba9e15bab72fec17a144e40433cb3a4ffd31db5b.\n//\n// Now this `DndResources` class is really dumb and we want to prefer composition over inheritance.\n// This class should be removed.\nexport class DndResources extends CustomSongResources implements IResources {\n  constructor(event: DragEvent) {\n    super({\n      getFiles: log => getFilesFromEvent(event, log),\n    })\n  }\n}\n\nexport default DndResources\n\nasync function getFilesFromEvent(\n  event: DragEvent,\n  log: LoggingFunction\n): Promise<FileEntry[]> {\n  let out: FileEntry[] = []\n  const dataTransfer = event.dataTransfer\n  if (!dataTransfer) {\n    throw new Error('Expect event.dataTransfer to be present')\n  }\n  if (dataTransfer.types.indexOf('text/uri-list') > -1) {\n    let url = dataTransfer\n      .getData('text/uri-list')\n      .split(/\\r\\n|\\r|\\n/)\n      .filter(t => t && !t.startsWith('#'))[0]\n    if (ARCHIVE_REGEXP.test(url && url.replace(/[?#].*/, ''))) {\n      log('Link to archive file detected. Trying to download')\n      return [await downloadFileEntryFromURL(url, log)]\n    }\n  } else if (dataTransfer.items) {\n    for (let item of Array.from(dataTransfer.items)) {\n      await readItem(item)\n    }\n  } else if (dataTransfer.files) {\n    for (let file of Array.from(dataTransfer.files)) {\n      addFile(file)\n    }\n  }\n  return out\n\n  async function readItem(item: DataTransferItem) {\n    let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n    if (entry) {\n      await readEntry(entry)\n    } else {\n      let file = item.getAsFile && item.getAsFile()\n      if (file) addFile(file)\n    }\n  }\n\n  function readEntry(entry: any) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile(entry: any) {\n    return new Promise<File>((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  async function readDirectory(dir: any) {\n    let entries = []\n    let reader = dir.createReader()\n    let readMore = () =>\n      new Promise<any>((resolve, reject) => {\n        reader.readEntries(resolve, reject)\n      })\n    for (;;) {\n      let results = await readMore()\n      if (!results || results.length === 0) break\n      entries.push(...Array.from(results))\n    }\n    for (let entry of entries) {\n      await readEntry(entry)\n    }\n  }\n\n  function addFile(file: File) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segment_1 = require(\"./segment\");\n/**\n * Speedcore is a small internally-used library.\n * A Speedcore represents a single dimensional keyframed linear motion\n * (as in equation x = f(t)), and is useful when working\n * with BPM changes ({Timing}), note spacing factor ({Spacing}), or scrolling\n * segments ({Positioning}).\n * A Speedcore is constructed from an array of Segments.\n *\n * A {Segment} is defined as `{ t, x, dx }`, such that:\n *\n * * speedcore.x(segment.t) = segment.x\n * * speedcore.t(segment.x) = segment.t\n * * speedcore.x(segment.t + dt) = segment.x + (segment.dx / dt)\n *\n *\n * ## Explanation\n *\n * One way to think of these segments is to think about tempo changes, where:\n *\n * * `t` is the elapsed time (in seconds) since song start.\n * * `x` is the elapsed beat since song start.\n * * `dx` is the amount of `x` increase per `t`. In this case, it has the\n *   unit of beats per second.\n *\n * For example, consider a song that starts at 140 BPM.\n * 32 beats later, the tempo changes to 160 BPM.\n * 128 beats later (at beat 160), the tempo reverts to 140 BPM.\n *\n * We can derive three segments:\n *\n * 1. At time 0, we are at beat 0, and moving at 2.333 beats per second.\n * 2. At 13.714s, we are at beat 32, moving at 2.667 beats per second.\n * 3. At 61.714s, we are at beat 160, moving at 2.333 beats per second.\n *\n * This maps out to this data structure:\n *\n * ```js\n * [ [0]: { t:  0.000,  x:   0,  dx: 2.333,  inclusive: true },\n *   [1]: { t: 13.714,  x:  32,  dx: 2.667,  inclusive: true },\n *   [2]: { t: 61.714,  x: 160,  dx: 2.333,  inclusive: true } ]\n * ```\n *\n * With this data, it is possible to find out the value of `x` at any given `t`.\n *\n * For example, to answer the question, “what is the beat number at 30s?”\n * First, we find the segment with maximum value of `t < 30`, and we get\n * the segment `[1]`.\n *\n * We calculate `segment.x + (t - segment.t) * segment.dx`.\n * The result beat number is (32 + (30 - 13.714) * 2.667) = 75.435.\n *\n * We can also perform the reverse calculation in a similar way, by reversing\n * the equation.\n *\n * Interestingly, we can use these segments to represent the effect of\n * both BPM changes and STOP segments in the same array.\n * For example, a 150-BPM song with a 2-beat stop in the 32nd beat\n * can be represented like this:\n *\n * ```js\n * [ [0]: { t:  0.0,  x:  0,  dx: 2.5,  inclusive: true  },\n *   [1]: { t: 12.8,  x: 32,  dx: 0,    inclusive: true  },\n *   [2]: { t: 13.6,  x: 32,  dx: 2.5,  inclusive: false } ]\n * ```\n */\nvar Speedcore = /** @class */ (function () {\n    /**\n     * Constructs a new `Speedcore` from given segments.\n     */\n    function Speedcore(segments) {\n        segments.forEach(segment_1.Segment);\n        this._segments = segments;\n    }\n    Speedcore.prototype._reached = function (index, targetFn, position) {\n        if (index >= this._segments.length)\n            return false;\n        var segment = this._segments[index];\n        var target = targetFn(segment);\n        return segment.inclusive ? position >= target : position > target;\n    };\n    Speedcore.prototype._segmentAt = function (targetFn, position) {\n        for (var i = 0; i < this._segments.length; i++) {\n            if (!this._reached(i + 1, targetFn, position))\n                return this._segments[i];\n        }\n        throw new Error('Unable to find a segment matching a criteria (this should never happen)!');\n    };\n    Speedcore.prototype.segmentAtX = function (x) {\n        return this._segmentAt(X, x);\n    };\n    Speedcore.prototype.segmentAtT = function (t) {\n        return this._segmentAt(T, t);\n    };\n    /**\n     * Calculates the _t_, given _x_.\n     */\n    Speedcore.prototype.t = function (x) {\n        var segment = this.segmentAtX(x);\n        return segment.t + (x - segment.x) / (segment.dx || 1);\n    };\n    /**\n     * Calculates the _x_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.x = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.x + (t - segment.t) * segment.dx;\n    };\n    /**\n     * Finds the _dx_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.dx = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.dx;\n    };\n    return Speedcore;\n}());\nexports.Speedcore = Speedcore;\nvar T = function (segment) { return segment.t; };\nvar X = function (segment) { return segment.x; };\n//# sourceMappingURL=index.js.map","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function(this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  let queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(url) {\n  return {\n    as(type, progress) {\n      return new Promise((resolve, reject) => {\n        var xh = new XMLHttpRequest()\n        xh.open('GET', url, true)\n        xh.responseType = type\n        xh.onload = () => {\n          if (+xh.status === 200) {\n            resolve(xh.response)\n          } else {\n            reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n          }\n        }\n        xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n        if (progress) {\n          progress.formatter = BYTES_FORMATTER\n          xh.onprogress = e => progress.report(e.loaded, e.total)\n        }\n        xh.send(null)\n      })\n    },\n  }\n}\n\nexport default download\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A subset of lodash that we actually use.\nvar lodash_uniq_1 = __importDefault(require(\"lodash.uniq\"));\nexports.uniq = lodash_uniq_1.default;\nvar lodash_map_1 = __importDefault(require(\"lodash.map\"));\nexports.map = lodash_map_1.default;\nvar lodash_values_1 = __importDefault(require(\"lodash.values\"));\nexports.values = lodash_values_1.default;\nvar lodash_assign_1 = __importDefault(require(\"lodash.assign\"));\nexports.assign = lodash_assign_1.default;\n//# sourceMappingURL=lodash.js.map"],"sourceRoot":""}
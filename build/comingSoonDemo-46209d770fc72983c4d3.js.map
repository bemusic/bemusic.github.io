{"version":3,"sources":["file:///home/circleci/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/packages/bms/lib/index.js","file:///home/circleci/bemuse/src/progress/index.ts","file:///home/circleci/bemuse/packages/bms/lib/util/match.js","file:///home/circleci/bemuse/packages/bms/lib/bms/headers.js","file:///home/circleci/bemuse/packages/bms/lib/bms/objects.js","file:///home/circleci/bemuse/packages/bms/lib/time-signatures/index.js","file:///home/circleci/bemuse/src/progress/Progress.ts","file:///home/circleci/bemuse/src/utils/observable.ts","file:///home/circleci/bemuse/src/utils/callbacks.ts","file:///home/circleci/bemuse/src/audio-context/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss?8185","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss","file:///home/circleci/bemuse/src/coming-soon/demo/template.jade","file:///home/circleci/bemuse/src/sampling-master/index.js","file:///home/circleci/bemuse/src/sampling-master/ogg.ts","file:///home/circleci/bemuse/packages/bms/lib/reader/index.web.js","file:///home/circleci/bemuse/packages/bms/lib/reader/getReaderOptionsFromFilename.js","file:///home/circleci/bemuse/packages/bms/lib/compiler/index.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/segment.js","file:///home/circleci/bemuse/packages/bms/lib/notes/index.js","file:///home/circleci/bemuse/packages/bms/lib/notes/note.js","file:///home/circleci/bemuse/packages/bms/lib/notes/channels.js","file:///home/circleci/bemuse/packages/bms/lib/timing/index.js","file:///home/circleci/bemuse/packages/bms/lib/song-info/index.js","file:///home/circleci/bemuse/packages/bms/lib/keysounds/index.js","file:///home/circleci/bemuse/packages/bms/lib/positioning/index.js","file:///home/circleci/bemuse/packages/bms/lib/spacing/index.js","file:///home/circleci/bemuse/packages/bms/lib/bms/chart.js","file:///home/circleci/bemuse/src/resources/unarchiver.ts","file:///home/circleci/bemuse/src/resources/resource-logging.ts","file:///home/circleci/bemuse/src/resources/dnd-resources.ts","file:///home/circleci/bemuse/packages/bms/lib/speedcore/index.js","file:///home/circleci/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/src/progress/utils.ts","file:///home/circleci/bemuse/src/utils/download.js","file:///home/circleci/bemuse/packages/bms/lib/util/lodash.js"],"names":["__webpack_exports__","blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","__export","m","p","exports","hasOwnProperty","__importStar","this","mod","__esModule","k","Object","call","defineProperty","value","Reader","__webpack_require__","Compiler","_Progress__WEBPACK_IMPORTED_MODULE_0__","match","text","matched","when","pattern","callback","else","BMSHeaders","_data","_dataAll","prototype","each","i","get","name","toLowerCase","getAll","set","key","push","BMSObjects","_objects","add","object","channel","length","test","measure","fraction","all","slice","allSorted","list","sort","a","b","TimeSignatures","_values","getBeats","measureToBeat","sum","d","Progress","bemuse_utils_observable__WEBPACK_IMPORTED_MODULE_0__","[object Object]","current","undefined","total","_observable","extra","notify","f","watch","progress","formatter","bemuse_utils_callbacks__WEBPACK_IMPORTED_MODULE_0__","_callbacks","_value","init","_nextId","args","callbacks","id","audio_context__WEBPACK_IMPORTED_MODULE_0__","audio_context__WEBPACK_IMPORTED_MODULE_0___default","n","latencyHint","r","Buffer","main","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","bms__WEBPACK_IMPORTED_MODULE_2__","bemuse_resources_dnd_resources__WEBPACK_IMPORTED_MODULE_3__","bemuse_sampling_master__WEBPACK_IMPORTED_MODULE_4__","co__WEBPACK_IMPORTED_MODULE_5__","co__WEBPACK_IMPORTED_MODULE_5___default","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_6__","_template_jade__WEBPACK_IMPORTED_MODULE_7__","_template_jade__WEBPACK_IMPORTED_MODULE_7___default","element","on","handler","el","appendTo","find","hide","e","preventDefault","dndLoader","originalEvent","loader","master","$log","$play","$sampler","log","t","loadKeysound","file","catch","replace","then","read","fileList","bmsFile","filter","arraybuffer","buffer","from","Uint8Array","promisify","readAsync","chart","compile","timing","fromBMSChart","notes","info","JSON","stringify","samples","promises","completed","note","keysound","headers","sample","console","error","tap","loadSamples","show","unmute","setTimeout","span","instance","play","scrollTop","scrollHeight","onstop","addClass","beatToSeconds","beat","done","go","ui","off","content","module","options","hmr","transform","insertInto","locals","buf","join","FADE_LENGTH","unmuteAudio","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_0__","bemuse_utils_read_blob__WEBPACK_IMPORTED_MODULE_1__","_ogg__WEBPACK_IMPORTED_MODULE_2__","dummyAudioTag","document","createElement","needsVorbisDecoder","canPlayType","SoundGroup","samplingMaster","volume","_master","_gain","audioContext","createGain","gain","connect","destination","disconnect","Sample","audioBuffer","_buffer","delay","PlayInstance","context","source","createBufferSource","onended","stop","node","group","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","playbackRate","random","pow","ctx","osc","createOscillator","frequency","resume","_audioContext","_samples","_groups","_instances","Set","_destination","_destroyed","destroy","blobOrArrayBuffer","_coerceToArrayBuffer","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","numberOfChannels","decode","ArrayBuffer","byteLength","view","decodeAudioData","delete","decoderPromise","limit","throat__WEBPACK_IMPORTED_MODULE_0___default","decodeOGG","stbvorbis","bind","ns","default","src","eval","buffers","sampleRate","totalLength","data","eof","decodedChunks","createBuffer","channels","Array","fill","map","_","ch","ChannelDataWriter","getChannelData","chunk","forEach","audioSamples","channelIndex","write","doDecodeOGG","offset","chardet","_i","arguments","charset","forceEncoding","detect","Blob","getReaderOptionsFromFilename_1","getReaderOptionsFromFilename","filename","match_1","chart_1","matchers","bms","if","endif","timeSignature","header","dtx","BMSChart","rng","floor","matcher","format","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","warnings","split","line","trim","index","eachLine","lineNumber","flow","charAt","pop","skipped","timeSignatures","string","items","substr","objects","handleChannelSentence","message","warn","__importDefault","data_structure_1","Segment","x","dx","note_1","invariant_1","ChannelMapping","Notes","Note","_notes","count","mapping","CHANNEL_MAPPING","IIDX_P1","BMSNoteBuilder","build","_chart","_mapping","_activeLN","_lastNote","_lnObj","_channelMapping","_this","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","_getBeat","endBeat","column","_getColumn","maybe","11","12","13","14","15","18","19","16","speedcore_1","lodash_1","precedence","bpm","Timing","initialBPM","actions","state","seconds","segments","inclusive","action","stopBeats","_speedcore","Speedcore","_eventBeats","uniq","secondsToBeat","bpmAtBeat","segmentAtX","getEventBeats","parseInt","isNaN","SongInfo","title","artist","genre","subtitles","subartists","difficulty","level","assign","extractSubtitle","Keysounds","_map","files","values","Positioning","speed","position","previous","Spacing","factor","unshift","headers_1","objects_1","time_signatures_1","workerUrl","ResourceLogging","loggingFunction","setLoggingFunction","fn","ARCHIVE_REGEXP","DROPBOX_REGEXP","dnd_resources_FileResource","_file","utils","read_blob","URL","createObjectURL","event","_logging","_files","out","dataTransfer","types","indexOf","url","getData","startsWith","progress_0","lastTime","Date","now","download","addFile","item","readItem","entry","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","entries","createReader","results","readEntries","readDirectory","getFilesFromEvent","fileEntry","extracted","open","extractFiles","traverse","tree","keys","File","unarchive","unarchiveIfNeeded","segment_1","_segments","_reached","targetFn","segment","target","_segmentAt","X","segmentAtT","T","BYTES_FORMATTER","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","bytes__WEBPACK_IMPORTED_MODULE_0__","bytes__WEBPACK_IMPORTED_MODULE_0___default","wrap","toFixed","fixed","atomic","wrapPromise","simultaneous","bemuse_progress_formatters__WEBPACK_IMPORTED_MODULE_0__","loaded","report","promise","hasByteLength","apply","to","queue","unsubscribe","update","shift","xh","XMLHttpRequest","responseType","status","response","onprogress","send","lodash_uniq_1","lodash_map_1","lodash_values_1","lodash_assign_1"],"mappings":"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","file":"build/comingSoonDemo-46209d770fc72983c4d3.js","sourcesContent":["export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function(resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function() {\n          resolve(reader.result)\n        }\n        reader.onerror = function() {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","\"use strict\";\n/**\n * Public: The `bms` package is a library for working with rhythm game data.\n *\n * Although this library’s name suggests that it is for BMS file format,\n * almost every part can be used standalone.\n *\n * This package contains:\n *\n * - __Modules that reads and parses BMS files:__\n *\n *   - {Reader} reads the BMS file from a {Buffer}, detects the character set\n *     and decodes the buffer using that character set into a {String}.\n *   - {Compiler} reads the BMS source from a {String}, and converts into\n *     {BMSChart}, an internal representation of a BMS notechart.\n *\n * - __Classes for representing a BMS notechart.__\n *   These module stores the data as close to the BMS file format as possible.\n *\n *   Almost no musical interpretation is made.\n *   For example, a BPM change is simply represented using a\n *   BMSObject with `channel` = `03` or `08`.\n *\n *   - {BMSChart} is composed of {BMSHeaders}, {BMSObjects}, and {TimeSignatures}.\n *   - {BMSHeaders} represents the header sentences in a BMS file.\n *   - {BMSObjects} represents the objects in a BMS file.\n *   - {BMSObject} represents a single object.\n *\n * - __Classes that represent different aspects of a notechart.__\n *   Instance of these classes may be created from a {BMSChart},\n *   but they can be used in a standalone manner as well.\n *\n *   This makes this library very flexible,\n *   and able to accommodate different formats of notechart.\n *   For example, see the [bmson](https: *github.com/bemusic/bmson) package.\n *\n *   It’s also possible to use these classes in context other than music gaming,\n *   for example, you can use these classes to help building a music player\n *   that requires precise synchronization between beats.\n *\n *   - {TimeSignatures} represents a collection of time signatures\n *     in a musical score, and lets you convert the measure number and fraction\n *     into beat number.\n *   - {Timing} represents the timing information in a musical score,\n *     and provides methods to convert between musical time (beats) and\n *     metric time (seconds).\n *   - {SongInfo} represents the basic song information,\n *     such as title, artist, and genre.\n *   - {Notes} represents the sound objects inside your notechart.\n *   - {Keysounds} represents a mapping between keysound ID and filename.\n *   - {Positioning} represents a mapping between beat and in-game position.\n *     Some rhythm game lets chart author control the amount of scrolling\n *     per beat. In StepMania 5, this is called the scroll segments.\n *   - {Spacing} represents a mapping between beat and note spacing.\n *     Some rhythm game lets chart author change the note spacing (HI-SPEED)\n *     dynamically. In StepMania 5, this is called the speed segments.\n *\n * - __Low-level utility classes:__\n *\n *   - {Speedcore} represents a linear animation.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Reader = __importStar(require(\"./reader\"));\nexports.Reader = Reader;\nvar Compiler = __importStar(require(\"./compiler\"));\nexports.Compiler = Compiler;\n__export(require(\"./bms/chart\"));\n__export(require(\"./bms/headers\"));\n__export(require(\"./bms/objects\"));\n__export(require(\"./speedcore\"));\n__export(require(\"./time-signatures\"));\n__export(require(\"./notes\"));\n__export(require(\"./timing\"));\n__export(require(\"./song-info\"));\n__export(require(\"./keysounds\"));\n__export(require(\"./positioning\"));\n__export(require(\"./spacing\"));\n//# sourceMappingURL=index.js.map","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction match(text) {\n    var matched = false;\n    return {\n        when: function (pattern, callback) {\n            if (matched)\n                return this;\n            var match = text.match(pattern);\n            if (match) {\n                matched = true;\n                callback(match);\n            }\n            return this;\n        },\n        else: function (callback) {\n            if (matched)\n                return this;\n            callback();\n        },\n    };\n}\nexports.match = match;\n//# sourceMappingURL=match.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A BMSHeader holds the header information in a BMS file, such as\n * `#TITLE`, `#ARTIST`, or `#BPM`.\n *\n * You get retrieve a header using the `get()` method:\n *\n * ```js\n * chart.headers.get('title')\n * ```\n *\n * For some header fields that may contain multiple values, such as `#SUBTITLE`,\n * you can get them all using `getAll()`:\n *\n * ```js\n * chart.headers.getAll()\n * ```\n */\nvar BMSHeaders = /** @class */ (function () {\n    function BMSHeaders() {\n        this._data = {};\n        this._dataAll = {};\n    }\n    /**\n     * Iterates through each header field using a callback function.\n     * @param callback will be called for each header field\n     */\n    BMSHeaders.prototype.each = function (callback) {\n        for (var i in this._data) {\n            callback(i, this._data[i]);\n        }\n    };\n    /**\n     * Retrieves the header field’s latest value.\n     * @param name field’s name\n     * @return the field’s latest value\n     */\n    BMSHeaders.prototype.get = function (name) {\n        return this._data[name.toLowerCase()];\n    };\n    /**\n     * Retrieves the header field’s values.\n     * This is useful when a header field is specified multiple times.\n     * @param name field’s name\n     */\n    BMSHeaders.prototype.getAll = function (name) {\n        return this._dataAll[name.toLowerCase()];\n    };\n    /**\n     * Sets the header field’s value.\n     * @param name field’s name\n     * @param value field’s value\n     */\n    BMSHeaders.prototype.set = function (name, value) {\n        var key = name.toLowerCase();\n        this._data[key] = value;\n        (this._dataAll[key] || (this._dataAll[key] = [])).push(value);\n    };\n    return BMSHeaders;\n}());\nexports.BMSHeaders = BMSHeaders;\n//# sourceMappingURL=headers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * BMSObjects holds a collection of objects inside a BMS notechart.\n */\nvar BMSObjects = /** @class */ (function () {\n    function BMSObjects() {\n        this._objects = [];\n    }\n    /**\n     * Adds a new object to this collection.\n     * If an object already exists on the same channel and position,\n     * the object is replaced (except for autokeysound tracks).\n     * @param object the object to add\n     */\n    BMSObjects.prototype.add = function (object) {\n        if (object.channel !== '01') {\n            for (var i = 0; i < this._objects.length; i++) {\n                var test = this._objects[i];\n                if (test.channel === object.channel &&\n                    test.measure === object.measure &&\n                    test.fraction === object.fraction) {\n                    this._objects[i] = object;\n                    return;\n                }\n            }\n        }\n        this._objects.push(object);\n    };\n    /**\n     * Returns an array of all objects.\n     */\n    BMSObjects.prototype.all = function () {\n        return this._objects.slice();\n    };\n    /**\n     * Returns a sorted array of all objects.\n     */\n    BMSObjects.prototype.allSorted = function () {\n        var list = this.all();\n        list.sort(function (a, b) {\n            return a.measure + a.fraction - (b.measure + b.fraction);\n        });\n        return list;\n    };\n    return BMSObjects;\n}());\nexports.BMSObjects = BMSObjects;\n//# sourceMappingURL=objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A TimeSignatures is a collection of time signature values\n * index by measure number.\n *\n * The measure number starts from 0.\n * By default, each measure has a measure size of 1\n * (which represents the common 4/4 time signature)\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00102:0.75\n * #00103:1.25\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can access the {TimeSignatures} object:\n *\n * ```js\n * var timeSignatures = bmsChart.timeSignatures\n * ```\n *\n * Note that you can also use the constructor\n * to create a {TimeSignatures} from scratch.\n *\n * One of the most useful use case of this class\n * is to convert the measure and fraction into beat number.\n *\n * ```js\n * timeSignatures.measureToBeat(0, 0.000) // =>  0.0\n * timeSignatures.measureToBeat(0, 0.500) // =>  2.0\n * timeSignatures.measureToBeat(1, 0.000) // =>  4.0\n * timeSignatures.measureToBeat(1, 0.500) // =>  5.5\n * timeSignatures.measureToBeat(2, 0.000) // =>  7.0\n * timeSignatures.measureToBeat(2, 0.500) // =>  9.5\n * timeSignatures.measureToBeat(3, 0.000) // => 12.0\n * ```\n */\nvar TimeSignatures = /** @class */ (function () {\n    function TimeSignatures() {\n        this._values = {};\n    }\n    /**\n     * Sets the size of a specified measure.\n     * @param measure the measure number, starting from 0\n     * @param value the measure size.\n     *  For example, a size of 1.0 represents a common 4/4 time signature,\n     *  whereas a size of 0.75 represents the 3/4 or 6/8 time signature.\n     */\n    TimeSignatures.prototype.set = function (measure, value) {\n        this._values[measure] = value;\n    };\n    /**\n     * Retrieves the size of a specified measure.\n     * @param measure representing the measure number.\n     * @returns the size of the measure.\n     *  By default, a measure has a size of 1.\n     */\n    TimeSignatures.prototype.get = function (measure) {\n        return this._values[measure] || 1;\n    };\n    /**\n     * Retrieves the number of beats in a specified measure.\n     *\n     * Since one beat is equivalent to a quarter note in 4/4 time signature,\n     * this is equivalent to `(timeSignatures.get(measure) * 4)`.\n     * @param measure representing the measure number.\n     * @returns the size of the measure in beats.\n     */\n    TimeSignatures.prototype.getBeats = function (measure) {\n        return this.get(measure) * 4;\n    };\n    /**\n     * Converts a measure number and a fraction inside that measure\n     * into the beat number.\n     *\n     * @param measure the measure number.\n     * @param fraction the fraction of a measure,\n     * @returns the number of beats since measure 0.\n     */\n    TimeSignatures.prototype.measureToBeat = function (measure, fraction) {\n        var sum = 0;\n        for (var i = 0; i < measure; i++)\n            sum += this.getBeats(i);\n        return sum + this.getBeats(measure) * fraction;\n    };\n    return TimeSignatures;\n}());\nexports.TimeSignatures = TimeSignatures;\n//# sourceMappingURL=index.js.map","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n  get value() {\n    return this._value\n  }\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (var i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    var callbacks = this._callbacks\n    for (var id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    var id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction',\n})\n","import './style.scss'\n\nimport $ from 'jquery'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport co from 'co'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main(element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nfunction go(loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  co(function*() {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = Buffer.from(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>')\n      .text(JSON.stringify(info, null, 2))\n      .appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function() {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n            .text('[' + note.keysound + '] ')\n            .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function() {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay() {\n    return new Promise(function(resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\\n\", \"\"]);\n\n// exports\n","var jade = require(\"/home/circleci/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\nimport { decodeOGG } from './ogg'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  // We have a Vorbis audio decoder!\n  if (type === 'audio/ogg; codecs=\"vorbis\"') return true\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\nconst needsVorbisDecoder = !dummyAudioTag.canPlayType(\n  'audio/ogg; codecs=\"vorbis\"'\n)\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination() {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample(blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group(options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      if (needsVorbisDecoder && arrayBuffer.byteLength > 4) {\n        const view = new Uint8Array(arrayBuffer, 0, 4)\n        if (\n          view[0] === 0x4f &&\n          view[1] === 0x67 &&\n          view[2] === 0x67 &&\n          view[3] === 0x53\n        ) {\n          return resolve(decodeOGG(this.audioContext, arrayBuffer))\n        }\n      }\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor(samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination() {\n    return this._gain\n  }\n\n  destroy() {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor(samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor(samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio(ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","import throat from 'throat'\n\ntype OGGDecodeEvent = {\n  data?: Float32Array[]\n  sampleRate: number\n  error?: any\n  eof?: boolean\n}\n\ntype OGGDecoder = {\n  decode(arrayBuffer: ArrayBuffer, callback: (e: OGGDecodeEvent) => void): void\n}\n\nlet decoderPromise: Promise<OGGDecoder>\n\nconst limit = throat(1)\n\nfunction getDecoder() {\n  if (!decoderPromise) {\n    // @ts-ignore\n    decoderPromise = import(/* webpackChunkName: 'stbvorbis' */ 'raw-loader!./vendor/stbvorbis/stbvorbis-e6da5fe-NDEBUG.js')\n      .then(ns => ns.default)\n      .then(src => {\n        // eslint-disable-next-line no-eval\n        return (0, eval)(src + ';stbvorbis')\n      })\n  }\n  return decoderPromise\n}\n\n/**\n * Decodes an OGG file using stbvorbis.js.\n */\nexport async function decodeOGG(\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  const stbvorbis = await getDecoder()\n  return limit(() => doDecodeOGG(stbvorbis, audioContext, arrayBuffer))\n}\n\nfunction doDecodeOGG(\n  stbvorbis: OGGDecoder,\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  return new Promise<AudioBuffer>((resolve, reject) => {\n    const buffers: Float32Array[][] = []\n    let totalLength = 0\n    let sampleRate: number\n    stbvorbis.decode(arrayBuffer, function(e) {\n      if (e.data) {\n        sampleRate = e.sampleRate\n        buffers.push(e.data)\n        totalLength += e.data[0].length\n      }\n      if (e.error) {\n        const error =\n          e.error instanceof Error ? e.error : `stbvorbis.js Error: ${e.error}`\n        reject(error)\n      }\n      if (e.eof) {\n        resolve(createBuffer(audioContext, buffers, totalLength, sampleRate))\n      }\n    })\n  })\n}\n\nasync function createBuffer(\n  audioContext: AudioContext,\n  decodedChunks: Float32Array[][],\n  length: number,\n  sampleRate: number\n) {\n  if (!length) throw new Error(`stbvorbis.js Error: No length`)\n  if (!sampleRate) throw new Error(`stbvorbis.js Error: No sample rate`)\n  const numberOfChannels = decodedChunks[0].length\n  const audioBuffer = audioContext.createBuffer(\n    numberOfChannels,\n    length,\n    sampleRate\n  )\n  const channels: ChannelDataWriter[] = Array(audioBuffer.numberOfChannels)\n    .fill(null)\n    .map((_, ch) => new ChannelDataWriter(audioBuffer.getChannelData(ch)))\n  for (const chunk of decodedChunks) {\n    chunk.forEach((audioSamples, channelIndex) => {\n      channels[channelIndex].write(audioSamples)\n    })\n  }\n  return audioBuffer\n}\n\nclass ChannelDataWriter {\n  private offset = 0\n  constructor(private data: Float32Array) {}\n  write(audioSamples: Float32Array) {\n    // iOS Safari does not support `buf.copyToChannel(a, ch, track[ch])`, so we had to copy audio data sample-by-sample.\n    const { offset, data } = this\n    for (var i = 0; i < audioSamples.length; i++) {\n      data[i + offset] = audioSamples[i]\n    }\n    this.offset += audioSamples.length\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chardet = require(\"bemuse-chardet/bemuse-chardet\");\nfunction read(buffer) {\n    throw new Error('Synchronous read unsupported in browser!');\n}\nexports.read = read;\nfunction readAsync() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var buffer = args[0];\n    var options = args[1];\n    var callback = args[2];\n    if (callback) {\n        options = args[1];\n        callback = args[2];\n    }\n    else {\n        options = null;\n        callback = args[1];\n    }\n    var charset = (options && options.forceEncoding) || chardet.detect(buffer);\n    var reader = new FileReader();\n    reader.onload = function () {\n        callback(null, reader.result);\n    };\n    reader.onerror = function () {\n        callback(new Error('cannot read it'));\n    };\n    reader.readAsText(new Blob([buffer]), charset);\n}\nexports.readAsync = readAsync;\nvar getReaderOptionsFromFilename_1 = require(\"./getReaderOptionsFromFilename\");\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename_1.getReaderOptionsFromFilename;\n//# sourceMappingURL=index.web.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Given the filename, returns the reader options.\n * @param {string} filename\n */\nfunction getReaderOptionsFromFilename(filename) {\n    var forceEncoding;\n    if (filename.match(/\\.sjis\\.\\w+$/i)) {\n        forceEncoding = 'Shift-JIS';\n    }\n    if (filename.match(/\\.euc_kr\\.\\w+$/i)) {\n        forceEncoding = 'EUC-KR';\n    }\n    if (filename.match(/\\.utf8\\.\\w+$/i)) {\n        forceEncoding = 'UTF-8';\n    }\n    return { forceEncoding: forceEncoding };\n}\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename;\n//# sourceMappingURL=getReaderOptionsFromFilename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Public: A module that takes a string representing the BMS notechart,\n// parses it, and compiles into a {BMSChart}.\n/* module */\nvar match_1 = require(\"../util/match\");\nvar chart_1 = require(\"../bms/chart\");\nvar matchers = {\n    bms: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):(\\S*)$/,\n        header: /^#(\\w+)(?:\\s+(\\S.*))?$/,\n    },\n    dtx: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:\\s*(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):\\s*(\\S*)$/,\n        header: /^#(\\w+):(?:\\s+(\\S.*))?$/,\n    },\n};\n/**\n * Reads the string representing the BMS notechart, parses it,\n * and compiles into a {BMSChart}.\n * @param text the BMS notechart\n * @param options additional parser options\n */\nfunction compile(text, options) {\n    options = options || {};\n    var chart = new chart_1.BMSChart();\n    var rng = options.rng ||\n        function (max) {\n            return 1 + Math.floor(Math.random() * max);\n        };\n    var matcher = (options.format && matchers[options.format]) || matchers.bms;\n    var randomStack = [];\n    var skipStack = [false];\n    var result = {\n        headerSentences: 0,\n        channelSentences: 0,\n        controlSentences: 0,\n        skippedSentences: 0,\n        malformedSentences: 0,\n        /**\n         * The resulting chart\n         */\n        chart: chart,\n        /**\n         * Warnings found during compilation\n         */\n        warnings: [],\n    };\n    eachLine(text, function (text, lineNumber) {\n        var flow = true;\n        if (text.charAt(0) !== '#')\n            return;\n        match_1.match(text)\n            .when(matcher.random, function (m) {\n            result.controlSentences += 1;\n            randomStack.push(rng(+m[1]));\n        })\n            .when(matcher.if, function (m) {\n            result.controlSentences += 1;\n            skipStack.push(randomStack[randomStack.length - 1] !== +m[1]);\n        })\n            .when(matcher.endif, function (m) {\n            result.controlSentences += 1;\n            skipStack.pop();\n        })\n            .else(function () {\n            flow = false;\n        });\n        if (flow)\n            return;\n        var skipped = skipStack[skipStack.length - 1];\n        match_1.match(text)\n            .when(matcher.timeSignature, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                chart.timeSignatures.set(+m[1], +m[2]);\n        })\n            .when(matcher.channel, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                handleChannelSentence(+m[1], m[2], m[3], lineNumber);\n        })\n            .when(matcher.header, function (m) {\n            result.headerSentences += 1;\n            if (!skipped)\n                chart.headers.set(m[1], m[2]);\n        })\n            .else(function () {\n            warn(lineNumber, 'Invalid command');\n        });\n    });\n    return result;\n    function handleChannelSentence(measure, channel, string, lineNumber) {\n        var items = Math.floor(string.length / 2);\n        if (items === 0)\n            return;\n        for (var i = 0; i < items; i++) {\n            var value = string.substr(i * 2, 2);\n            var fraction = i / items;\n            if (value === '00')\n                continue;\n            chart.objects.add({\n                measure: measure,\n                fraction: fraction,\n                value: value,\n                channel: channel,\n                lineNumber: lineNumber,\n            });\n        }\n    }\n    function warn(lineNumber, message) {\n        result.warnings.push({\n            lineNumber: lineNumber,\n            message: message,\n        });\n    }\n}\nexports.compile = compile;\nfunction eachLine(text, callback) {\n    text\n        .split(/\\r\\n|\\r|\\n/)\n        .map(function (line) {\n        return line.trim();\n    })\n        .forEach(function (line, index) {\n        callback(line, index + 1);\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Segment = data_structure_1.default({\n    t: 'number',\n    x: 'number',\n    dx: 'number',\n});\n//# sourceMappingURL=segment.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar note_1 = require(\"./note\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar ChannelMapping = __importStar(require(\"./channels\"));\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Notes holds the {Note} objects in the game.\n * A note object may or may not be playable.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00111:AA\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Notes} using `fromBMSChart()`:\n *\n * ```js\n * var notes = Notes.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can get all notes using `.all()` method\n *\n * ```js\n * notes.all()\n * ```\n */\nvar Notes = /** @class */ (function () {\n    /**\n     * @param {BMSNote[]} notes An array of Note objects\n     */\n    function Notes(notes) {\n        notes.forEach(note_1.Note);\n        this._notes = notes;\n    }\n    /**\n     * Returns the number of notes in this object,\n     * counting both playable and non-playable notes.\n     */\n    Notes.prototype.count = function () {\n        return this._notes.length;\n    };\n    /**\n     * Returns an Array of all notes.\n     */\n    Notes.prototype.all = function () {\n        return this._notes.slice();\n    };\n    /**\n     * Creates a Notes object from a BMSChart.\n     * @param chart the chart to process\n     * @param options options\n     */\n    Notes.fromBMSChart = function (chart, options) {\n        void chart_1.BMSChart;\n        options = options || {};\n        var mapping = options.mapping || Notes.CHANNEL_MAPPING.IIDX_P1;\n        var builder = new BMSNoteBuilder(chart, { mapping: mapping });\n        return builder.build();\n    };\n    Notes.CHANNEL_MAPPING = ChannelMapping;\n    return Notes;\n}());\nexports.Notes = Notes;\nvar BMSNoteBuilder = /** @class */ (function () {\n    function BMSNoteBuilder(chart, options) {\n        this._chart = chart;\n        invariant_1.default(options.mapping, 'Expected options.mapping');\n        invariant_1.default(typeof options.mapping === 'object', 'options.mapping must be object');\n        this._mapping = options.mapping;\n        this._notes = [];\n        this._activeLN = {};\n        this._lastNote = {};\n        this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase();\n        this._channelMapping = this._mapping;\n        this._objects = this._chart.objects.allSorted();\n    }\n    BMSNoteBuilder.prototype.build = function () {\n        var _this = this;\n        this._objects.forEach(function (object) {\n            _this._handle(object);\n        });\n        return new Notes(this._notes);\n    };\n    BMSNoteBuilder.prototype._handle = function (object) {\n        if (object.channel === '01') {\n            this._handleNormalNote(object);\n        }\n        else {\n            switch (object.channel.charAt(0)) {\n                case '1':\n                case '2':\n                    this._handleNormalNote(object);\n                    break;\n                case '5':\n                case '6':\n                    this._handleLongNote(object);\n                    break;\n            }\n        }\n    };\n    BMSNoteBuilder.prototype._handleNormalNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (object.value.toLowerCase() === this._lnObj) {\n            if (this._lastNote[channel]) {\n                this._lastNote[channel].endBeat = beat;\n            }\n        }\n        else {\n            var note = {\n                beat: beat,\n                endBeat: undefined,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n            this._lastNote[channel] = note;\n            this._notes.push(note);\n        }\n    };\n    BMSNoteBuilder.prototype._handleLongNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (this._activeLN[channel]) {\n            var note = this._activeLN[channel];\n            note.endBeat = beat;\n            this._notes.push(note);\n            delete this._activeLN[channel];\n        }\n        else {\n            this._activeLN[channel] = {\n                beat: beat,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n        }\n    };\n    BMSNoteBuilder.prototype._getBeat = function (object) {\n        return this._chart.measureToBeat(object.measure, object.fraction);\n    };\n    BMSNoteBuilder.prototype._getColumn = function (channel) {\n        return this._channelMapping[channel];\n    };\n    BMSNoteBuilder.prototype._normalizeChannel = function (channel) {\n        return channel.replace(/^5/, '1').replace(/^6/, '2');\n    };\n    return BMSNoteBuilder;\n}());\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Note = data_structure_1.default({\n    beat: 'number',\n    endBeat: data_structure_1.default.maybe('number'),\n    column: data_structure_1.default.maybe('string'),\n    keysound: 'string',\n});\n//# sourceMappingURL=note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IIDX_P1 = {\n    '11': '1',\n    '12': '2',\n    '13': '3',\n    '14': '4',\n    '15': '5',\n    '18': '6',\n    '19': '7',\n    '16': 'SC',\n};\n//# sourceMappingURL=channels.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\nvar precedence = { bpm: 1, stop: 2 };\n/**\n * A Timing represents the timing information of a musical score.\n * A Timing object provides facilities to synchronize between\n * metric time (seconds) and musical time (beats).\n *\n * A Timing are created from a series of actions:\n *\n * - BPM changes.\n * - STOP action.\n */\nvar Timing = /** @class */ (function () {\n    /**\n     * Constructs a Timing with an initial BPM and specified actions.\n     *\n     * Generally, you would use `Timing.fromBMSChart` to create an instance\n     * from a BMSChart, but the constructor may also be used in other situations\n     * unrelated to the BMS file format. (e.g. bmson package)\n     */\n    function Timing(initialBPM, actions) {\n        var state = { bpm: initialBPM, beat: 0, seconds: 0 };\n        var segments = [];\n        segments.push({\n            t: 0,\n            x: 0,\n            dx: state.bpm / 60,\n            bpm: state.bpm,\n            inclusive: true,\n        });\n        actions = actions.slice();\n        actions.sort(function (a, b) {\n            return a.beat - b.beat || precedence[a.type] - precedence[b.type];\n        });\n        actions.forEach(function (action) {\n            var beat = action.beat;\n            var seconds = state.seconds + ((beat - state.beat) * 60) / state.bpm;\n            switch (action.type) {\n                case 'bpm':\n                    state.bpm = action.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    break;\n                case 'stop':\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: 0,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    seconds += ((action.stopBeats || 0) * 60) / state.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: false,\n                    });\n                    break;\n                default:\n                    throw new Error('Unrecognized segment object!');\n            }\n            state.beat = beat;\n            state.seconds = seconds;\n        });\n        this._speedcore = new speedcore_1.Speedcore(segments);\n        this._eventBeats = lodash_1.uniq(lodash_1.map(actions, function (action) { return action.beat; }));\n    }\n    /**\n     * Convert the given beat into seconds.\n     * @param {number} beat\n     */\n    Timing.prototype.beatToSeconds = function (beat) {\n        return this._speedcore.t(beat);\n    };\n    /**\n     * Convert the given second into beats.\n     * @param {number} seconds\n     */\n    Timing.prototype.secondsToBeat = function (seconds) {\n        return this._speedcore.x(seconds);\n    };\n    /**\n     * Returns the BPM at the specified beat.\n     * @param {number} beat\n     */\n    Timing.prototype.bpmAtBeat = function (beat) {\n        return this._speedcore.segmentAtX(beat).bpm;\n    };\n    /**\n     * Returns an array representing the beats where there are events.\n     */\n    Timing.prototype.getEventBeats = function () {\n        return this._eventBeats;\n    };\n    /**\n     * Creates a Timing instance from a BMSChart.\n     * @param {BMSChart} chart\n     */\n    Timing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var actions = [];\n        chart.objects.all().forEach(function (object) {\n            var bpm;\n            var beat = chart.measureToBeat(object.measure, object.fraction);\n            if (object.channel === '03') {\n                bpm = parseInt(object.value, 16);\n                actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '08') {\n                bpm = +chart.headers.get('bpm' + object.value);\n                if (!isNaN(bpm))\n                    actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '09') {\n                var stopBeats = +chart.headers.get('stop' + object.value) / 48;\n                actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats });\n            }\n        });\n        return new Timing(+chart.headers.get('bpm') || 60, actions);\n    };\n    return Timing;\n}());\nexports.Timing = Timing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_1 = require(\"../util/match\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A SongInfo represents the song info, such as title, artist, genre.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #TITLE Exargon [HYPER]\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {SongInfo} using `fromBMSChart()`:\n *\n * ```js\n * var info = SongInfo.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can query the song information by accessing its properties.\n *\n * ```js\n * info.title     // => 'Exargon'\n * info.subtitles // => ['HYPER']\n * ```\n */\nvar SongInfo = /** @class */ (function () {\n    /**\n     * Constructs a SongInfo with given data\n     * @param info the properties to set on this new instance\n     */\n    function SongInfo(info) {\n        /** the song title */\n        this.title = 'NO TITLE';\n        /** the song artist */\n        this.artist = 'NO ARTIST';\n        /** the song genre */\n        this.genre = 'NO GENRE';\n        /**\n         * the song's subtitles, one line per element.\n         * The subtitle may be used to represent the difficulty name,\n         * such as NORMAL, HYPER, ANOTHER.\n         * @type {string[]}\n         */\n        this.subtitles = [];\n        /**\n         * the song's other artists, one artist per element.\n         * @type {string[]}\n         */\n        this.subartists = [];\n        /**\n         * the difficulty.\n         * Meaning of the number is same as BMS's [`#DIFFICULTY`](http:*hitkey.nekokan.dyndns.info/cmds.htm#DIFFICULTY) header.\n         *\n         * | difficulty | meaning  |\n         * | ----------:|:--------:|\n         * |          1 | BEGINNER |\n         * |          2 | NORMAL   |\n         * |          3 | HYPER    |\n         * |          4 | ANOTHER  |\n         * |          5 | INSANE   |\n         */\n        this.difficulty = 0;\n        /**\n         * the level of the song.\n         * When converted from a BMS chart, this is the value of `#PLAYLEVEL` header.\n         */\n        this.level = 0;\n        if (info)\n            lodash_1.assign(this, info);\n    }\n    /**\n     * Constructs a new {SongInfo} object from a {BMSChart}.\n     * @param chart A {BMSChart} to construct a {SongInfo} from\n     */\n    SongInfo.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var info = {};\n        var title = chart.headers.get('title');\n        var artist = chart.headers.get('artist');\n        var genre = chart.headers.get('genre');\n        var difficulty = +chart.headers.get('difficulty') || 0;\n        var level = +chart.headers.get('playlevel') || 0;\n        var subtitles = chart.headers.getAll('subtitle');\n        var subartists = chart.headers.getAll('subartist');\n        if (typeof title === 'string' && !subtitles) {\n            var extractSubtitle = function (m) {\n                title = m[1];\n                subtitles = [m[2]];\n            };\n            match_1.match(title)\n                .when(/^(.*\\S)\\s*-(.+?)-$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*<(.+?)>$/, extractSubtitle);\n        }\n        if (title)\n            info.title = title;\n        if (artist)\n            info.artist = artist;\n        if (genre)\n            info.genre = genre;\n        if (subtitles)\n            info.subtitles = subtitles;\n        if (subartists)\n            info.subartists = subartists;\n        if (difficulty)\n            info.difficulty = difficulty;\n        if (level)\n            info.level = level;\n        return new SongInfo(info);\n    };\n    return SongInfo;\n}());\nexports.SongInfo = SongInfo;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Public: A module that exposes {Keysounds}\n/* module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A simple mapping between keysounds ID and the file name.\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #WAVAA cat.wav\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Keysounds} using `fromBMSChart()`:\n *\n * ```js\n * var keysounds = Keysounds.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can retrieve the filename using `.get()`:\n *\n * ```js\n * keysounds.get('aa') // => 'cat.wav'\n * ```\n */\nvar Keysounds = /** @class */ (function () {\n    function Keysounds(map) {\n        this._map = map;\n    }\n    /**\n     * Returns the keysound file at the specified ID.\n     * @param id the two-character keysound ID\n     * @returns the sound filename\n     */\n    Keysounds.prototype.get = function (id) {\n        return this._map[id.toLowerCase()];\n    };\n    /**\n     * Returns an array of unique filenames in this Keysounds object.\n     * @returns filenames array\n     */\n    Keysounds.prototype.files = function () {\n        return lodash_1.uniq(lodash_1.values(this._map));\n    };\n    /**\n     * Returns a mapping from keysound ID to keysound filename.\n     *\n     * **Warning:** This method returns the internal data structure used\n     * in this Keysounds object. Do not mutate!\n     */\n    Keysounds.prototype.all = function () {\n        return this._map;\n    };\n    /**\n     * Constructs a new {Keysounds} object from a {BMSChart}.\n     * @param chart\n     */\n    Keysounds.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var map = {};\n        chart.headers.each(function (name, value) {\n            var match = name.match(/^wav(\\S\\S)$/i);\n            if (!match)\n                return;\n            map[match[1].toLowerCase()] = value;\n        });\n        return new Keysounds(map);\n    };\n    return Keysounds;\n}());\nexports.Keysounds = Keysounds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Positioning represents the relation between song beats and\n * display position, and provides a way to convert between them.\n *\n * In some rhythm games, the amount of scrolling per beat may be different.\n * StepMania’s `#SCROLL` segments is an example.\n */\nvar Positioning = /** @class */ (function () {\n    /**\n     * Constructs a Positioning from the given `segments`.\n     * @param segments\n     */\n    function Positioning(segments) {\n        this._speedcore = new speedcore_1.Speedcore(segments);\n    }\n    /**\n     * Returns the scrolling speed at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.speed = function (beat) {\n        return this._speedcore.dx(beat);\n    };\n    /**\n     * Returns the total elapsed scrolling amount at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.position = function (beat) {\n        return this._speedcore.x(beat);\n    };\n    /**\n     * Creates a {Positioning} object from the {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {Positioning} from\n     */\n    Positioning.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        var x = 0;\n        segments.push({\n            t: 0,\n            x: x,\n            dx: 1,\n            inclusive: true,\n        });\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SC') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var dx = +chart.headers.get('scroll' + object.value);\n                if (isNaN(dx))\n                    return;\n                var previous = segments[segments.length - 1];\n                x += (beat - previous.t) * previous.dx;\n                if (beat === 0 && segments.length === 1) {\n                    segments[0].dx = dx;\n                }\n                else {\n                    segments.push({\n                        t: beat,\n                        x: x,\n                        dx: dx,\n                        inclusive: true,\n                    });\n                }\n            }\n        });\n        return new Positioning(segments);\n    };\n    return Positioning;\n}());\nexports.Positioning = Positioning;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * Public: A Spacing represents the relation between song beats and\n * notes spacing.\n *\n * In some rhythm games, such as Pump It Up!,\n * the speed (note spacing factor) may be adjusted by the notechart.\n * StepMania’s `#SPEED` segments is an example.\n */\nvar Spacing = /** @class */ (function () {\n    /**\n     * Constructs a Spacing from the given `segments`.\n     */\n    function Spacing(segments) {\n        if (segments.length > 0) {\n            this._speedcore = new speedcore_1.Speedcore(segments);\n        }\n    }\n    /**\n     * Returns the note spacing factor at the specified beat.\n     * @param beat the beat\n     */\n    Spacing.prototype.factor = function (beat) {\n        if (this._speedcore) {\n            return this._speedcore.x(beat);\n        }\n        else {\n            return 1;\n        }\n    };\n    /**\n     * Creates a {Spacing} object from the {BMSChart}.\n     *\n     * ## `#SPEED` and `#xxxSP`\n     *\n     * Speed is defined as keyframes. These keyframes will be linearly interpolated.\n     *\n     * ```\n     * #SPEED01 1.0\n     * #SPEED02 2.0\n     *\n     * #001SP:01010202\n     * ```\n     *\n     * In this example, the note spacing factor will gradually change\n     * from 1.0x at beat 1 to 2.0x at beat 2.\n     *\n     * Returns a {Spacing} object\n     *\n     * @param {BMSChart} chart the chart\n     */\n    Spacing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SP') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var factor = +chart.headers.get('speed' + object.value);\n                if (isNaN(factor))\n                    return;\n                if (segments.length > 0) {\n                    var previous = segments[segments.length - 1];\n                    previous.dx = (factor - previous.x) / (beat - previous.t);\n                }\n                segments.push({\n                    t: beat,\n                    x: factor,\n                    dx: 0,\n                    inclusive: true,\n                });\n            }\n        });\n        if (segments.length > 0) {\n            segments.unshift({\n                t: 0,\n                x: segments[0].x,\n                dx: 0,\n                inclusive: true,\n            });\n        }\n        return new Spacing(segments);\n    };\n    return Spacing;\n}());\nexports.Spacing = Spacing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar headers_1 = require(\"./headers\");\nvar objects_1 = require(\"./objects\");\nvar time_signatures_1 = require(\"../time-signatures\");\n/**\n * A BMSChart holds information about a particular BMS notechart.\n * Note that a BMSChart does not contain any information about `#RANDOM`,\n * as they are already processed after compilation.\n *\n * There is not many useful things you can do with a BMSChart other than\n * accessing the header fields and objects inside it.\n *\n * To extract information from a BMSChart,\n * please look at the documentation of higher-level classes,\n * such as {Keysounds}, {Notes}, and {Timing}.\n */\nvar BMSChart = /** @class */ (function () {\n    function BMSChart() {\n        /**\n         * {BMSHeaders} representing the BMS-specific headers of this notechart\n         */\n        this.headers = new headers_1.BMSHeaders();\n        /**\n         * {BMSObjects} representing all objects of this notechart\n         */\n        this.objects = new objects_1.BMSObjects();\n        /**\n         * {TimeSignatures} representing the time signature information in this chart\n         */\n        this.timeSignatures = new time_signatures_1.TimeSignatures();\n    }\n    /**\n     * Public: Converts measure number and fraction into beat.\n     * A single beat is equivalent to a quarter note in common time signature.\n     *\n     * @param {number} measure representing the measure number, starting from 0\n     * @param {number} fraction representing the fraction inside that measure, from 0 to 1\n     */\n    BMSChart.prototype.measureToBeat = function (measure, fraction) {\n        return this.timeSignatures.measureToBeat(measure, fraction);\n    };\n    return BMSChart;\n}());\nexports.BMSChart = BMSChart;\n//# sourceMappingURL=chart.js.map","import { Archive } from 'libarchive.js/main.js'\nimport { FileEntry } from './types'\n\nArchive.init({\n  workerUrl: '/vendor/libarchive.js-1.3.0/dist/worker-bundle.js',\n})\n\nexport async function unarchive(file: File): Promise<FileEntry[]> {\n  const out: FileEntry[] = []\n  const archive = await Archive.open(file)\n  const extracted = await archive.extractFiles()\n  const traverse = (tree: any) => {\n    for (const key of Object.keys(tree)) {\n      if (tree[key] instanceof File) {\n        out.push({ name: key, file: tree[key] })\n      } else if (tree[key] && typeof tree[key] === 'object') {\n        traverse(tree[key])\n      }\n    }\n  }\n  traverse(extracted)\n  return out\n}\n","import { LoggingFunction } from './types'\n\nexport default class ResourceLogging {\n  private buffer: string[] | null = []\n  private loggingFunction: LoggingFunction = text => {\n    if (this.buffer) this.buffer.push(text)\n  }\n  public log: LoggingFunction = text => {\n    this.loggingFunction(text)\n  }\n  setLoggingFunction = (fn: LoggingFunction) => {\n    this.loggingFunction = fn\n    if (this.buffer) {\n      this.buffer.forEach(text => fn(text))\n      this.buffer = null\n    }\n  }\n}\n","import * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport { IResources, IResource, FileEntry, LoggingFunction } from './types'\nimport Progress from 'bemuse/progress'\nimport { unarchive } from './unarchiver'\nimport ResourceLogging from './resource-logging'\nimport download from 'bemuse/utils/download'\n\nconst ARCHIVE_REGEXP = /\\.(?:zip|rar|7z|tar(?:\\.(?:gz|bz2))?)/i\n\n// http://nekokan.dyndns.info/tool/DropboxReplacer/index.html\nconst DROPBOX_REGEXP = /https?:\\/\\/(?:(?:www|dl)\\.dropbox\\.com|dl\\.dropboxusercontent\\.com)\\/(sh?)\\/([^?]*)(.*)?$/\n\nexport class DndResources implements IResources {\n  _logging = new ResourceLogging()\n  _files: Promise<FileEntry[]>\n\n  public setLoggingFunction = this._logging.setLoggingFunction\n\n  constructor(event: DragEvent) {\n    this._files = getFilesFromEvent(event, this._logging.log).then(files =>\n      unarchiveIfNeeded(files, this._logging.log)\n    )\n  }\n  file(name: string) {\n    return this._files.then(function(files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList() {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource implements IResource {\n  constructor(private _file: File) {}\n  read(progress: Progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl() {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name() {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nasync function getFilesFromEvent(event: DragEvent, log: LoggingFunction) {\n  let out: FileEntry[] = []\n  const dataTransfer = event.dataTransfer\n  if (!dataTransfer) {\n    throw new Error('Expect event.dataTransfer to be present')\n  }\n  if (dataTransfer.types.indexOf('text/uri-list') > -1) {\n    let url = dataTransfer\n      .getData('text/uri-list')\n      .split(/\\r\\n|\\r|\\n/)\n      .filter(t => t && !t.startsWith('#'))[0]\n    if (ARCHIVE_REGEXP.test(url && url.replace(/[?#].*/, ''))) {\n      const name = url\n        .replace(/[?#].*/, '')\n        .split('/')\n        .pop()\n      log('Link to archive file detected. Trying to download')\n\n      {\n        // Try Dropbox URL replacement\n        const match = url.match(DROPBOX_REGEXP)\n        if (match) {\n          url = `https://dl.dropboxusercontent.com/${match[1]}/${match[2]}`\n        }\n      }\n\n      const progress = new Progress()\n      let lastTime = 0\n      progress.watch(() => {\n        if (Date.now() < lastTime + 5e3) return\n        log(`Downloading: ${progress}`)\n        lastTime = Date.now()\n      })\n      const blob = await download(url).as('blob', progress)\n      blob.name = name\n      addFile(blob)\n    }\n  } else if (dataTransfer.items) {\n    for (let item of Array.from(dataTransfer.items)) {\n      await readItem(item)\n    }\n  } else if (dataTransfer.files) {\n    for (let file of Array.from(dataTransfer.files)) {\n      addFile(file)\n    }\n  }\n  return out\n\n  async function readItem(item: DataTransferItem) {\n    let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n    if (entry) {\n      await readEntry(entry)\n    } else {\n      let file = item.getAsFile && item.getAsFile()\n      if (file) addFile(file)\n    }\n  }\n\n  function readEntry(entry: any) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile(entry: any) {\n    return new Promise<File>((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  async function readDirectory(dir: any) {\n    let entries = []\n    let reader = dir.createReader()\n    let readMore = () =>\n      new Promise<any>((resolve, reject) => {\n        reader.readEntries(resolve, reject)\n      })\n    for (;;) {\n      let results = await readMore()\n      if (!results || results.length === 0) break\n      entries.push(...Array.from(results))\n    }\n    for (let entry of entries) {\n      await readEntry(entry)\n    }\n  }\n\n  function addFile(file: File) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n\nexport async function unarchiveIfNeeded(\n  files: FileEntry[],\n  log: LoggingFunction\n): Promise<FileEntry[]> {\n  if (files.length !== 1) return files\n  const fileEntry = files[0]\n  if (!fileEntry.name.match(ARCHIVE_REGEXP)) {\n    return files\n  }\n  log('Archive file detected! Now unarchiving…')\n  return unarchive(fileEntry.file)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segment_1 = require(\"./segment\");\n/**\n * Speedcore is a small internally-used library.\n * A Speedcore represents a single dimensional keyframed linear motion\n * (as in equation x = f(t)), and is useful when working\n * with BPM changes ({Timing}), note spacing factor ({Spacing}), or scrolling\n * segments ({Positioning}).\n * A Speedcore is constructed from an array of Segments.\n *\n * A {Segment} is defined as `{ t, x, dx }`, such that:\n *\n * * speedcore.x(segment.t) = segment.x\n * * speedcore.t(segment.x) = segment.t\n * * speedcore.x(segment.t + dt) = segment.x + (segment.dx / dt)\n *\n *\n * ## Explanation\n *\n * One way to think of these segments is to think about tempo changes, where:\n *\n * * `t` is the elapsed time (in seconds) since song start.\n * * `x` is the elapsed beat since song start.\n * * `dx` is the amount of `x` increase per `t`. In this case, it has the\n *   unit of beats per second.\n *\n * For example, consider a song that starts at 140 BPM.\n * 32 beats later, the tempo changes to 160 BPM.\n * 128 beats later (at beat 160), the tempo reverts to 140 BPM.\n *\n * We can derive three segments:\n *\n * 1. At time 0, we are at beat 0, and moving at 2.333 beats per second.\n * 2. At 13.714s, we are at beat 32, moving at 2.667 beats per second.\n * 3. At 61.714s, we are at beat 160, moving at 2.333 beats per second.\n *\n * This maps out to this data structure:\n *\n * ```js\n * [ [0]: { t:  0.000,  x:   0,  dx: 2.333,  inclusive: true },\n *   [1]: { t: 13.714,  x:  32,  dx: 2.667,  inclusive: true },\n *   [2]: { t: 61.714,  x: 160,  dx: 2.333,  inclusive: true } ]\n * ```\n *\n * With this data, it is possible to find out the value of `x` at any given `t`.\n *\n * For example, to answer the question, “what is the beat number at 30s?”\n * First, we find the segment with maximum value of `t < 30`, and we get\n * the segment `[1]`.\n *\n * We calculate `segment.x + (t - segment.t) * segment.dx`.\n * The result beat number is (32 + (30 - 13.714) * 2.667) = 75.435.\n *\n * We can also perform the reverse calculation in a similar way, by reversing\n * the equation.\n *\n * Interestingly, we can use these segments to represent the effect of\n * both BPM changes and STOP segments in the same array.\n * For example, a 150-BPM song with a 2-beat stop in the 32nd beat\n * can be represented like this:\n *\n * ```js\n * [ [0]: { t:  0.0,  x:  0,  dx: 2.5,  inclusive: true  },\n *   [1]: { t: 12.8,  x: 32,  dx: 0,    inclusive: true  },\n *   [2]: { t: 13.6,  x: 32,  dx: 2.5,  inclusive: false } ]\n * ```\n */\nvar Speedcore = /** @class */ (function () {\n    /**\n     * Constructs a new `Speedcore` from given segments.\n     */\n    function Speedcore(segments) {\n        segments.forEach(segment_1.Segment);\n        this._segments = segments;\n    }\n    Speedcore.prototype._reached = function (index, targetFn, position) {\n        if (index >= this._segments.length)\n            return false;\n        var segment = this._segments[index];\n        var target = targetFn(segment);\n        return segment.inclusive ? position >= target : position > target;\n    };\n    Speedcore.prototype._segmentAt = function (targetFn, position) {\n        for (var i = 0; i < this._segments.length; i++) {\n            if (!this._reached(i + 1, targetFn, position))\n                return this._segments[i];\n        }\n        throw new Error('Unable to find a segment matching a criteria (this should never happen)!');\n    };\n    Speedcore.prototype.segmentAtX = function (x) {\n        return this._segmentAt(X, x);\n    };\n    Speedcore.prototype.segmentAtT = function (t) {\n        return this._segmentAt(T, t);\n    };\n    /**\n     * Calculates the _t_, given _x_.\n     */\n    Speedcore.prototype.t = function (x) {\n        var segment = this.segmentAtX(x);\n        return segment.t + (x - segment.x) / (segment.dx || 1);\n    };\n    /**\n     * Calculates the _x_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.x = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.x + (t - segment.t) * segment.dx;\n    };\n    /**\n     * Finds the _dx_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.dx = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.dx;\n    };\n    return Speedcore;\n}());\nexports.Speedcore = Speedcore;\nvar T = function (segment) { return segment.t; };\nvar X = function (segment) { return segment.x; };\n//# sourceMappingURL=index.js.map","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function(this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  let queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(url) {\n  return {\n    as(type, progress) {\n      return new Promise((resolve, reject) => {\n        var xh = new XMLHttpRequest()\n        xh.open('GET', url, true)\n        xh.responseType = type\n        xh.onload = () => {\n          if (+xh.status === 200) {\n            resolve(xh.response)\n          } else {\n            reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n          }\n        }\n        xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n        if (progress) {\n          progress.formatter = BYTES_FORMATTER\n          xh.onprogress = e => progress.report(e.loaded, e.total)\n        }\n        xh.send(null)\n      })\n    },\n  }\n}\n\nexport default download\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A subset of lodash that we actually use.\nvar lodash_uniq_1 = __importDefault(require(\"lodash.uniq\"));\nexports.uniq = lodash_uniq_1.default;\nvar lodash_map_1 = __importDefault(require(\"lodash.map\"));\nexports.map = lodash_map_1.default;\nvar lodash_values_1 = __importDefault(require(\"lodash.values\"));\nexports.values = lodash_values_1.default;\nvar lodash_assign_1 = __importDefault(require(\"lodash.assign\"));\nexports.assign = lodash_assign_1.default;\n//# sourceMappingURL=lodash.js.map"],"sourceRoot":""}
{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/src/progress/utils.ts","file:///home/circleci/bemuse/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/bemuse/src/music-previewer/default.ogg","file:///home/circleci/bemuse/bemuse/src/music-previewer/go.ogg","file:///home/circleci/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/circleci/bemuse/bemuse/src/resources/url.ts","file:///home/circleci/bemuse/bemuse/src/utils/download.js","file:///home/circleci/bemuse/bemuse/src/progress/index.ts","file:///home/circleci/bemuse/bemuse/src/utils/main-element.js","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/MusicTable.js","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/circleci/bemuse/bemuse/src/progress/Progress.ts","file:///home/circleci/bemuse/bemuse/src/utils/observable.ts","file:///home/circleci/bemuse/bemuse/src/utils/callbacks.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/circleci/bemuse/bemuse/src/music-collection/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/circleci/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/circleci/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/circleci/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/circleci/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/circleci/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/circleci/bemuse/bemuse/src/music-previewer/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/circleci/bemuse/bemuse/src/progress/formatters.js"],"names":["fixed","total","progress","loaded","report","extra","atomic","promise","Promise","resolve","tap","data","byteLength","hasByteLength","formatter","wrapPromise","f","current","args","apply","this","bind","from","to","watch","simultaneous","target","queue","unsubscribe","update","length","shift","push","blob","as","type","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","module","exports","MusicSelectPreviewer","Component","props","url","addEventListener","handleMessage","removeEventListener","nextProps","propTypes","string","async","getPreviewResourceUrl","song","serverUrl","tutorial","baseResources","file","preview_url","resolveUrl","URLResource","URLResources","base","name","path","split","map","part","encodeURIComponent","join","URL","href","getRetryDelay","Math","random","shouldGiveUp","i","xh","XMLHttpRequest","open","responseType","status","response","onprogress","e","send","error","console","waitMs","setTimeout","document","querySelector","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","reverse","sortBy","getAdded","initial","renderSongWarnings","problems","message","keys","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","getPlayableCharts","info","subtitles","validateSong","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","super","state","sort","initialSort","Object","previewUrl","previewEnabled","borderSpacing","colSpan","renderSorter","renderPreview","renderRows","out","onClick","setState","button","s","categories","category","id","prompt","color","textAlign","genre","log","alert","inspect","artist","text","renderMessage","renderTable","object","query","server","then","catch","preprocessCollection","main","Progress","undefined","_observable","notify","value","_callbacks","_value","call","add","init","_nextId","callbacks","callback","OFFICIAL_SERVER_URL","load","fetch","global","indexUrl","getServerIndexFileUrl","json","Array","isArray","dir","replace","endsWith","orderBy","difficulty","level","chart_names","min","bpm","toLowerCase","BemusePackageFileResource","resources","ref","getBlob","createObjectURL","Ref","spec","_basePromise","_promise","loadPayload","getPayload","slice","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","once","_base","_metadataFilename","read","Blob","JSON","parse","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","fallback","_fallback","_fallbackPattern","fallbackPattern","metadataFilename","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","getHashFunction","today","Date","now","toISOString","memoize","md5","digest","enabled","ids","Set","sorted","custom","has","grouping","criteria","context","songOfTheDay","isSongOfTheDay","songOfTheDayEnabled","groups","group","input","output","resolveRelativeResources","includes","parts","dirName","DirectoryResources","filename","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","createElement","src","volume","backgroundFader","createFader","pause","fadeTo","destroy","playing","play","stop","warn","currentTime","songUrl","audio","played","fader","onended","createInstance","createMusicPreviewer","enable","disable","go","preview","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","max","currentVolume","requestAnimationFrame","speed","getSongResources","assetResources","bemusepackUrl","assetsBase","wrapAssetResources","bemusepack_url","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER"],"mappings":"uFAAA,sLAQO,SAASA,EAAMC,EAAeC,GACnC,IAAKA,EAAU,MAAO,OACtB,IAAIC,EAAS,EAEb,OADAD,EAASE,OAAO,EAAGH,GACXI,GAAeH,EAASE,SAASD,EAAQF,EAAOI,GAMnD,SAASC,EACdJ,EACAK,GAEA,OAAKL,EACEM,QAAQC,QAAQF,GAASG,IAAKC,KASvC,SAAuBA,GACrB,OAAOA,GAAQA,EAAKC,WATdC,CAAcF,GAIhBT,EAASE,OAAO,EAAG,IAHnBF,EAASY,UAAY,IACrBZ,EAASE,OAAOO,EAAKC,WAAYD,EAAKC,eAJpBL,EAkBjB,SAASQ,EACdb,EACAc,GAEA,IAAIC,EAAU,EACVhB,EAAQ,EACZ,OAAO,YAAwBiB,GAE7B,OADAhB,EAASE,OAAOa,IAAWhB,GACpBO,QAAQC,QAAQO,EAAEG,MAAMC,KAAMF,IAAOR,IAAI,IAC9CR,EAASE,SAASa,EAAShB,KAK1B,SAASoB,EAAKC,EAAgBC,GACnC,OAAOD,EAAKE,MAAM,IAAMD,EAAGnB,OAAOkB,EAAKL,QAAUK,EAAKrB,MAAQqB,EAAKjB,QAM9D,SAASoB,EAAaC,GAC3B,IACIT,EADAU,EAAoB,GAEpBC,EAAmC,KACvC,SAASC,IACHZ,GACFS,EAAOtB,OAAOa,EAAQA,QAAUA,EAAQhB,MAAQgB,EAAQZ,OAEtDsB,EAAMG,OAAS,KAAOb,GAAWA,EAAQf,UAAa,IAI5D,SAAcA,GACZ,GAAIe,IAAYf,EACd,OAEE0B,IACFA,IACAA,EAAc,MAEhBX,EAAUf,EACNe,IACFW,EAAcX,EAAQO,MAAMK,IAb5BR,CAAKM,EAAMI,SAgBf,MAAO,CACL,IAAI7B,GACFyB,EAAMK,KAAK9B,GACX2B,Q,iCCzFS,IASR,SAAkBI,GACvB,MAAO,CACLC,GAAGC,GACM,IAAI3B,SAAQ,SAAUC,EAAS2B,GACpC,IAAIC,EAAS,IAAIC,WAOjB,OANAD,EAAOE,OAAS,WACd9B,EAAQ4B,EAAOG,SAEjBH,EAAOI,QAAU,WACfL,EAAO,IAAIM,MAAM,8BAEXP,GACN,IAAK,cACHE,EAAOM,kBAAkBV,GACzB,MACF,IAAK,OACHI,EAAOO,WAAWX,U,qBCzB9BY,EAAOC,QAAU,IAA0B,8C,qBCA3CD,EAAOC,QAAU,IAA0B,8C,kCCA3C,iFAKA,MAEe,MAAMC,UAA6B,IAAMC,UAItD,oBACE,MACA,IAAuB5B,KAAK6B,MAAMC,KAClCC,iBAAiB,UAAW/B,KAAKgC,eAEnC,uBACE,MACAC,oBAAoB,UAAWjC,KAAKgC,eAEtC,0BAA0BE,GACxB,IAAuBA,EAAUJ,KAEnC,SACE,OAAO,KAET,eAAc,KAAEvC,IACI,wBAAdA,EAAKwB,KACP,MACuB,uBAAdxB,EAAKwB,MACd,OAtBG,EAAAoB,UAAY,CACjBL,IAAK,IAAUM,S,kCCRnB,+CAEeC,eAAeC,EAC5BC,EACAC,GAEA,IAAKD,EAAM,OAAO,KAClB,GAAIA,EAAKE,SAAU,OAAO,KAC1B,MAAM,cAAEC,GAAkB,YAAiBH,EAAMC,GAIjD,aAHmBE,EAAcC,KAC/BJ,EAAKK,aAAe,wBAEVC,e,iCCZd,uDAIO,MAAMC,EACX,YAAoBhB,GAAA,KAAAA,MACpB,KAAKhD,GACH,OAAO,YAASkB,KAAK8B,KAAKhB,GAAG,cAAehC,GAE9C,mBACE,OAAOM,QAAQC,QAAQW,KAAK8B,KAE9B,WACE,OAAO,mBAAS9B,KAAK8B,MAIlB,MAAMiB,EACX,YAAmBC,GAAA,KAAAA,OACnB,WAAWC,GACT,MAAMC,EAAOD,EACVE,MAAM,KACNC,IAAKC,GAASC,mBAAmBD,IACjCE,KAAK,KACR,OAAO,IAAIT,EAAY,IAAIU,IAAIN,EAAMlD,KAAKgD,MAAMS,OAIrC,O,iCC7Bf,YAsDe,IA5CR,SACL3B,GACA,cAAE4B,EAAgB,KAAM,IAAuB,IAAhBC,KAAKC,WAAoB,IAExD,MAAO,CACL,SAAS7C,EAAMjC,GACb,IAAI+E,GAAe,EACnB,IAAK,IAAIC,EAAI,GAAKA,IAChB,IACE,aASK,IAAI1E,QAAQ,CAACC,EAAS2B,KAC3B,IAAI+C,EAAK,IAAIC,eACbD,EAAGE,KAAK,MAAOnC,GAAK,GACpBiC,EAAGG,aAAenD,EAClBgD,EAAG5C,OAAS,KACS,MAAd4C,EAAGI,OACN9E,EAAQ0E,EAAGK,WAEQ,MAAdL,EAAGI,QAAiC,MAAdJ,EAAGI,SAC5BN,GAAe,GAEjB7C,EAAO,IAAIM,MAAM,sBAAsBQ,WAAaiC,EAAGI,aAG3DJ,EAAG1C,QAAU,IAAML,EAAO,IAAIM,MAAM,sBAAsBQ,IACtDhD,IACFA,EAASY,UAAY,IACrBqE,EAAGM,WAAcC,GAAMxF,EAASE,OAAOsF,EAAEvF,OAAQuF,EAAEzF,QAErDkF,EAAGQ,KAAK,QA3BR,MAAOC,GAEP,GADAC,QAAQD,MAAM,sBAAsB1C,cAAgBgC,KAAMU,GACtDV,GAAK,GAAKD,EAAc,MAAMW,EAClC,MAAME,EAAShB,UACT,IAAItE,QAASC,GAAYsF,WAAWtF,EAASqF,S,iCCxB7D,aAGe,MAAQ,G,iCCHR,IAAAE,SAASC,cAAc,gB,uOCStC,MAAMC,EAAU,CACdC,OAASC,GAAU,OAAAC,EAAA,GAAyB,OAAAC,EAAA,GAAUF,IACtDG,MAAQH,GAAU,CAChB,CACEI,MAAO,uBACPJ,MAAO,IAAEK,QAAQ,IAAEC,OAAON,EAAOO,OAKjCA,EAAYhD,GAChBA,EAAK4C,QAAU5C,EAAKiD,QAAU,aAAe,cAwC/C,SAASC,EAAmBlD,GAC1B,MAAMmD,EAvCR,SAAsBnD,GACpB,MAAMmD,EAAW,GACX1G,EAAS,CAAC2G,KAAYC,IAASF,EAAS9E,KAAK,CAAEgF,OAAMD,YACvDpD,EAAKsD,YACP7G,EAAO,eAAgB,cAEpBuD,EAAKuD,QACR9G,EAAO,uBAAwB,aAE5BuD,EAAKwD,YACR/G,EAAO,iBAAkB,cAEtBuD,EAAKyD,YACRhH,EAAO,gBAAiB,cAErBuD,EAAK4C,OAAU5C,EAAKiD,SACvBxG,EAAO,gBAAiB,SAErBuD,EAAK0D,UAAa1D,EAAK2D,aAAgB3D,EAAK4D,UAC/CnH,EAAO,2BAA4B,WAAY,WAAY,eAExDuD,EAAK6D,SAAY7D,EAAK8D,WACzBrH,EAAO,kBAAmB,WAEvBuD,EAAK+D,cAAiB/D,EAAK8D,WAC9BrH,EAAO,mBAAoB,gBAExBuD,EAAKgE,OAAOC,OAAQC,GAAyB,OAAfA,EAAMb,MAAelF,QACtD1B,EAAO,kBAAmB,QAE5B,IAAK,MAAMyH,KAAS,OAAAC,EAAA,GAAkBnE,EAAKgE,QACpCE,EAAME,KAAKC,UAAUlG,QACxB1B,EAAO,mBAAoB,eAAiByH,EAAM9D,MAGtD,OAAO+C,EAIUmB,CAAatE,GAC9B,OAAKmD,EAAShF,OAEZ,6BACGgF,EAAStC,IAAI,CAAC0D,EAASC,IACtB,yBAAKC,IAAKD,GACPD,EAAQlB,KAAKxC,IAAK4D,GACjB,0BACEA,IAAKA,EACLC,MAAO,CACLC,WAAY,cACZC,YAAa,IACbC,QAAS,EACTC,SAAU,QACVC,WAAY,SAGbN,IAGJF,EAAQnB,WAnBY,KA0BxB,MAAM,UAAmB,IAAM/D,UAMpC,YAAYC,GACV0F,MAAM1F,GACN7B,KAAKwH,MAAQ,CACXC,KAAMzH,KAAK6B,MAAM6F,aAAeC,OAAO/B,KAAKd,GAAS,GACrD8C,WAAY,KACZC,gBAAgB,GAGpB,cACE,OACE,2BAAOZ,MAAO,CAAEa,cAAe,IAC7B,+BACE,4BACE,wBAAIC,QAAS,GACV/H,KAAKgI,eACL,MACAhI,KAAKiI,kBAGV,4BACE,kCACA,oCACA,0CAGJ,+BAAQjI,KAAKkI,eAInB,eACE,MAAMC,EAAM,GACZ,IAAK,MAAMnB,KAAOW,OAAO/B,KAAKd,GAC5BqD,EAAIvH,KACF,4BACEoG,IAAKA,EACLoB,QAAS,KACPpI,KAAKqI,SAAS,CAAEZ,KAAMT,MAGvBA,IAIP,OACE,8BACE,4C,IAA2BmB,GAIjC,gBACE,MAAMG,EACJ,4BACEF,QAAS,KACPpI,KAAKqI,SAAUE,IAAM,CAAGV,gBAAiBU,EAAEV,oBAG5C7H,KAAKwH,MAAMK,eAAiB,UAAY,UAG7C,OACE,8BACE,kD,IAAiCS,EAChCtI,KAAKwH,MAAMK,gBACV,kBAAClG,EAAA,EAAoB,CAACG,IAAK9B,KAAKwH,MAAMI,cAK9C,aACE,MAAMY,EAAa1D,EAAQ9E,KAAKwH,MAAMC,MAAMzH,KAAK6B,MAAMtC,KAAKyF,OACtDmD,EAAM,GACZ,IAAK,MAAMM,KAAYD,EAAY,CACjCL,EAAIvH,KACF,wBAAIoG,IAAKyB,EAASrD,OAChB,wBAAI2C,QAAS,GAAIU,EAASrD,SAG9B,IAAK,MAAM7C,KAAQkG,EAASzD,MAC1BmD,EAAIvH,KACF,wBAAIoG,IAAKzE,EAAKmG,IACZ,4BACE,4BACEN,QAAS,KACPO,OAAO,GAAI,QAAQpG,EAAKmG,mBAG1B,0BAAMzB,MAAO,CAAEC,WAAY,gBAAkB3E,EAAKmG,KAEpD,6BACA,0BAAMzB,MAAO,CAAE2B,MAAO,YAAcrG,EAAK4C,QAE3C,wBAAI8B,MAAO,CAAE4B,UAAW,SAAUvB,WAAY,YAC5C,0BACEL,MAAO,CAAE2B,MAAO,WAChBR,QAAS/F,UACP,MAAMuF,QAAmB,OAAAtF,EAAA,GACvBC,EACAvC,KAAK6B,MAAMC,KAEb9B,KAAKqI,SAAS,CAAET,iBAGjBrF,EAAKuG,OAER,6BACA,4BACEV,QAAS,KACP3D,QAAQsE,IAAIxG,GACZyG,MAAM,EAAQ,KAAQC,QAAQ1G,MAG/BA,EAAK6C,OAER,6BACC7C,EAAK2G,QAER,4BAAKzD,EAAmBlD,MAKhC,OAAO4F,EAET,cAAcgB,GACZ,OAAO,yBAAKlC,MAAO,CAAE4B,UAAW,WAAaM,GAE/C,SACE,IAAKnJ,KAAK6B,MAAMtC,KAAM,OAAOS,KAAKoJ,cAAc,WAChD,IACE,OAAOpJ,KAAKqJ,cACZ,MAAO/E,GACP,OAAOtE,KAAKoJ,cAAc,UAAU9E,KAxIjC,EAAAnC,UAAY,CACjB5C,KAAM,IAAU+J,OAChBxH,IAAK,IAAUM,OACfsF,YAAa,IAAUtF,QA0IZ,QC/NR,MAAM,UAAyB,IAAMR,UAC1C,YAAYC,GACV0F,MAAM1F,GACN7B,KAAKwH,MAAQ,CACX1F,IAAKyH,EAAA,EAAMC,QAAU,IACrBrF,OAAQ,WAGZ,oBACE,YAAKnE,KAAKwH,MAAM1F,KACb2H,KAAMrI,IACLpB,KAAKqI,SAAS,CAAElE,OAAQ,iBAAkB5E,KAAM6B,MAEjDsI,MAAOpF,IACNtE,KAAKqI,SAAS,CAAElE,OAAQ,eAAiBG,MAG/C,SACE,OACE,6BACE,4BAAQ2C,MAAO,CAAE4B,UAAW,WAC1B,wDACA,6BACG7I,KAAKwH,MAAM1F,IACZ,6BACC9B,KAAKwH,MAAMrD,SAGhB,yBAAK8C,MAAO,CAAEG,QAAS,KACrB,kBAAC,EAAU,CACT7H,KAAMS,KAAKwH,MAAMjI,MAAQ,OAAAoK,EAAA,GAAqB3J,KAAKwH,MAAMjI,MACzDuC,IAAK9B,KAAKwH,MAAM1F,IAChB4F,YAAa6B,EAAA,EAAM9B,UAQhB,QCxCR,SAASmC,IACd,MACA,iBAAO,kBAAC,EAAgB,MAAK,O,iCCT/B,+CAYO,MAAMC,EAAb,cAES,KAAAhK,aAA8BiK,EAE9B,KAAAjL,WAA4BiL,EAQ3B,KAAAC,YAAc,IAAI,IAI1B,OAAOlK,EAAiBhB,EAAeI,GACrCe,KAAKH,QAAUA,EACfG,KAAKnB,MAAQA,EACbmB,KAAKf,MAAQA,EACbe,KAAK+J,YAAYC,SASnB,MAAMpK,GAEJ,OADAA,EAAEI,MACKA,KAAK+J,YAAY3J,MAAM,IAAMR,EAAEI,OAKxC,eACE,OAAIA,KAAKnB,YAA0BiL,IAAjB9J,KAAKH,SAA0C,OAAjBG,KAAKH,QAC5CG,KAAKH,QAAUG,KAAKnB,MAEpB,KAOX,WACE,YAAuBiL,IAAnB9J,KAAKN,UACAM,KAAKN,UAAUM,MACK,OAAlBA,KAAKlB,SACPkB,KAAKH,QAAU,MAAQG,KAAKnB,MAE5B,M,iCCjEb,aA0Be,IAtBR,MAGL,YAAYoL,GAFJ,KAAAC,WAAa,IAAI,IAGvBlK,KAAKmK,OAASF,EAEhB,YACE,OAAOjK,KAAKmK,OAEd,UAAUF,GACRjK,KAAKmK,OAASF,EACdjK,KAAKgK,OAAOC,GAEd,OAAOA,GACLjK,KAAKkK,WAAWE,KAAKH,GAEvB,MAAMrK,GAEJ,YADoBkK,IAAhB9J,KAAKmK,QAAsBvK,EAAEI,KAAKmK,QAC/BnK,KAAKkK,WAAWG,IAAIzK,M,iCCiBhB,IAhCR,MAGL,YAAY0K,GACV,GAHM,KAAAJ,WAAkD,GAClD,KAAAK,QAAU,EAEI,mBAATD,EACTtK,KAAKqK,IAAIC,QACJ,GAAoB,iBAATA,GAAqBA,GAAQA,EAAK5J,OAClD,IAAK,IAAIoD,EAAI,EAAGA,EAAIwG,EAAK5J,OAAQoD,IAAK9D,KAAKqK,IAAIC,EAAKxG,IAOxD,QAAQhE,GACN,IAAI0K,EAAYxK,KAAKkK,WACrB,IAAK,IAAIxB,KAAM8B,EACbA,EAAU9B,MAAO5I,GAQrB,IAAI2K,GACF,IAAI/B,EAAK1I,KAAKuK,UAEd,OADAvK,KAAKkK,WAAWxB,GAAM+B,EACf,WAAazK,KAAKkK,WAAWxB,M,iCC/BzB,IAJR,SAAyBjC,GAC9B,MAAsB,OAAfA,EAAMb,MAAgC,OAAfa,EAAMb,O,kCCDtC,kHAAO,MAAM8E,EAAsB,qCAE5BrI,eAAesI,EAAKnI,GAAW,MAAEoI,EAAQC,EAAOD,OAAU,IAC/D,MAAME,EAAWC,EAAsBvI,GACjCjD,QAAaqL,EAAME,GAAUrB,KAAMrF,GAAaA,EAAS4G,QAE/D,GAAIC,MAAMC,QAAQ3L,EAAKyF,OACrB,OAAOzF,EACF,GAAI0L,MAAMC,QAAQ3L,EAAKgH,QAAS,CAErC,MAAM4E,EAAML,EAASM,QAAQ,SAAU,IACvC,MAAO,CAAEpG,MAAO,CAAC,IAAKzF,EAAMmJ,GAAI,OAAQxF,KAAMiI,KAE9C,MAAM,IAAI7J,MACR,0BAA0BwJ,sCAKzB,SAASC,EAAsBvI,GACpC,OAAIA,EAAU6I,SAAS,qBACd7I,EAEFA,EAAU4I,QAAQ,sBAAuB,IAAM,iB,mDCvBxD,8BAee,IAXR,SAA2B7E,GAChC,OAAO,IAAEA,GACNC,OAAO,KACP8E,QAAQ,CACN7E,GAAWA,EAAME,KAAK4E,YAAc,EAAI,EAAI,EAC5C9E,GAAUA,EAAMb,KAChBa,GAAUA,EAAME,KAAK6E,QAEvBvB,U,6KCZL,sBAEO,MAAMN,EAAuB,IAAE,CACpC3E,MAAO,IAAE5B,KAGX,SAAwBb,GAClBA,EAAKkJ,cACPlJ,EAAO,IACL,CACEgE,OAAQ,IAAEnD,IAAKqD,IACb,MAAMxD,EAAOV,EAAKkJ,YAAYhF,EAAM9D,MACpC,OAAKM,EACE,IACL,CACE0D,KAAM,CACJC,UAAYA,GAAc,IAAIA,EAAW3D,KAG7CwD,GAPgBA,KAWtBlE,IAGJ,OAAOA,OAGM,O,iCC7Bf,8BAkBe,IAfR,SAAmByC,GACxB,OAAO,IAAEsG,QAAQtG,EAAO,CACrBzC,GACQ,IAAEA,EAAKgE,QACXC,OAAO,KACPA,OAAQC,GAAUA,EAAME,KAAK4E,WAAa,GAC1C/E,OAAQC,GAAUA,EAAME,KAAK6E,MAAQ,GACrCpI,IAAKqD,GAAUA,EAAME,KAAK6E,OAC1BE,MAEJnJ,GAASA,EAAKoJ,IACdpJ,GAASA,EAAK6C,MAAMwG,kB,iCCdzB,2EAkHA,MAAMC,EACJ,YACUC,EACAC,EACQ9I,GAFR,KAAA6I,YACA,KAAAC,MACQ,KAAA9I,OAElB,KAAKnE,GACH,OAAO,IACLA,EACAkB,KAAK8L,UACFE,QAAQhM,KAAK+L,KACbtC,KAAM5I,GAAS,YAASA,GAAMC,GAAG,iBAGxC,mBACE,MAAMD,QAAab,KAAK8L,UAAUE,QAAQhM,KAAK+L,KAC/C,OAAOvI,IAAIyI,gBAAgBpL,IAI/B,MAAMqL,EAGJ,YACUJ,EACRK,GADQ,KAAAL,YAGR9L,KAAKoM,aAAeN,EAAU9I,KAAKL,KAAKwJ,EAAKjJ,MAE/C,OACE,OACElD,KAAKqM,WACJrM,KAAKqM,SAAWrM,KAAK8L,UAAUQ,YAAYtM,KAAKoM,gBAOvD/J,eAAekK,EAAW1L,GAExB,GAAc,qBADM,YAASA,EAAK2L,MAAM,EAAG,KAAK1L,GAAG,QAEjD,MAAM,IAAIQ,MAAM,wBAElB,MAAMmL,QAAe,YAAS5L,EAAK2L,MAAM,GAAI,KAAK1L,GAAG,eACrD,IAAI4L,EAAQ,IAAIC,WAAWF,GAE3B,MAAMG,EADOF,EAAM,IAAMA,EAAM,IAAM,IAAMA,EAAM,IAAM,KAAOA,EAAM,IAAM,IAE1E,OAAO7L,EAAK2L,MAAM,GAAKI,GAXV,IAvIR,MAcL,YACE5J,EACA6J,EAII,IAXC,KAAA/N,SAAW,CAChBgO,IAAK,IAAI,IACTjN,QAAS,IAAI,KA0CP,KAAAkN,aAAe,IAAEC,KAAK3K,UAC5B,MAAMM,QAAa3C,KAAKiN,MAAMtK,KAAK3C,KAAKkN,mBAClC3N,QAAaoD,EAAKwK,OAClBhE,QAAa,IAAIiE,KAAK,CAAC7N,IAAO4J,OACpC,OAAOkE,KAAKC,MAAMnE,KAEZ,KAAAoE,SAAW,IAAEP,KAAK3K,gBACDrC,KAAK+M,gBACZS,KAAKpK,IAAK+I,GAAS,IAAID,EAAIlM,KAAMmM,KAE3C,KAAAsB,YAAc,IAAET,KAAK3K,UAC3B,MAAMqL,QAAiB1N,KAAK+M,eAC5B,IAAIY,EAAQ,IAAIC,IAChB,IAAK,IAAIjL,KAAQ+K,EAASC,MACxBA,EAAME,IAAIlL,EAAKM,KAAK2I,cAAejJ,GAErC,OAAOgL,IA/Ca,iBAAT3K,IACTA,EAAO,IAAI,IAAa,IAAIQ,IAAIR,EAAM8K,SAASrK,QAGjD,MAAMsK,EACwB,iBAArBlB,EAAQkB,SACX,IAAI,IAAa,IAAIvK,IAAIqJ,EAAQkB,SAAUD,SAASrK,OACpDoJ,EAAQkB,SAEd/N,KAAKiN,MAAQjK,EACbhD,KAAKgO,UAAYD,EACjB/N,KAAKiO,iBAAmBpB,EAAQqB,gBAChClO,KAAKkN,kBAAoBL,EAAQsB,kBAAoB,gBAErD,IAAI9N,EAAe,IAA2BL,KAAKlB,SAASe,SAM5DG,KAAKsM,YAAc,IACjBtM,KAAKlB,SAASgO,IACd,IAAO,EAAIsB,GACTA,EACG3E,KAAM4E,GAAaA,EAASlB,KAThB,MACjB,IAAIrO,EAAW,IAAI,IAEnB,OADAuB,EAAagK,IAAIvL,GACVA,GAM+BwP,KACjC7E,KAAM8E,GAAgB,IAAInB,KAAK,CAACmB,KAChC9E,KAAK8C,KAwBd,WACE,OAAOvM,KAAKiN,MAEd,WAAWhK,GAET,IAAIN,SADkB3C,KAAKyN,eACRe,IAAIvL,EAAK2I,eAC5B,GAAIjJ,EACF,OAAO,IAAIkJ,EAA0B7L,KAAM2C,EAAKoJ,IAAKpJ,EAAKM,MACrD,GACLjD,KAAKgO,WACLhO,KAAKiO,kBACLjO,KAAKiO,iBAAiBQ,KAAKxL,GAE3B,OAAOjD,KAAKgO,UAAUrL,KAAKM,GAE3B,MAAM,IAAI3B,MAAM,mBAAqB2B,GAGzC,eAAe8D,EAAO2H,EAAOC,IAC3B,MACM5C,SADa/L,KAAKuN,YACPxG,GAEjB,aADsBgF,EAAIpB,QACX6B,MAAMkC,EAAOC,M,+DC1GhC,MAAMC,EAAkB,IAAE5B,KAAK,KAC7B,MAAM6B,EAAQ,IAAIC,KAAKA,KAAKC,MAAQ,OAAYC,cAAc7L,MAAM,KAAK,GACzE,OAAO,IAAE8L,QAASvG,IAChB,MAAMwG,EAAM,qBAAW,OAGvB,OAFAA,EAAIzO,OAAOiI,GACXwG,EAAIzO,OAAOoO,GACJK,EAAIC,OAAO,WAIf,MAAM,EAEX,YAAYnK,GAAe,QAAEoK,GAAU,GAAS,IAC9C,IAAKA,EAEH,YADApP,KAAKqP,IAAM,IAAIC,KAIjB,MAAMC,EAAS,IAAEjK,OACfN,EAAMwB,OAAQ+B,IAAOA,EAAEiH,SAAWjH,EAAE9F,UACnC8F,GAAMqG,IAAkBrG,EAAEG,KAE7B1I,KAAKqP,IAAM,IAAIC,IAAIC,EAAO/C,MAAM,EAAG,GAAGpJ,IAAKmF,GAAMA,EAAEG,KAErD,eAAeA,GACb,OAAO1I,KAAKqP,IAAII,IAAI/G,IC1BxB,MAAMgH,EAAW,CACf,CAAEtK,MAAO,cAAeuK,SAAWpN,GAASA,EAAKiN,QACjD,CAAEpK,MAAO,WAAYuK,SAAWpN,GAASA,EAAKE,UAC9C,CAAE2C,MAAO,aAAcuK,SAAWpN,GAASA,EAAKsD,YAChD,CACET,MAAO,uBACPuK,SAAWpN,GACTA,EAAK4C,OAAS2J,KAAKC,MAAQD,KAAKxB,MAAM/K,EAAK4C,OAAS,OACtDsC,KAAOlF,GAASA,EAAK4C,MACrBE,SAAS,GAEX,CACED,MAAO,0BACPuK,SAAU,CAACpN,EAAMqN,IAAYA,EAAQC,aAAaC,eAAevN,EAAKmG,KAExE,CAAEtD,MAAO,IAAKuK,SAAU,KAAM,IAuCjB,IApCR,SACL3K,GACA,oBAAE+K,GAAsB,GAAU,IAElC,MAAMH,EAAU,CACdC,aAAc,IAAI,EAAa7K,EAAO,CAAEoK,QAASW,KAEnD,IAAIC,EAASN,EAAStM,IAAK6M,IAAU,CACnCC,MAAOD,EACPE,OAAQ,CAAE/K,MAAO6K,EAAM7K,MAAOJ,MAAO,OAEvC,IAAK,IAAIzC,KAAQyC,EACf,IAAK,IAAI,MAAEkL,EAAK,OAAEC,KAAYH,EAC5B,GAAIE,EAAMP,SAASpN,EAAMqN,GAAU,CACjCO,EAAOnL,MAAMpE,KAAK2B,GAClB,MAIN,IAAK,IAAI,MAAE2N,EAAK,OAAEC,KAAYH,EACxBE,EAAMzI,KACR0I,EAAOnL,MAAQ,IAAEsG,QACf6E,EAAOnL,MACP,CAACkL,EAAMzI,MACP,CAACyI,EAAM7K,QAAU,OAAS,QAEnB6K,EAAM7K,SACf8K,EAAOnL,MAAMK,UAGjB,OAAO,IAAE2K,GACN5M,IAAI,UACJoD,OAAQyJ,GAAUA,EAAMjL,MAAMtE,OAAS,GACvCuJ,U,iCCrDL,+CAEO,SAASmG,EACdpN,EACAlB,GAGA,GAAIA,EAAIuO,SAAS,OACf,MAAO,CAAC,IAAI,IAAa,IAAI7M,IAAI1B,IAAOA,EAAIqB,MAAM,KAAKqJ,OAAO,GAAG,IAGnE,MAAM8D,EAAQxO,EAAIqB,MAAM,KACxB,IAAItD,EAAUmD,EACd,KAAOsN,EAAM5P,OAAS,GAAG,CACvB,MAAM6P,EAAUD,EAAM3P,QACtBd,EAAU,IAAI2Q,EAAmB3Q,EAAS0Q,GAE5C,MAAO,CAAC1Q,EAASyQ,EAAM,IAGlB,MAAME,EACX,YAAoBxN,EAA0BuN,GAA1B,KAAAvN,OAA0B,KAAAuN,UAE9C,WAAWE,GACT,OAAOzQ,KAAKgD,KAAKL,KAAK,GAAG3C,KAAKuQ,WAAWE,Q,iCCzB7C,8KAAIC,EAAW,KAEf,SAASC,IACP,OAAOD,IAAaA,EAuEtB,WACE,IAAItB,GAAU,EACVwB,EAAa,KACbC,GAAmB,EACnBC,GAAmB,EACvB,MAAMC,EAAY,GAEZzJ,EAAa,IAAI0J,MAAM,EAAQ,OACrC1J,EAAW2J,QAAU,OACrB3J,EAAW4J,MAAO,EAClB5J,EAAW6J,iBAAmB,KAC5BN,GAAmB,EACnBpQ,KAEF6G,EAAWqD,OAEX,MAAMyG,EAAUxM,SAASyM,cAAc,SACvCD,EAAQE,IAAM,EAAQ,MACtBF,EAAQG,OAAS,GACjBH,EAAQzG,OAER,MAAM6G,EAAkBC,EAAYnK,EAAY,GAAMhH,IACrC,IAAXA,GAAgBwQ,IAClBA,GAAmB,EACnBxJ,EAAWoK,WAIf,SAASjR,IACP,IAAK2O,EAAS,CACR0B,IACFU,EAAgBG,OAAO,EAAG,KAC1Bb,GAAmB,EACnBxJ,EAAWoK,SAEb,IAAK,MAAM1K,KAAOW,OAAO/B,KAAKmL,GAAY,CACvBA,EAAU/J,GAClB4K,UAEX,OAEF,IAAIC,EAAU,KACd,IAAK,MAAM7K,KAAOW,OAAO/B,KAAKmL,GAAY,CACxC,MAAML,EAAWK,EAAU/J,GACvBA,IAAQ4J,EACNF,EAAS3R,SACX2R,EAASoB,OACTD,EAAUnB,GAGZA,EAASqB,OAGb,GAAIF,EACFL,EAAgBG,OAAO,EAAG,QAG1B,GADAH,EAAgBG,OAAO,GAAK,IACxBd,IAAqBC,EAAkB,CACzCA,GAAmB,EACnB,IACExJ,EAAWwK,OACX,MAAOxN,GACPG,QAAQuN,KAAK,kCAqFrB,MA/EuB,CACrB,SACM5C,IACJA,GAAU,EACV3O,MAEF,UACO2O,IACLA,GAAU,EACV3O,MAEF,KACE,GAAK2O,EAAL,CACAgC,EAAQa,YAAc,EACtB,IACEb,EAAQU,OACR,MAAOxN,GACPG,QAAQuN,KAAK,4BAGjB,QAAQE,GACFtB,IAAesB,IACnBtB,EAAasB,EACTA,IAAYnB,EAAUmB,KACxBnB,EAAUmB,GAMhB,SAAwBA,GACtB,MAAMC,EAAQvN,SAASyM,cAAc,SACrCc,EAAMb,IAAMY,EACZ,IAAIE,GAAS,EAEb,MAAMC,EAAQZ,EAAYU,EAAO,EAAI7R,IACpB,IAAXA,IACF6R,EAAMT,eACCX,EAAUmB,GACjBzR,OAIEiQ,EAAW,CACf3R,QAAQ,EACR,OACE,IAAKqT,EACH,IACED,EAAML,OACNM,GAAS,EACT,MAAO9N,GACPG,QAAQuN,KAAK,cAAeG,EAAMb,KAGtCe,EAAMV,OAAO,EAAG,IAElB,OACEU,EAAMV,OAAO,EAAG,IAElB,UACEQ,EAAMT,eACCX,EAAUmB,GACjBzR,MAcJ,OAVA0R,EAAMhB,iBAAmB,KACvBT,EAAS3R,QAAS,EAClB0B,KAEF0R,EAAMG,QAAU,YACPvB,EAAUmB,GACjBzR,KAEF0R,EAAMxH,OAEC+F,EApDkB6B,CAAeL,IAEtCzR,OArK2B+R,IAG1B,SAASvB,IACdN,IAGK,SAAS8B,IACd,OAAO9B,IAAc8B,SAGhB,SAASC,IACd,OAAO/B,IAAc+B,UAGhB,SAASC,IACd,OAAOhC,IAAcgC,KAGhB,SAASC,EAAQ9Q,GACtB,OAAO6O,IAAciC,QAAQ9Q,GAG/B,SAAS2P,EAAYU,EAAOU,EAAeC,GACzC,IAGIC,EAHAC,EAAe,EACfC,EAAe,EACfC,GAAY,EAIhB,SAASC,IACP,OAAQrE,KAAKC,MAAQgE,GAAiB,IAGxC,SAASK,IACP,OAAIJ,EAAeH,EACVlP,KAAK+H,IAAIsH,EAAcH,EAAgBM,IAAYF,GAExDD,EAAeH,EACVlP,KAAK0P,IAAIL,EAAcH,EAAgBM,IAAYF,GAErDD,EAGT,SAASvS,IACPyS,GAAY,EACZ,MAAMI,EAAgBF,IACtBjB,EAAMZ,OAAS+B,EACXA,IAAkBN,EAChBF,GAAiBA,EAAgBE,GAEhCE,IACHA,GAAY,EACZK,sBAAsB9S,IAK5B,OA9BA0R,EAAMZ,OAASsB,EA8BR,CACL,OAAOvS,EAAQkT,GACTR,IAAiB1S,GAAUkT,IAAUP,IACvCJ,EAAgBO,IAChBJ,EAAe1S,EACf2S,EAAeO,EACfT,EAAgBjE,KAAKC,MACrBtO,S,iCCpER,iEAMO,SAASgT,EACdlR,EACAC,GAQA,MAAME,EACJH,EAAKuJ,WACL,IAAI,IACF,IAAItI,IAAIjB,EAAKW,KAAKkI,QAAQ,OAAQ,KAAM5I,EAAU4I,QAAQ,OAAQ,OAGtE,MAAO,CAAE1I,gBAAegR,eAG1B,SACE1Q,EACA2Q,GAEA,GAAsB,OAAlBA,EACF,OAAO3Q,OAEa8G,IAAlB6J,IACFA,EAAgB,wBAElB,MAAOC,EAAYzF,GAAoB,YACrCnL,EACA2Q,GAEF,OAAO,IAAI,IAAuBC,EAAY,CAC5CzF,iBAAkBA,EAClBJ,SAAU/K,EACVkL,gBAAiB,+BArBI2F,CAAmBnR,EAAeH,EAAKuR,mB,gCCrBhE,4HAEA,IAAIC,EAAQnU,GAAOd,GAAmC,OAAtBA,EAASA,SAAoBc,EAAEd,GAAY,GAGhEkV,EAAkBD,EAC1BjV,GAAa,IAAMA,EAASe,SAAW,MAAQ,IAAMf,EAASD,QAItDoV,EAAuBF,EAC/BjV,IAAeA,EAASe,QAAUf,EAASD,MAAS,KAAKqV,QAAQ,GAAK,KAI9DC,EAAkBJ,EAAMjV,GAAaA,EAASG,MAAQ","file":"build/music-7ec4d72278c279d9d096.js","sourcesContent":["import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap((data) => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  let queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","module.exports = __webpack_public_path__ + \"build/354b30433269481d2f132496a0d13f64.ogg\";","module.exports = __webpack_public_path__ + \"build/38fbcad5f2b14ca6ffc359446f7ec455.ogg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as MusicPreviewer from './'\n\nMusicPreviewer.preload()\n\nexport default class MusicSelectPreviewer extends React.Component {\n  static propTypes = {\n    url: PropTypes.string,\n  }\n  componentDidMount() {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(this.props.url)\n    addEventListener('message', this.handleMessage)\n  }\n  componentWillUnmount() {\n    MusicPreviewer.disable()\n    removeEventListener('message', this.handleMessage)\n  }\n  componentWillReceiveProps(nextProps) {\n    MusicPreviewer.preview(nextProps.url)\n  }\n  render() {\n    return null\n  }\n  handleMessage({ data }) {\n    if (data.type === 'calibration-started') {\n      MusicPreviewer.disable()\n    } else if (data.type === 'calibration-closed') {\n      MusicPreviewer.enable()\n    }\n  }\n}\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await new Promise((resolve) => setTimeout(resolve, waitMs))\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          var xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","export default document.querySelector('#scene-root')\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\n\nconst sorters = {\n  ingame: (songs) => groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\nfunction validateSong(song) {\n  const problems = []\n  const report = (message, ...keys) => problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nfunction renderSongWarnings(song) {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport class MusicTable extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    url: PropTypes.string,\n    initialSort: PropTypes.string,\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      sort: this.props.initialSort || Object.keys(sorters)[0],\n      previewUrl: null,\n      previewEnabled: false,\n    }\n  }\n  renderTable() {\n    return (\n      <table style={{ borderSpacing: 4 }}>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              {this.renderSorter()}\n              {' · '}\n              {this.renderPreview()}\n            </th>\n          </tr>\n          <tr>\n            <th>id</th>\n            <th>song</th>\n            <th>warnings</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    )\n  }\n  renderSorter() {\n    const out = []\n    for (const key of Object.keys(sorters)) {\n      out.push(\n        <button\n          key={key}\n          onClick={() => {\n            this.setState({ sort: key })\n          }}\n        >\n          {key}\n        </button>\n      )\n    }\n    return (\n      <span>\n        <strong>Sort by:</strong> {out}\n      </span>\n    )\n  }\n  renderPreview() {\n    const button = (\n      <button\n        onClick={() => {\n          this.setState((s) => ({ previewEnabled: !s.previewEnabled }))\n        }}\n      >\n        {this.state.previewEnabled ? 'disable' : 'enable'}\n      </button>\n    )\n    return (\n      <span>\n        <strong>Music preview:</strong> {button}\n        {this.state.previewEnabled && (\n          <MusicSelectPreviewer url={this.state.previewUrl} />\n        )}\n      </span>\n    )\n  }\n  renderRows() {\n    const categories = sorters[this.state.sort](this.props.data.songs)\n    const out = []\n    for (const category of categories) {\n      out.push(\n        <tr key={category.title}>\n          <th colSpan={4}>{category.title}</th>\n        </tr>\n      )\n      for (const song of category.songs) {\n        out.push(\n          <tr key={song.id}>\n            <td>\n              <strong\n                onClick={() => {\n                  prompt('', `vim '${song.id}/README.md'`)\n                }}\n              >\n                <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n              </strong>\n              <br />\n              <span style={{ color: '#8b8685' }}>{song.added}</span>\n            </td>\n            <td style={{ textAlign: 'center', background: '#353433' }}>\n              <span\n                style={{ color: '#8b8685' }}\n                onClick={async () => {\n                  const previewUrl = await getPreviewResourceUrl(\n                    song,\n                    this.props.url\n                  )\n                  this.setState({ previewUrl })\n                }}\n              >\n                {song.genre}\n              </span>\n              <br />\n              <strong\n                onClick={() => {\n                  console.log(song)\n                  alert(require('util').inspect(song))\n                }}\n              >\n                {song.title}\n              </strong>\n              <br />\n              {song.artist}\n            </td>\n            <td>{renderSongWarnings(song)}</td>\n          </tr>\n        )\n      }\n    }\n    return out\n  }\n  renderMessage(text) {\n    return <div style={{ textAlign: 'center' }}>{text}</div>\n  }\n  render() {\n    if (!this.props.data) return this.renderMessage('No data')\n    try {\n      return this.renderTable()\n    } catch (e) {\n      return this.renderMessage(`Error: ${e}`)\n    }\n  }\n}\n\nexport default MusicTable\n","import React from 'react'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\nimport { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\n\nimport MusicTable from './MusicTable'\n\nexport class CollectionViewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: query.server || OFFICIAL_SERVER_URL,\n      status: 'Loading',\n    }\n  }\n  componentDidMount() {\n    load(this.state.url)\n      .then((result) => {\n        this.setState({ status: 'Load completed', data: result })\n      })\n      .catch((e) => {\n        this.setState({ status: 'Load error: ' + e })\n      })\n  }\n  render() {\n    return (\n      <div>\n        <header style={{ textAlign: 'center' }}>\n          <h1>Bemuse collection viewer</h1>\n          <div>\n            {this.state.url}\n            <br />\n            {this.state.status}\n          </div>\n        </header>\n        <div style={{ padding: 20 }}>\n          <MusicTable\n            data={this.state.data && preprocessCollection(this.state.data)}\n            url={this.state.url}\n            initialSort={query.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n  get value() {\n    return this._value\n  }\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (var i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    var callbacks = this._callbacks\n    for (var id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    var id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import u from 'updeep'\n\nexport const preprocessCollection = u({\n  songs: u.map(preprocessSong),\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = u(\n      {\n        charts: u.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return u(\n            {\n              info: {\n                subtitles: (subtitles) => [...subtitles, name],\n              },\n            },\n            chart\n          )\n        }),\n      },\n      song\n    )\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    let simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    let nextProgress = () => {\n      let progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    let files = new Map<string, BemusePackFileEntry>()\n    for (let file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    let file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  let array = new Uint8Array(buffer)\n  let length = array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  let groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (let song of songs) {\n    for (let { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (let { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        try {\n          background.play()\n        } catch (e) {\n          console.warn('Cannot play background music')\n        }\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      try {\n        goSound.play()\n      } catch (e) {\n        console.warn('Cannot play go sound.')\n      }\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          try {\n            audio.play()\n            played = true\n          } catch (e) {\n            console.warn('Cannot play', audio.src)\n          }\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import bytes from 'bytes'\n\nlet wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n"],"sourceRoot":""}
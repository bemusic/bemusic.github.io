{"version":3,"sources":["file:///home/circleci/bemuse/src/bootstrap/index.js","file:///home/circleci/bemuse/src/boot/environment.js"],"names":["global","DEBUG","debug","Promise","Bluebird","prototype","log","_len","arguments","length","args","Array","_key","this","tap","value","_console","console","apply","_toConsumableArray","concat","__webpack_require__","r","__webpack_exports__","fastclick__WEBPACK_IMPORTED_MODULE_2__","fastclick__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","window","React","FastClick","attach","document","body"],"mappings":"ifAuBAA,EAAOC,MAAQC,IAKfF,EAAOG,QAAUC,IAMjBD,QAAQE,UAAUC,IAAM,WAAmB,QAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GACzC,OAAOC,KAAKC,IAAI,SAAAC,GAAK,IAAAC,EAAA,OAAIA,EAAAC,SAAQX,IAARY,MAAAF,EAAAG,EAAeT,EAAKU,QAAQL,+DCnCvDM,EAAAC,EAAAC,GAAAF,EAAA,IAAAA,EAAA,UAAAG,EAAAH,EAAA,MAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAKAE,OAAOC,MAAQA,IACfC,IAAUC,OAAOC,SAASC","file":"environment-b213eb7a01b993c6db51.js","sourcesContent":["/* eslint-disable no-extend-native */\n\n// :doc:\n// Bootstraps the environment with:\n//\n// - `babel-polyfill`_\n// - `debug`_\n// - `Bluebird`_ (with `extended Promise API`_)\n//\n// .. _ES6 Runtime: https://babeljs.io/docs/usage/polyfill/\n// .. _Babel: https://babeljs.io/\n// .. _debug: https://www.npmjs.com/package/debug\n// .. _bluebird: https://github.com/petkaantonov/bluebird\n// .. _Extended Promise API: https://github.com/petkaantonov/bluebird/blob/master/API.md\n\nimport '@babel/polyfill'\nimport 'whatwg-fetch'\nimport debug from 'debug'\nimport Bluebird from 'bluebird'\n\n// .. js:data:: DEBUG\n//\n//    An instance of ``debug``. Used for debugging.\nglobal.DEBUG = debug\n\n// .. js:data:: Promise\n//\n//    The Global Promise is replaced with Bluebird's implementation.\nglobal.Promise = Bluebird\n\n// .. js:function:: Promise.prototype.log\n//\n//    The Promise class is augmented with a ``log`` method that simply\n//    logs the value of the promise.\nPromise.prototype.log = function (...args) {\n  return this.tap(value => console.log(...args.concat([value])))\n}\n","import 'jquery'\nimport 'bemuse/bootstrap'\nimport FastClick from 'fastclick'\nimport React from 'react'\n\nwindow.React = React\nFastClick.attach(document.body)\n"],"sourceRoot":""}
{"version":3,"sources":["file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/url.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.jsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/index.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/Progress.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/observable.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/callbacks.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/MusicTable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.jsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/formatters.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/read-blob.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/utils.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/default.ogg","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/go.ogg","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/download.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/main-element.js"],"names":["URLResource","constructor","url","read","progress","this","as","async","Promise","resolve","name","URLResources","base","path","split","map","part","encodeURIComponent","join","URL","href","MusicSelectPreviewer","Component","componentDidMount","props","addEventListener","handleMessage","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","render","data","type","propTypes","string","getPreviewResourceUrl","song","serverUrl","tutorial","baseResources","file","preview_url","resolveUrl","Progress","current","undefined","total","_observable","report","extra","notify","watch","f","toString","formatter","value","_callbacks","_value","call","add","init","_nextId","length","i","args","callbacks","id","callback","chart","keys","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","reverse","sortBy","getAdded","initial","renderSongWarnings","problems","message","push","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","getPlayableCharts","info","subtitles","validateSong","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","super","state","sort","initialSort","Object","previewUrl","previewEnabled","renderTable","borderSpacing","colSpan","renderSorter","renderPreview","renderRows","out","onClick","setState","button","s","categories","category","prompt","color","textAlign","genre","console","log","alert","inspect","artist","renderMessage","text","e","object","query","server","status","then","result","catch","preprocessCollection","main","orderBy","difficulty","level","OFFICIAL_SERVER_URL","load","fetch","global","indexUrl","getServerIndexFileUrl","response","json","Array","isArray","dir","replace","Error","endsWith","draft","chart_names","preprocessSong","min","bpm","toLowerCase","BemusePackageFileResource","resources","ref","getBlob","blob","createObjectURL","Ref","spec","_basePromise","_promise","loadPayload","getPayload","slice","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","once","_base","_metadataFilename","Blob","JSON","parse","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","fallback","_fallback","_fallbackPattern","fallbackPattern","metadataFilename","simultaneous","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","getHashFunction","today","Date","now","toISOString","memoize","md5","update","digest","enabled","ids","Set","sorted","custom","isSongOfTheDay","has","grouping","criteria","context","songOfTheDay","songOfTheDayEnabled","groups","group","input","output","resolveRelativeResources","includes","parts","dirName","shift","DirectoryResources","filename","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","document","createElement","src","volume","backgroundFader","createFader","target","pause","fadeTo","destroy","playing","loaded","play","stop","playAudio","warn","createInstance","songUrl","audio","played","fader","onended","enable","disable","go","currentTime","preview","createMusicPreviewer","element","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","Math","max","currentVolume","requestAnimationFrame","speed","getSongResources","assetResources","bemusepackUrl","assetsBase","wrapAssetResources","bemusepack_url","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","reject","reader","FileReader","onload","onerror","readAsArrayBuffer","readAsText","fixed","atomic","promise","byteLength","hasByteLength","wrapPromise","ret","apply","bind","from","to","queue","unsubscribe","module","exports","getRetryDelay","random","shouldGiveUp","xh","XMLHttpRequest","open","responseType","onprogress","send","error","waitMs","querySelector"],"mappings":"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","file":"build/music-12d5c8b7b247fed126af.js","sourcesContent":["import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as MusicPreviewer from './'\n\nMusicPreviewer.preload()\n\nexport default class MusicSelectPreviewer extends React.Component {\n  static propTypes = {\n    url: PropTypes.string,\n  }\n\n  componentDidMount() {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(this.props.url)\n    addEventListener('message', this.handleMessage)\n  }\n\n  componentWillUnmount() {\n    MusicPreviewer.disable()\n    removeEventListener('message', this.handleMessage)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    MusicPreviewer.preview(nextProps.url)\n  }\n\n  render() {\n    return null\n  }\n\n  handleMessage({ data }) {\n    if (data.type === 'calibration-started') {\n      MusicPreviewer.disable()\n    } else if (data.type === 'calibration-closed') {\n      MusicPreviewer.enable()\n    }\n  }\n}\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (let i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    const callbacks = this._callbacks\n    for (const id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    const id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\n\nconst sorters = {\n  ingame: (songs) => groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\nfunction validateSong(song) {\n  const problems = []\n  const report = (message, ...keys) => problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nfunction renderSongWarnings(song) {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport class MusicTable extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    url: PropTypes.string,\n    initialSort: PropTypes.string,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sort: this.props.initialSort || Object.keys(sorters)[0],\n      previewUrl: null,\n      previewEnabled: false,\n    }\n  }\n\n  renderTable() {\n    return (\n      <table style={{ borderSpacing: 4 }}>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              {this.renderSorter()}\n              {' · '}\n              {this.renderPreview()}\n            </th>\n          </tr>\n          <tr>\n            <th>id</th>\n            <th>song</th>\n            <th>warnings</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    )\n  }\n\n  renderSorter() {\n    const out = []\n    for (const key of Object.keys(sorters)) {\n      out.push(\n        <button\n          key={key}\n          onClick={() => {\n            this.setState({ sort: key })\n          }}\n        >\n          {key}\n        </button>\n      )\n    }\n    return (\n      <span>\n        <strong>Sort by:</strong> {out}\n      </span>\n    )\n  }\n\n  renderPreview() {\n    const button = (\n      <button\n        onClick={() => {\n          this.setState((s) => ({ previewEnabled: !s.previewEnabled }))\n        }}\n      >\n        {this.state.previewEnabled ? 'disable' : 'enable'}\n      </button>\n    )\n    return (\n      <span>\n        <strong>Music preview:</strong> {button}\n        {this.state.previewEnabled && (\n          <MusicSelectPreviewer url={this.state.previewUrl} />\n        )}\n      </span>\n    )\n  }\n\n  renderRows() {\n    const categories = sorters[this.state.sort](this.props.data.songs)\n    const out = []\n    for (const category of categories) {\n      out.push(\n        <tr key={category.title}>\n          <th colSpan={4}>{category.title}</th>\n        </tr>\n      )\n      for (const song of category.songs) {\n        out.push(\n          <tr key={song.id}>\n            <td>\n              <strong\n                onClick={() => {\n                  prompt('', `vim '${song.id}/README.md'`)\n                }}\n              >\n                <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n              </strong>\n              <br />\n              <span style={{ color: '#8b8685' }}>{song.added}</span>\n            </td>\n            <td style={{ textAlign: 'center', background: '#353433' }}>\n              <span\n                style={{ color: '#8b8685' }}\n                onClick={async () => {\n                  const previewUrl = await getPreviewResourceUrl(\n                    song,\n                    this.props.url\n                  )\n                  this.setState({ previewUrl })\n                }}\n              >\n                {song.genre}\n              </span>\n              <br />\n              <strong\n                onClick={() => {\n                  console.log(song)\n                  alert(require('util').inspect(song))\n                }}\n              >\n                {song.title}\n              </strong>\n              <br />\n              {song.artist}\n            </td>\n            <td>{renderSongWarnings(song)}</td>\n          </tr>\n        )\n      }\n    }\n    return out\n  }\n\n  renderMessage(text) {\n    return <div style={{ textAlign: 'center' }}>{text}</div>\n  }\n\n  render() {\n    if (!this.props.data) return this.renderMessage('No data')\n    try {\n      return this.renderTable()\n    } catch (e) {\n      return this.renderMessage(`Error: ${e}`)\n    }\n  }\n}\n\nexport default MusicTable\n","import React from 'react'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\nimport { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\n\nimport MusicTable from './MusicTable'\n\nexport class CollectionViewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: query.server || OFFICIAL_SERVER_URL,\n      status: 'Loading',\n    }\n  }\n\n  componentDidMount() {\n    load(this.state.url)\n      .then((result) => {\n        this.setState({ status: 'Load completed', data: result })\n      })\n      .catch((e) => {\n        this.setState({ status: 'Load error: ' + e })\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <header style={{ textAlign: 'center' }}>\n          <h1>Bemuse collection viewer</h1>\n          <div>\n            {this.state.url}\n            <br />\n            {this.state.status}\n          </div>\n        </header>\n        <div style={{ padding: 20 }}>\n          <MusicTable\n            data={this.state.data && preprocessCollection(this.state.data)}\n            url={this.state.url}\n            initialSort={query.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","import produce from 'immer'\n\nexport const preprocessCollection = produce((draft, songs) => {\n  if (songs) {\n    draft.songs = songs.map((song) => preprocessSong(song))\n  }\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = produce(song, (draft) => {\n      if (draft.charts) {\n        draft.charts = draft.charts.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return produce(chart, (draft) => {\n            draft.info = {\n              subtitles: (subtitles) => [...subtitles, name],\n            }\n          })\n        })\n      }\n    })\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    const simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    const nextProgress = () => {\n      const progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    const files = new Map<string, BemusePackFileEntry>()\n    for (const file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    const file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  const array = new Uint8Array(buffer)\n  const length =\n    array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  const groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (const song of songs) {\n    for (const { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (const { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction playAudio(element) {\n  return new Promise((resolve) => {\n    resolve(element.play())\n  })\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        playAudio(background).catch(() =>\n          console.warn('Cannot play background music')\n        )\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      playAudio(goSound).catch(() => console.warn('Cannot play go sound.'))\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          playAudio(audio)\n            .then(() => {\n              played = true\n            })\n            .catch(() => console.warn('Cannot play', audio.src))\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import bytes from 'bytes'\n\nconst wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport const BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport const PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport const EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        const reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport async function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): Promise<T> {\n  if (!progress) return promise\n  const data = await Promise.resolve(promise)\n  if (hasByteLength(data)) {\n    progress.formatter = BYTES_FORMATTER\n    progress.report(data.byteLength, data.byteLength)\n  } else {\n    progress.report(1, 1)\n  }\n  return data\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return async function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    const ret = await f.apply(this, args)\n    progress.report(++current, total)\n    return ret\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  const queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","module.exports = __webpack_public_path__ + \"build/354b30433269481d2f132496a0d13f64.ogg\";","module.exports = __webpack_public_path__ + \"build/38fbcad5f2b14ca6ffc359446f7ec455.ogg\";","import delay from 'delay'\nimport { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await delay(waitMs)\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          const xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","export default document.querySelector('#scene-root')\n"],"sourceRoot":""}
{"version":3,"sources":["file:///home/circleci/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/packages/bms/lib/index.js","file:///home/circleci/bemuse/packages/bms/lib/util/match.js","file:///home/circleci/bemuse/packages/bms/lib/bms/headers.js","file:///home/circleci/bemuse/packages/bms/lib/bms/objects.js","file:///home/circleci/bemuse/packages/bms/lib/time-signatures/index.js","file:///home/circleci/bemuse/src/audio-context/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss?8185","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss","file:///home/circleci/bemuse/src/coming-soon/demo/template.jade","file:///home/circleci/bemuse/src/sampling-master/index.js","file:///home/circleci/bemuse/src/sampling-master/ogg.js","file:///home/circleci/bemuse/packages/bms/lib/reader/index.web.js","file:///home/circleci/bemuse/packages/bms/lib/reader/getReaderOptionsFromFilename.js","file:///home/circleci/bemuse/packages/bms/lib/compiler/index.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/segment.js","file:///home/circleci/bemuse/packages/bms/lib/notes/index.js","file:///home/circleci/bemuse/packages/bms/lib/notes/note.js","file:///home/circleci/bemuse/packages/bms/lib/notes/channels.js","file:///home/circleci/bemuse/packages/bms/lib/timing/index.js","file:///home/circleci/bemuse/packages/bms/lib/song-info/index.js","file:///home/circleci/bemuse/packages/bms/lib/keysounds/index.js","file:///home/circleci/bemuse/packages/bms/lib/positioning/index.js","file:///home/circleci/bemuse/packages/bms/lib/spacing/index.js","file:///home/circleci/bemuse/packages/bms/lib/bms/chart.js","file:///home/circleci/bemuse/src/resources/dnd-resources.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/index.js","file:///home/circleci/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/src/progress/utils.js","file:///home/circleci/bemuse/packages/bms/lib/util/lodash.js"],"names":["__webpack_exports__","blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","__export","m","p","exports","hasOwnProperty","__importStar","this","mod","__esModule","k","Object","call","defineProperty","value","Reader","__webpack_require__","Compiler","match","text","matched","when","pattern","callback","else","BMSHeaders","_data","_dataAll","prototype","each","i","get","name","toLowerCase","getAll","set","key","push","BMSObjects","_objects","add","object","channel","length","test","measure","fraction","all","slice","allSorted","list","sort","a","b","TimeSignatures","_values","getBeats","measureToBeat","sum","audio_context__WEBPACK_IMPORTED_MODULE_0__","audio_context__WEBPACK_IMPORTED_MODULE_0___default","n","latencyHint","r","Buffer","d","main","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","bms__WEBPACK_IMPORTED_MODULE_2__","bemuse_resources_dnd_resources__WEBPACK_IMPORTED_MODULE_3__","bemuse_sampling_master__WEBPACK_IMPORTED_MODULE_4__","co__WEBPACK_IMPORTED_MODULE_5__","co__WEBPACK_IMPORTED_MODULE_5___default","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_6__","_template_jade__WEBPACK_IMPORTED_MODULE_7__","_template_jade__WEBPACK_IMPORTED_MODULE_7___default","element","on","handler","el","appendTo","find","hide","e","preventDefault","dndLoader","originalEvent","loader","master","$log","$play","$sampler","log","t","loadKeysound","file","catch","replace","then","read","fileList","bmsFile","filter","f","arraybuffer","buffer","from","Uint8Array","promisify","readAsync","chart","compile","timing","fromBMSChart","notes","info","JSON","stringify","samples","promises","completed","note","keysound","headers","sample","console","error","tap","loadSamples","show","unmute","setTimeout","span","instance","play","scrollTop","scrollHeight","onstop","addClass","beatToSeconds","beat","done","go","ui","off","content","module","options","hmr","transform","insertInto","undefined","locals","buf","join","FADE_LENGTH","unmuteAudio","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_0__","bemuse_utils_read_blob__WEBPACK_IMPORTED_MODULE_1__","_ogg__WEBPACK_IMPORTED_MODULE_2__","dummyAudioTag","document","createElement","needsVorbisDecoder","canPlayType","SoundGroup","[object Object]","samplingMaster","volume","_master","_gain","audioContext","createGain","gain","connect","destination","disconnect","Sample","audioBuffer","_buffer","delay","PlayInstance","context","source","createBufferSource","onended","stop","node","group","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","playbackRate","random","pow","ctx","osc","createOscillator","frequency","resume","_audioContext","_samples","_groups","_instances","Set","_destination","_destroyed","destroy","blobOrArrayBuffer","_coerceToArrayBuffer","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","numberOfChannels","decode","ArrayBuffer","byteLength","view","decodeAudioData","delete","decoderPromise","limit","throat__WEBPACK_IMPORTED_MODULE_0___default","decodeOGG","bind","ns","default","src","eval","stbvorbis","buffers","sampleRate","totalLength","data","eof","decodedChunks","createBuffer","track","Array","fill","map","_","ch","getChannelData","chunk","forEach","offset","chardet","args","_i","arguments","charset","forceEncoding","detect","Blob","getReaderOptionsFromFilename_1","getReaderOptionsFromFilename","filename","match_1","chart_1","matchers","bms","if","endif","timeSignature","header","dtx","BMSChart","rng","floor","matcher","format","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","warnings","split","line","trim","index","eachLine","lineNumber","flow","charAt","pop","skipped","timeSignatures","string","items","substr","objects","handleChannelSentence","message","warn","__importDefault","data_structure_1","Segment","x","dx","note_1","invariant_1","ChannelMapping","Notes","Note","_notes","count","mapping","CHANNEL_MAPPING","IIDX_P1","BMSNoteBuilder","build","_chart","_mapping","_activeLN","_lastNote","_lnObj","_channelMapping","_this","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","_getBeat","endBeat","column","_getColumn","maybe","11","12","13","14","15","18","19","16","speedcore_1","lodash_1","precedence","bpm","Timing","initialBPM","actions","state","seconds","segments","inclusive","action","stopBeats","_speedcore","Speedcore","_eventBeats","uniq","secondsToBeat","bpmAtBeat","segmentAtX","getEventBeats","parseInt","isNaN","SongInfo","title","artist","genre","subtitles","subartists","difficulty","level","assign","extractSubtitle","Keysounds","_map","id","files","values","Positioning","speed","position","previous","Spacing","factor","unshift","headers_1","objects_1","time_signatures_1","bemuse_progress_utils__WEBPACK_IMPORTED_MODULE_0__","co__WEBPACK_IMPORTED_MODULE_1__","co__WEBPACK_IMPORTED_MODULE_1___default","bemuse_utils_read_blob__WEBPACK_IMPORTED_MODULE_2__","FileResource","_file","progress","URL","createObjectURL","event","_files","out","dataTransfer","item","readItem","addFile","entry","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","entries","createReader","results","readEntries","readDirectory","getFilesFromEvent","segment_1","_segments","_reached","targetFn","segment","target","_segmentAt","X","segmentAtT","T","BYTES_FORMATTER","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","bytes__WEBPACK_IMPORTED_MODULE_0__","bytes__WEBPACK_IMPORTED_MODULE_0___default","wrap","current","total","toFixed","extra","fixed","atomic","wrapPromise","simultaneous","bemuse_progress_formatters__WEBPACK_IMPORTED_MODULE_0__","loaded","report","promise","formatter","apply","to","watch","unsubscribe","queue","update","shift","lodash_uniq_1","lodash_map_1","lodash_values_1","lodash_assign_1"],"mappings":"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","file":"build/comingSoonDemo-92644aea9dbc01e6df0c.js","sourcesContent":["export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function(resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function() {\n          resolve(reader.result)\n        }\n        reader.onerror = function() {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","\"use strict\";\n/**\n * Public: The `bms` package is a library for working with rhythm game data.\n *\n * Although this library’s name suggests that it is for BMS file format,\n * almost every part can be used standalone.\n *\n * This package contains:\n *\n * - __Modules that reads and parses BMS files:__\n *\n *   - {Reader} reads the BMS file from a {Buffer}, detects the character set\n *     and decodes the buffer using that character set into a {String}.\n *   - {Compiler} reads the BMS source from a {String}, and converts into\n *     {BMSChart}, an internal representation of a BMS notechart.\n *\n * - __Classes for representing a BMS notechart.__\n *   These module stores the data as close to the BMS file format as possible.\n *\n *   Almost no musical interpretation is made.\n *   For example, a BPM change is simply represented using a\n *   BMSObject with `channel` = `03` or `08`.\n *\n *   - {BMSChart} is composed of {BMSHeaders}, {BMSObjects}, and {TimeSignatures}.\n *   - {BMSHeaders} represents the header sentences in a BMS file.\n *   - {BMSObjects} represents the objects in a BMS file.\n *   - {BMSObject} represents a single object.\n *\n * - __Classes that represent different aspects of a notechart.__\n *   Instance of these classes may be created from a {BMSChart},\n *   but they can be used in a standalone manner as well.\n *\n *   This makes this library very flexible,\n *   and able to accommodate different formats of notechart.\n *   For example, see the [bmson](https: *github.com/bemusic/bmson) package.\n *\n *   It’s also possible to use these classes in context other than music gaming,\n *   for example, you can use these classes to help building a music player\n *   that requires precise synchronization between beats.\n *\n *   - {TimeSignatures} represents a collection of time signatures\n *     in a musical score, and lets you convert the measure number and fraction\n *     into beat number.\n *   - {Timing} represents the timing information in a musical score,\n *     and provides methods to convert between musical time (beats) and\n *     metric time (seconds).\n *   - {SongInfo} represents the basic song information,\n *     such as title, artist, and genre.\n *   - {Notes} represents the sound objects inside your notechart.\n *   - {Keysounds} represents a mapping between keysound ID and filename.\n *   - {Positioning} represents a mapping between beat and in-game position.\n *     Some rhythm game lets chart author control the amount of scrolling\n *     per beat. In StepMania 5, this is called the scroll segments.\n *   - {Spacing} represents a mapping between beat and note spacing.\n *     Some rhythm game lets chart author change the note spacing (HI-SPEED)\n *     dynamically. In StepMania 5, this is called the speed segments.\n *\n * - __Low-level utility classes:__\n *\n *   - {Speedcore} represents a linear animation.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Reader = __importStar(require(\"./reader\"));\nexports.Reader = Reader;\nvar Compiler = __importStar(require(\"./compiler\"));\nexports.Compiler = Compiler;\n__export(require(\"./bms/chart\"));\n__export(require(\"./bms/headers\"));\n__export(require(\"./bms/objects\"));\n__export(require(\"./speedcore\"));\n__export(require(\"./time-signatures\"));\n__export(require(\"./notes\"));\n__export(require(\"./timing\"));\n__export(require(\"./song-info\"));\n__export(require(\"./keysounds\"));\n__export(require(\"./positioning\"));\n__export(require(\"./spacing\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction match(text) {\n    var matched = false;\n    return {\n        when: function (pattern, callback) {\n            if (matched)\n                return this;\n            var match = text.match(pattern);\n            if (match) {\n                matched = true;\n                callback(match);\n            }\n            return this;\n        },\n        else: function (callback) {\n            if (matched)\n                return this;\n            callback();\n        },\n    };\n}\nexports.match = match;\n//# sourceMappingURL=match.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A BMSHeader holds the header information in a BMS file, such as\n * `#TITLE`, `#ARTIST`, or `#BPM`.\n *\n * You get retrieve a header using the `get()` method:\n *\n * ```js\n * chart.headers.get('title')\n * ```\n *\n * For some header fields that may contain multiple values, such as `#SUBTITLE`,\n * you can get them all using `getAll()`:\n *\n * ```js\n * chart.headers.getAll()\n * ```\n */\nvar BMSHeaders = /** @class */ (function () {\n    function BMSHeaders() {\n        this._data = {};\n        this._dataAll = {};\n    }\n    /**\n     * Iterates through each header field using a callback function.\n     * @param callback will be called for each header field\n     */\n    BMSHeaders.prototype.each = function (callback) {\n        for (var i in this._data) {\n            callback(i, this._data[i]);\n        }\n    };\n    /**\n     * Retrieves the header field’s latest value.\n     * @param name field’s name\n     * @return the field’s latest value\n     */\n    BMSHeaders.prototype.get = function (name) {\n        return this._data[name.toLowerCase()];\n    };\n    /**\n     * Retrieves the header field’s values.\n     * This is useful when a header field is specified multiple times.\n     * @param name field’s name\n     */\n    BMSHeaders.prototype.getAll = function (name) {\n        return this._dataAll[name.toLowerCase()];\n    };\n    /**\n     * Sets the header field’s value.\n     * @param name field’s name\n     * @param value field’s value\n     */\n    BMSHeaders.prototype.set = function (name, value) {\n        var key = name.toLowerCase();\n        this._data[key] = value;\n        (this._dataAll[key] || (this._dataAll[key] = [])).push(value);\n    };\n    return BMSHeaders;\n}());\nexports.BMSHeaders = BMSHeaders;\n//# sourceMappingURL=headers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * BMSObjects holds a collection of objects inside a BMS notechart.\n */\nvar BMSObjects = /** @class */ (function () {\n    function BMSObjects() {\n        this._objects = [];\n    }\n    /**\n     * Adds a new object to this collection.\n     * If an object already exists on the same channel and position,\n     * the object is replaced (except for autokeysound tracks).\n     * @param object the object to add\n     */\n    BMSObjects.prototype.add = function (object) {\n        if (object.channel !== '01') {\n            for (var i = 0; i < this._objects.length; i++) {\n                var test = this._objects[i];\n                if (test.channel === object.channel &&\n                    test.measure === object.measure &&\n                    test.fraction === object.fraction) {\n                    this._objects[i] = object;\n                    return;\n                }\n            }\n        }\n        this._objects.push(object);\n    };\n    /**\n     * Returns an array of all objects.\n     */\n    BMSObjects.prototype.all = function () {\n        return this._objects.slice();\n    };\n    /**\n     * Returns a sorted array of all objects.\n     */\n    BMSObjects.prototype.allSorted = function () {\n        var list = this.all();\n        list.sort(function (a, b) {\n            return a.measure + a.fraction - (b.measure + b.fraction);\n        });\n        return list;\n    };\n    return BMSObjects;\n}());\nexports.BMSObjects = BMSObjects;\n//# sourceMappingURL=objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A TimeSignatures is a collection of time signature values\n * index by measure number.\n *\n * The measure number starts from 0.\n * By default, each measure has a measure size of 1\n * (which represents the common 4/4 time signature)\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00102:0.75\n * #00103:1.25\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can access the {TimeSignatures} object:\n *\n * ```js\n * var timeSignatures = bmsChart.timeSignatures\n * ```\n *\n * Note that you can also use the constructor\n * to create a {TimeSignatures} from scratch.\n *\n * One of the most useful use case of this class\n * is to convert the measure and fraction into beat number.\n *\n * ```js\n * timeSignatures.measureToBeat(0, 0.000) // =>  0.0\n * timeSignatures.measureToBeat(0, 0.500) // =>  2.0\n * timeSignatures.measureToBeat(1, 0.000) // =>  4.0\n * timeSignatures.measureToBeat(1, 0.500) // =>  5.5\n * timeSignatures.measureToBeat(2, 0.000) // =>  7.0\n * timeSignatures.measureToBeat(2, 0.500) // =>  9.5\n * timeSignatures.measureToBeat(3, 0.000) // => 12.0\n * ```\n */\nvar TimeSignatures = /** @class */ (function () {\n    function TimeSignatures() {\n        this._values = {};\n    }\n    /**\n     * Sets the size of a specified measure.\n     * @param measure the measure number, starting from 0\n     * @param value the measure size.\n     *  For example, a size of 1.0 represents a common 4/4 time signature,\n     *  whereas a size of 0.75 represents the 3/4 or 6/8 time signature.\n     */\n    TimeSignatures.prototype.set = function (measure, value) {\n        this._values[measure] = value;\n    };\n    /**\n     * Retrieves the size of a specified measure.\n     * @param measure representing the measure number.\n     * @returns the size of the measure.\n     *  By default, a measure has a size of 1.\n     */\n    TimeSignatures.prototype.get = function (measure) {\n        return this._values[measure] || 1;\n    };\n    /**\n     * Retrieves the number of beats in a specified measure.\n     *\n     * Since one beat is equivalent to a quarter note in 4/4 time signature,\n     * this is equivalent to `(timeSignatures.get(measure) * 4)`.\n     * @param measure representing the measure number.\n     * @returns the size of the measure in beats.\n     */\n    TimeSignatures.prototype.getBeats = function (measure) {\n        return this.get(measure) * 4;\n    };\n    /**\n     * Converts a measure number and a fraction inside that measure\n     * into the beat number.\n     *\n     * @param measure the measure number.\n     * @param fraction the fraction of a measure,\n     * @returns the number of beats since measure 0.\n     */\n    TimeSignatures.prototype.measureToBeat = function (measure, fraction) {\n        var sum = 0;\n        for (var i = 0; i < measure; i++)\n            sum += this.getBeats(i);\n        return sum + this.getBeats(measure) * fraction;\n    };\n    return TimeSignatures;\n}());\nexports.TimeSignatures = TimeSignatures;\n//# sourceMappingURL=index.js.map","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction',\n})\n","import './style.scss'\n\nimport $ from 'jquery'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport co from 'co'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main(element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nfunction go(loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  co(function*() {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = Buffer.from(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>')\n      .text(JSON.stringify(info, null, 2))\n      .appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function() {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n            .text('[' + note.keysound + '] ')\n            .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function() {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay() {\n    return new Promise(function(resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\\n\", \"\"]);\n\n// exports\n","var jade = require(\"/home/circleci/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\nimport { decodeOGG } from './ogg'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  // We have a Vorbis audio decoder!\n  if (type === 'audio/ogg; codecs=\"vorbis\"') return true\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\nconst needsVorbisDecoder = !dummyAudioTag.canPlayType(\n  'audio/ogg; codecs=\"vorbis\"'\n)\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination() {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample(blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group(options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      if (needsVorbisDecoder && arrayBuffer.byteLength > 4) {\n        const view = new Uint8Array(arrayBuffer, 0, 4)\n        if (\n          view[0] === 0x4f &&\n          view[1] === 0x67 &&\n          view[2] === 0x67 &&\n          view[3] === 0x53\n        ) {\n          return resolve(decodeOGG(this.audioContext, arrayBuffer))\n        }\n      }\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor(samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination() {\n    return this._gain\n  }\n\n  destroy() {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor(samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor(samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio(ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","import throat from 'throat'\n\nlet decoderPromise\n\nconst limit = throat(1)\n\n/**\n * Decodes an OGG file using stbvorbis.js.\n *\n * @param {AudioContext} audioContext\n * @param {ArrayBuffer} arrayBuffer\n */\nexport async function decodeOGG(audioContext, arrayBuffer) {\n  if (!decoderPromise) {\n    decoderPromise = import(/* webpackChunkName: 'stbvorbis' */ 'raw-loader!./vendor/stbvorbis/stbvorbis-e6da5fe.js')\n      .then(ns => ns.default)\n      .then(src => {\n        // eslint-disable-next-line no-eval\n        return (0, eval)(src + ';stbvorbis')\n      })\n  }\n  const stbvorbis = await decoderPromise\n  return limit(\n    () =>\n      new Promise((resolve, reject) => {\n        const buffers = []\n        let totalLength = 0\n        let sampleRate\n        stbvorbis.decode(arrayBuffer, function(e) {\n          if (e.data) {\n            sampleRate = e.sampleRate\n            buffers.push(e.data)\n            totalLength += e.data[0].length\n          }\n          if (e.error) {\n            reject(\n              e.error instanceof Error\n                ? e.error\n                : `stbvorbis.js Error: ${e.error}`\n            )\n          }\n          if (e.eof) {\n            resolve(\n              createBuffer(audioContext, buffers, totalLength, sampleRate)\n            )\n          }\n        })\n      })\n  )\n}\n\n/**\n * @param {AudioContext} audioContext\n * @param {Float32Array[]} decodedChunks\n * @param {number} totalLength\n * @param {number} sampleRate\n */\nasync function createBuffer(\n  audioContext,\n  decodedChunks,\n  totalLength,\n  sampleRate\n) {\n  if (!totalLength) {\n    throw new Error(`stbvorbis.js Error: No length`)\n  }\n  if (!sampleRate) {\n    throw new Error(`stbvorbis.js Error: No sample rate`)\n  }\n  var audioBuffer = audioContext.createBuffer(\n    decodedChunks[0].length,\n    totalLength,\n    sampleRate\n  )\n  var track = Array(audioBuffer.numberOfChannels)\n    .fill()\n    .map(() => 0)\n  var data = Array(audioBuffer.numberOfChannels)\n    .fill()\n    .map((_, ch) => audioBuffer.getChannelData(ch))\n  for (const chunk of decodedChunks) {\n    chunk.forEach(function(a, ch) {\n      // buf.copyToChannel(a, ch, track[ch]) — not supported in iOS Safari!\n      var offset = track[ch]\n      for (var i = 0; i < a.length; i++) {\n        data[ch][i + offset] = a[i]\n      }\n      track[ch] += a.length\n    })\n  }\n  return audioBuffer\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chardet = require(\"bemuse-chardet/bemuse-chardet\");\nfunction read(buffer) {\n    throw new Error('Synchronous read unsupported in browser!');\n}\nexports.read = read;\nfunction readAsync() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var buffer = args[0];\n    var options = args[1];\n    var callback = args[2];\n    if (callback) {\n        options = args[1];\n        callback = args[2];\n    }\n    else {\n        options = null;\n        callback = args[1];\n    }\n    var charset = (options && options.forceEncoding) || chardet.detect(buffer);\n    var reader = new FileReader();\n    reader.onload = function () {\n        callback(null, reader.result);\n    };\n    reader.onerror = function () {\n        callback(new Error('cannot read it'));\n    };\n    reader.readAsText(new Blob([buffer]), charset);\n}\nexports.readAsync = readAsync;\nvar getReaderOptionsFromFilename_1 = require(\"./getReaderOptionsFromFilename\");\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename_1.getReaderOptionsFromFilename;\n//# sourceMappingURL=index.web.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Given the filename, returns the reader options.\n * @param {string} filename\n */\nfunction getReaderOptionsFromFilename(filename) {\n    var forceEncoding;\n    if (filename.match(/\\.sjis\\.\\w+$/i)) {\n        forceEncoding = 'Shift-JIS';\n    }\n    if (filename.match(/\\.euc_kr\\.\\w+$/i)) {\n        forceEncoding = 'EUC-KR';\n    }\n    if (filename.match(/\\.utf8\\.\\w+$/i)) {\n        forceEncoding = 'UTF-8';\n    }\n    return { forceEncoding: forceEncoding };\n}\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename;\n//# sourceMappingURL=getReaderOptionsFromFilename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Public: A module that takes a string representing the BMS notechart,\n// parses it, and compiles into a {BMSChart}.\n/* module */\nvar match_1 = require(\"../util/match\");\nvar chart_1 = require(\"../bms/chart\");\nvar matchers = {\n    bms: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):(\\S*)$/,\n        header: /^#(\\w+)(?:\\s+(\\S.*))?$/,\n    },\n    dtx: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:\\s*(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):\\s*(\\S*)$/,\n        header: /^#(\\w+):(?:\\s+(\\S.*))?$/,\n    },\n};\n/**\n * Reads the string representing the BMS notechart, parses it,\n * and compiles into a {BMSChart}.\n * @param text the BMS notechart\n * @param options additional parser options\n */\nfunction compile(text, options) {\n    options = options || {};\n    var chart = new chart_1.BMSChart();\n    var rng = options.rng ||\n        function (max) {\n            return 1 + Math.floor(Math.random() * max);\n        };\n    var matcher = (options.format && matchers[options.format]) || matchers.bms;\n    var randomStack = [];\n    var skipStack = [false];\n    var result = {\n        headerSentences: 0,\n        channelSentences: 0,\n        controlSentences: 0,\n        skippedSentences: 0,\n        malformedSentences: 0,\n        /**\n         * The resulting chart\n         */\n        chart: chart,\n        /**\n         * Warnings found during compilation\n         */\n        warnings: [],\n    };\n    eachLine(text, function (text, lineNumber) {\n        var flow = true;\n        if (text.charAt(0) !== '#')\n            return;\n        match_1.match(text)\n            .when(matcher.random, function (m) {\n            result.controlSentences += 1;\n            randomStack.push(rng(+m[1]));\n        })\n            .when(matcher.if, function (m) {\n            result.controlSentences += 1;\n            skipStack.push(randomStack[randomStack.length - 1] !== +m[1]);\n        })\n            .when(matcher.endif, function (m) {\n            result.controlSentences += 1;\n            skipStack.pop();\n        })\n            .else(function () {\n            flow = false;\n        });\n        if (flow)\n            return;\n        var skipped = skipStack[skipStack.length - 1];\n        match_1.match(text)\n            .when(matcher.timeSignature, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                chart.timeSignatures.set(+m[1], +m[2]);\n        })\n            .when(matcher.channel, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                handleChannelSentence(+m[1], m[2], m[3], lineNumber);\n        })\n            .when(matcher.header, function (m) {\n            result.headerSentences += 1;\n            if (!skipped)\n                chart.headers.set(m[1], m[2]);\n        })\n            .else(function () {\n            warn(lineNumber, 'Invalid command');\n        });\n    });\n    return result;\n    function handleChannelSentence(measure, channel, string, lineNumber) {\n        var items = Math.floor(string.length / 2);\n        if (items === 0)\n            return;\n        for (var i = 0; i < items; i++) {\n            var value = string.substr(i * 2, 2);\n            var fraction = i / items;\n            if (value === '00')\n                continue;\n            chart.objects.add({\n                measure: measure,\n                fraction: fraction,\n                value: value,\n                channel: channel,\n                lineNumber: lineNumber,\n            });\n        }\n    }\n    function warn(lineNumber, message) {\n        result.warnings.push({\n            lineNumber: lineNumber,\n            message: message,\n        });\n    }\n}\nexports.compile = compile;\nfunction eachLine(text, callback) {\n    text\n        .split(/\\r\\n|\\r|\\n/)\n        .map(function (line) {\n        return line.trim();\n    })\n        .forEach(function (line, index) {\n        callback(line, index + 1);\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Segment = data_structure_1.default({\n    t: 'number',\n    x: 'number',\n    dx: 'number',\n});\n//# sourceMappingURL=segment.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar note_1 = require(\"./note\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar ChannelMapping = __importStar(require(\"./channels\"));\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Notes holds the {Note} objects in the game.\n * A note object may or may not be playable.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00111:AA\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Notes} using `fromBMSChart()`:\n *\n * ```js\n * var notes = Notes.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can get all notes using `.all()` method\n *\n * ```js\n * notes.all()\n * ```\n */\nvar Notes = /** @class */ (function () {\n    /**\n     * @param {BMSNote[]} notes An array of Note objects\n     */\n    function Notes(notes) {\n        notes.forEach(note_1.Note);\n        this._notes = notes;\n    }\n    /**\n     * Returns the number of notes in this object,\n     * counting both playable and non-playable notes.\n     */\n    Notes.prototype.count = function () {\n        return this._notes.length;\n    };\n    /**\n     * Returns an Array of all notes.\n     */\n    Notes.prototype.all = function () {\n        return this._notes.slice();\n    };\n    /**\n     * Creates a Notes object from a BMSChart.\n     * @param chart the chart to process\n     * @param options options\n     */\n    Notes.fromBMSChart = function (chart, options) {\n        void chart_1.BMSChart;\n        options = options || {};\n        var mapping = options.mapping || Notes.CHANNEL_MAPPING.IIDX_P1;\n        var builder = new BMSNoteBuilder(chart, { mapping: mapping });\n        return builder.build();\n    };\n    Notes.CHANNEL_MAPPING = ChannelMapping;\n    return Notes;\n}());\nexports.Notes = Notes;\nvar BMSNoteBuilder = /** @class */ (function () {\n    function BMSNoteBuilder(chart, options) {\n        this._chart = chart;\n        invariant_1.default(options.mapping, 'Expected options.mapping');\n        invariant_1.default(typeof options.mapping === 'object', 'options.mapping must be object');\n        this._mapping = options.mapping;\n        this._notes = [];\n        this._activeLN = {};\n        this._lastNote = {};\n        this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase();\n        this._channelMapping = this._mapping;\n        this._objects = this._chart.objects.allSorted();\n    }\n    BMSNoteBuilder.prototype.build = function () {\n        var _this = this;\n        this._objects.forEach(function (object) {\n            _this._handle(object);\n        });\n        return new Notes(this._notes);\n    };\n    BMSNoteBuilder.prototype._handle = function (object) {\n        if (object.channel === '01') {\n            this._handleNormalNote(object);\n        }\n        else {\n            switch (object.channel.charAt(0)) {\n                case '1':\n                case '2':\n                    this._handleNormalNote(object);\n                    break;\n                case '5':\n                case '6':\n                    this._handleLongNote(object);\n                    break;\n            }\n        }\n    };\n    BMSNoteBuilder.prototype._handleNormalNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (object.value.toLowerCase() === this._lnObj) {\n            if (this._lastNote[channel]) {\n                this._lastNote[channel].endBeat = beat;\n            }\n        }\n        else {\n            var note = {\n                beat: beat,\n                endBeat: undefined,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n            this._lastNote[channel] = note;\n            this._notes.push(note);\n        }\n    };\n    BMSNoteBuilder.prototype._handleLongNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (this._activeLN[channel]) {\n            var note = this._activeLN[channel];\n            note.endBeat = beat;\n            this._notes.push(note);\n            delete this._activeLN[channel];\n        }\n        else {\n            this._activeLN[channel] = {\n                beat: beat,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n        }\n    };\n    BMSNoteBuilder.prototype._getBeat = function (object) {\n        return this._chart.measureToBeat(object.measure, object.fraction);\n    };\n    BMSNoteBuilder.prototype._getColumn = function (channel) {\n        return this._channelMapping[channel];\n    };\n    BMSNoteBuilder.prototype._normalizeChannel = function (channel) {\n        return channel.replace(/^5/, '1').replace(/^6/, '2');\n    };\n    return BMSNoteBuilder;\n}());\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Note = data_structure_1.default({\n    beat: 'number',\n    endBeat: data_structure_1.default.maybe('number'),\n    column: data_structure_1.default.maybe('string'),\n    keysound: 'string',\n});\n//# sourceMappingURL=note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IIDX_P1 = {\n    '11': '1',\n    '12': '2',\n    '13': '3',\n    '14': '4',\n    '15': '5',\n    '18': '6',\n    '19': '7',\n    '16': 'SC',\n};\n//# sourceMappingURL=channels.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\nvar precedence = { bpm: 1, stop: 2 };\n/**\n * A Timing represents the timing information of a musical score.\n * A Timing object provides facilities to synchronize between\n * metric time (seconds) and musical time (beats).\n *\n * A Timing are created from a series of actions:\n *\n * - BPM changes.\n * - STOP action.\n */\nvar Timing = /** @class */ (function () {\n    /**\n     * Constructs a Timing with an initial BPM and specified actions.\n     *\n     * Generally, you would use `Timing.fromBMSChart` to create an instance\n     * from a BMSChart, but the constructor may also be used in other situations\n     * unrelated to the BMS file format. (e.g. bmson package)\n     */\n    function Timing(initialBPM, actions) {\n        var state = { bpm: initialBPM, beat: 0, seconds: 0 };\n        var segments = [];\n        segments.push({\n            t: 0,\n            x: 0,\n            dx: state.bpm / 60,\n            bpm: state.bpm,\n            inclusive: true,\n        });\n        actions = actions.slice();\n        actions.sort(function (a, b) {\n            return a.beat - b.beat || precedence[a.type] - precedence[b.type];\n        });\n        actions.forEach(function (action) {\n            var beat = action.beat;\n            var seconds = state.seconds + ((beat - state.beat) * 60) / state.bpm;\n            switch (action.type) {\n                case 'bpm':\n                    state.bpm = action.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    break;\n                case 'stop':\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: 0,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    seconds += ((action.stopBeats || 0) * 60) / state.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: false,\n                    });\n                    break;\n                default:\n                    throw new Error('Unrecognized segment object!');\n            }\n            state.beat = beat;\n            state.seconds = seconds;\n        });\n        this._speedcore = new speedcore_1.Speedcore(segments);\n        this._eventBeats = lodash_1.uniq(lodash_1.map(actions, function (action) { return action.beat; }));\n    }\n    /**\n     * Convert the given beat into seconds.\n     * @param {number} beat\n     */\n    Timing.prototype.beatToSeconds = function (beat) {\n        return this._speedcore.t(beat);\n    };\n    /**\n     * Convert the given second into beats.\n     * @param {number} seconds\n     */\n    Timing.prototype.secondsToBeat = function (seconds) {\n        return this._speedcore.x(seconds);\n    };\n    /**\n     * Returns the BPM at the specified beat.\n     * @param {number} beat\n     */\n    Timing.prototype.bpmAtBeat = function (beat) {\n        return this._speedcore.segmentAtX(beat).bpm;\n    };\n    /**\n     * Returns an array representing the beats where there are events.\n     */\n    Timing.prototype.getEventBeats = function () {\n        return this._eventBeats;\n    };\n    /**\n     * Creates a Timing instance from a BMSChart.\n     * @param {BMSChart} chart\n     */\n    Timing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var actions = [];\n        chart.objects.all().forEach(function (object) {\n            var bpm;\n            var beat = chart.measureToBeat(object.measure, object.fraction);\n            if (object.channel === '03') {\n                bpm = parseInt(object.value, 16);\n                actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '08') {\n                bpm = +chart.headers.get('bpm' + object.value);\n                if (!isNaN(bpm))\n                    actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '09') {\n                var stopBeats = +chart.headers.get('stop' + object.value) / 48;\n                actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats });\n            }\n        });\n        return new Timing(+chart.headers.get('bpm') || 60, actions);\n    };\n    return Timing;\n}());\nexports.Timing = Timing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_1 = require(\"../util/match\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A SongInfo represents the song info, such as title, artist, genre.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #TITLE Exargon [HYPER]\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {SongInfo} using `fromBMSChart()`:\n *\n * ```js\n * var info = SongInfo.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can query the song information by accessing its properties.\n *\n * ```js\n * info.title     // => 'Exargon'\n * info.subtitles // => ['HYPER']\n * ```\n */\nvar SongInfo = /** @class */ (function () {\n    /**\n     * Constructs a SongInfo with given data\n     * @param info the properties to set on this new instance\n     */\n    function SongInfo(info) {\n        /** the song title */\n        this.title = 'NO TITLE';\n        /** the song artist */\n        this.artist = 'NO ARTIST';\n        /** the song genre */\n        this.genre = 'NO GENRE';\n        /**\n         * the song's subtitles, one line per element.\n         * The subtitle may be used to represent the difficulty name,\n         * such as NORMAL, HYPER, ANOTHER.\n         * @type {string[]}\n         */\n        this.subtitles = [];\n        /**\n         * the song's other artists, one artist per element.\n         * @type {string[]}\n         */\n        this.subartists = [];\n        /**\n         * the difficulty.\n         * Meaning of the number is same as BMS's [`#DIFFICULTY`](http:*hitkey.nekokan.dyndns.info/cmds.htm#DIFFICULTY) header.\n         *\n         * | difficulty | meaning  |\n         * | ----------:|:--------:|\n         * |          1 | BEGINNER |\n         * |          2 | NORMAL   |\n         * |          3 | HYPER    |\n         * |          4 | ANOTHER  |\n         * |          5 | INSANE   |\n         */\n        this.difficulty = 0;\n        /**\n         * the level of the song.\n         * When converted from a BMS chart, this is the value of `#PLAYLEVEL` header.\n         */\n        this.level = 0;\n        if (info)\n            lodash_1.assign(this, info);\n    }\n    /**\n     * Constructs a new {SongInfo} object from a {BMSChart}.\n     * @param chart A {BMSChart} to construct a {SongInfo} from\n     */\n    SongInfo.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var info = {};\n        var title = chart.headers.get('title');\n        var artist = chart.headers.get('artist');\n        var genre = chart.headers.get('genre');\n        var difficulty = +chart.headers.get('difficulty') || 0;\n        var level = +chart.headers.get('playlevel') || 0;\n        var subtitles = chart.headers.getAll('subtitle');\n        var subartists = chart.headers.getAll('subartist');\n        if (typeof title === 'string' && !subtitles) {\n            var extractSubtitle = function (m) {\n                title = m[1];\n                subtitles = [m[2]];\n            };\n            match_1.match(title)\n                .when(/^(.*\\S)\\s*-(.+?)-$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*<(.+?)>$/, extractSubtitle);\n        }\n        if (title)\n            info.title = title;\n        if (artist)\n            info.artist = artist;\n        if (genre)\n            info.genre = genre;\n        if (subtitles)\n            info.subtitles = subtitles;\n        if (subartists)\n            info.subartists = subartists;\n        if (difficulty)\n            info.difficulty = difficulty;\n        if (level)\n            info.level = level;\n        return new SongInfo(info);\n    };\n    return SongInfo;\n}());\nexports.SongInfo = SongInfo;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Public: A module that exposes {Keysounds}\n/* module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A simple mapping between keysounds ID and the file name.\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #WAVAA cat.wav\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Keysounds} using `fromBMSChart()`:\n *\n * ```js\n * var keysounds = Keysounds.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can retrieve the filename using `.get()`:\n *\n * ```js\n * keysounds.get('aa') // => 'cat.wav'\n * ```\n */\nvar Keysounds = /** @class */ (function () {\n    function Keysounds(map) {\n        this._map = map;\n    }\n    /**\n     * Returns the keysound file at the specified ID.\n     * @param id the two-character keysound ID\n     * @returns the sound filename\n     */\n    Keysounds.prototype.get = function (id) {\n        return this._map[id.toLowerCase()];\n    };\n    /**\n     * Returns an array of unique filenames in this Keysounds object.\n     * @returns filenames array\n     */\n    Keysounds.prototype.files = function () {\n        return lodash_1.uniq(lodash_1.values(this._map));\n    };\n    /**\n     * Returns a mapping from keysound ID to keysound filename.\n     *\n     * **Warning:** This method returns the internal data structure used\n     * in this Keysounds object. Do not mutate!\n     */\n    Keysounds.prototype.all = function () {\n        return this._map;\n    };\n    /**\n     * Constructs a new {Keysounds} object from a {BMSChart}.\n     * @param chart\n     */\n    Keysounds.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var map = {};\n        chart.headers.each(function (name, value) {\n            var match = name.match(/^wav(\\S\\S)$/i);\n            if (!match)\n                return;\n            map[match[1].toLowerCase()] = value;\n        });\n        return new Keysounds(map);\n    };\n    return Keysounds;\n}());\nexports.Keysounds = Keysounds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Positioning represents the relation between song beats and\n * display position, and provides a way to convert between them.\n *\n * In some rhythm games, the amount of scrolling per beat may be different.\n * StepMania’s `#SCROLL` segments is an example.\n */\nvar Positioning = /** @class */ (function () {\n    /**\n     * Constructs a Positioning from the given `segments`.\n     * @param segments\n     */\n    function Positioning(segments) {\n        this._speedcore = new speedcore_1.Speedcore(segments);\n    }\n    /**\n     * Returns the scrolling speed at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.speed = function (beat) {\n        return this._speedcore.dx(beat);\n    };\n    /**\n     * Returns the total elapsed scrolling amount at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.position = function (beat) {\n        return this._speedcore.x(beat);\n    };\n    /**\n     * Creates a {Positioning} object from the {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {Positioning} from\n     */\n    Positioning.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        var x = 0;\n        segments.push({\n            t: 0,\n            x: x,\n            dx: 1,\n            inclusive: true,\n        });\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SC') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var dx = +chart.headers.get('scroll' + object.value);\n                if (isNaN(dx))\n                    return;\n                var previous = segments[segments.length - 1];\n                x += (beat - previous.t) * previous.dx;\n                if (beat === 0 && segments.length === 1) {\n                    segments[0].dx = dx;\n                }\n                else {\n                    segments.push({\n                        t: beat,\n                        x: x,\n                        dx: dx,\n                        inclusive: true,\n                    });\n                }\n            }\n        });\n        return new Positioning(segments);\n    };\n    return Positioning;\n}());\nexports.Positioning = Positioning;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * Public: A Spacing represents the relation between song beats and\n * notes spacing.\n *\n * In some rhythm games, such as Pump It Up!,\n * the speed (note spacing factor) may be adjusted by the notechart.\n * StepMania’s `#SPEED` segments is an example.\n */\nvar Spacing = /** @class */ (function () {\n    /**\n     * Constructs a Spacing from the given `segments`.\n     */\n    function Spacing(segments) {\n        if (segments.length > 0) {\n            this._speedcore = new speedcore_1.Speedcore(segments);\n        }\n    }\n    /**\n     * Returns the note spacing factor at the specified beat.\n     * @param beat the beat\n     */\n    Spacing.prototype.factor = function (beat) {\n        if (this._speedcore) {\n            return this._speedcore.x(beat);\n        }\n        else {\n            return 1;\n        }\n    };\n    /**\n     * Creates a {Spacing} object from the {BMSChart}.\n     *\n     * ## `#SPEED` and `#xxxSP`\n     *\n     * Speed is defined as keyframes. These keyframes will be linearly interpolated.\n     *\n     * ```\n     * #SPEED01 1.0\n     * #SPEED02 2.0\n     *\n     * #001SP:01010202\n     * ```\n     *\n     * In this example, the note spacing factor will gradually change\n     * from 1.0x at beat 1 to 2.0x at beat 2.\n     *\n     * Returns a {Spacing} object\n     *\n     * @param {BMSChart} chart the chart\n     */\n    Spacing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SP') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var factor = +chart.headers.get('speed' + object.value);\n                if (isNaN(factor))\n                    return;\n                if (segments.length > 0) {\n                    var previous = segments[segments.length - 1];\n                    previous.dx = (factor - previous.x) / (beat - previous.t);\n                }\n                segments.push({\n                    t: beat,\n                    x: factor,\n                    dx: 0,\n                    inclusive: true,\n                });\n            }\n        });\n        if (segments.length > 0) {\n            segments.unshift({\n                t: 0,\n                x: segments[0].x,\n                dx: 0,\n                inclusive: true,\n            });\n        }\n        return new Spacing(segments);\n    };\n    return Spacing;\n}());\nexports.Spacing = Spacing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar headers_1 = require(\"./headers\");\nvar objects_1 = require(\"./objects\");\nvar time_signatures_1 = require(\"../time-signatures\");\n/**\n * A BMSChart holds information about a particular BMS notechart.\n * Note that a BMSChart does not contain any information about `#RANDOM`,\n * as they are already processed after compilation.\n *\n * There is not many useful things you can do with a BMSChart other than\n * accessing the header fields and objects inside it.\n *\n * To extract information from a BMSChart,\n * please look at the documentation of higher-level classes,\n * such as {Keysounds}, {Notes}, and {Timing}.\n */\nvar BMSChart = /** @class */ (function () {\n    function BMSChart() {\n        /**\n         * {BMSHeaders} representing the BMS-specific headers of this notechart\n         */\n        this.headers = new headers_1.BMSHeaders();\n        /**\n         * {BMSObjects} representing all objects of this notechart\n         */\n        this.objects = new objects_1.BMSObjects();\n        /**\n         * {TimeSignatures} representing the time signature information in this chart\n         */\n        this.timeSignatures = new time_signatures_1.TimeSignatures();\n    }\n    /**\n     * Public: Converts measure number and fraction into beat.\n     * A single beat is equivalent to a quarter note in common time signature.\n     *\n     * @param {number} measure representing the measure number, starting from 0\n     * @param {number} fraction representing the fraction inside that measure, from 0 to 1\n     */\n    BMSChart.prototype.measureToBeat = function (measure, fraction) {\n        return this.timeSignatures.measureToBeat(measure, fraction);\n    };\n    return BMSChart;\n}());\nexports.BMSChart = BMSChart;\n//# sourceMappingURL=chart.js.map","import * as ProgressUtils from 'bemuse/progress/utils'\n\nimport co from 'co'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport class DndResources {\n  constructor(event) {\n    this._files = getFilesFromEvent(event)\n  }\n  file(name) {\n    return this._files.then(function(files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList() {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource {\n  constructor(file) {\n    this._file = file\n  }\n  read(progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl() {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name() {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nfunction getFilesFromEvent(event) {\n  let out = []\n\n  return co(function*() {\n    if (event.dataTransfer.items) {\n      for (let item of Array.from(event.dataTransfer.items)) {\n        yield readItem(item)\n      }\n    } else if (event.dataTransfer.files) {\n      for (let file of Array.from(event.dataTransfer.files)) {\n        addFile(file)\n      }\n    }\n    return out\n  })\n\n  function readItem(item) {\n    return co(function*() {\n      let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n      if (entry) {\n        yield readEntry(entry, '')\n      } else {\n        let file = item.getAsFile && item.getAsFile()\n        addFile(file)\n      }\n    })\n  }\n\n  function readEntry(entry) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile(entry) {\n    return new Promise((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  function readDirectory(dir) {\n    return co(function*() {\n      let entries = []\n      let reader = dir.createReader()\n      let readMore = () =>\n        new Promise((resolve, reject) => {\n          reader.readEntries(resolve, reject)\n        })\n      for (;;) {\n        let results = yield readMore()\n        if (!results || results.length === 0) break\n        entries.push(...Array.from(results))\n      }\n      for (let entry of entries) {\n        yield readEntry(entry)\n      }\n    })\n  }\n\n  function addFile(file) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segment_1 = require(\"./segment\");\n/**\n * Speedcore is a small internally-used library.\n * A Speedcore represents a single dimensional keyframed linear motion\n * (as in equation x = f(t)), and is useful when working\n * with BPM changes ({Timing}), note spacing factor ({Spacing}), or scrolling\n * segments ({Positioning}).\n * A Speedcore is constructed from an array of Segments.\n *\n * A {Segment} is defined as `{ t, x, dx }`, such that:\n *\n * * speedcore.x(segment.t) = segment.x\n * * speedcore.t(segment.x) = segment.t\n * * speedcore.x(segment.t + dt) = segment.x + (segment.dx / dt)\n *\n *\n * ## Explanation\n *\n * One way to think of these segments is to think about tempo changes, where:\n *\n * * `t` is the elapsed time (in seconds) since song start.\n * * `x` is the elapsed beat since song start.\n * * `dx` is the amount of `x` increase per `t`. In this case, it has the\n *   unit of beats per second.\n *\n * For example, consider a song that starts at 140 BPM.\n * 32 beats later, the tempo changes to 160 BPM.\n * 128 beats later (at beat 160), the tempo reverts to 140 BPM.\n *\n * We can derive three segments:\n *\n * 1. At time 0, we are at beat 0, and moving at 2.333 beats per second.\n * 2. At 13.714s, we are at beat 32, moving at 2.667 beats per second.\n * 3. At 61.714s, we are at beat 160, moving at 2.333 beats per second.\n *\n * This maps out to this data structure:\n *\n * ```js\n * [ [0]: { t:  0.000,  x:   0,  dx: 2.333,  inclusive: true },\n *   [1]: { t: 13.714,  x:  32,  dx: 2.667,  inclusive: true },\n *   [2]: { t: 61.714,  x: 160,  dx: 2.333,  inclusive: true } ]\n * ```\n *\n * With this data, it is possible to find out the value of `x` at any given `t`.\n *\n * For example, to answer the question, “what is the beat number at 30s?”\n * First, we find the segment with maximum value of `t < 30`, and we get\n * the segment `[1]`.\n *\n * We calculate `segment.x + (t - segment.t) * segment.dx`.\n * The result beat number is (32 + (30 - 13.714) * 2.667) = 75.435.\n *\n * We can also perform the reverse calculation in a similar way, by reversing\n * the equation.\n *\n * Interestingly, we can use these segments to represent the effect of\n * both BPM changes and STOP segments in the same array.\n * For example, a 150-BPM song with a 2-beat stop in the 32nd beat\n * can be represented like this:\n *\n * ```js\n * [ [0]: { t:  0.0,  x:  0,  dx: 2.5,  inclusive: true  },\n *   [1]: { t: 12.8,  x: 32,  dx: 0,    inclusive: true  },\n *   [2]: { t: 13.6,  x: 32,  dx: 2.5,  inclusive: false } ]\n * ```\n */\nvar Speedcore = /** @class */ (function () {\n    /**\n     * Constructs a new `Speedcore` from given segments.\n     */\n    function Speedcore(segments) {\n        segments.forEach(segment_1.Segment);\n        this._segments = segments;\n    }\n    Speedcore.prototype._reached = function (index, targetFn, position) {\n        if (index >= this._segments.length)\n            return false;\n        var segment = this._segments[index];\n        var target = targetFn(segment);\n        return segment.inclusive ? position >= target : position > target;\n    };\n    Speedcore.prototype._segmentAt = function (targetFn, position) {\n        for (var i = 0; i < this._segments.length; i++) {\n            if (!this._reached(i + 1, targetFn, position))\n                return this._segments[i];\n        }\n        throw new Error('Unable to find a segment matching a criteria (this should never happen)!');\n    };\n    Speedcore.prototype.segmentAtX = function (x) {\n        return this._segmentAt(X, x);\n    };\n    Speedcore.prototype.segmentAtT = function (t) {\n        return this._segmentAt(T, t);\n    };\n    /**\n     * Calculates the _t_, given _x_.\n     */\n    Speedcore.prototype.t = function (x) {\n        var segment = this.segmentAtX(x);\n        return segment.t + (x - segment.x) / (segment.dx || 1);\n    };\n    /**\n     * Calculates the _x_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.x = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.x + (t - segment.t) * segment.dx;\n    };\n    /**\n     * Finds the _dx_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.dx = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.dx;\n    };\n    return Speedcore;\n}());\nexports.Speedcore = Speedcore;\nvar T = function (segment) { return segment.t; };\nvar X = function (segment) { return segment.x; };\n//# sourceMappingURL=index.js.map","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\nexport function fixed(total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return extra => progress.report(++loaded, total, extra)\n}\n\n// Reports the progress as an atomic operation.\nexport function atomic(progress, promise) {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (data && data.byteLength) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\n\nexport function wrapPromise(progress, f) {\n  let current = 0\n  let total = 0\n  return function() {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\nexport function simultaneous(target) {\n  let queue = []\n  let current\n  let unsubscribe\n  function update() {\n    if (current) {\n      target.report(current.current, current.total, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress >= 1)) {\n      bind(queue.shift())\n    }\n  }\n  function bind(progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A subset of lodash that we actually use.\nvar lodash_uniq_1 = __importDefault(require(\"lodash.uniq\"));\nexports.uniq = lodash_uniq_1.default;\nvar lodash_map_1 = __importDefault(require(\"lodash.map\"));\nexports.map = lodash_map_1.default;\nvar lodash_values_1 = __importDefault(require(\"lodash.values\"));\nexports.values = lodash_values_1.default;\nvar lodash_assign_1 = __importDefault(require(\"lodash.assign\"));\nexports.assign = lodash_assign_1.default;\n//# sourceMappingURL=lodash.js.map"],"sourceRoot":""}
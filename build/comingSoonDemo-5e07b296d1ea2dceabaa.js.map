{"version":3,"sources":["file:///home/circleci/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/packages/bms/lib/index.js","file:///home/circleci/bemuse/src/sampling-master/index.js","file:///home/circleci/bemuse/packages/bms/lib/util/match.js","file:///home/circleci/bemuse/packages/bms/lib/bms/headers.js","file:///home/circleci/bemuse/packages/bms/lib/bms/objects.js","file:///home/circleci/bemuse/packages/bms/lib/time-signatures/index.js","file:///home/circleci/bemuse/src/audio-context/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/index.js","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss?8185","file:///home/circleci/bemuse/src/coming-soon/demo/style.scss","file:///home/circleci/bemuse/src/coming-soon/demo/template.jade","file:///home/circleci/bemuse/packages/bms/lib/reader/index.web.js","file:///home/circleci/bemuse/packages/bms/lib/reader/getReaderOptionsFromFilename.js","file:///home/circleci/bemuse/packages/bms/lib/compiler/index.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/segment.js","file:///home/circleci/bemuse/packages/bms/lib/notes/index.js","file:///home/circleci/bemuse/packages/bms/lib/notes/note.js","file:///home/circleci/bemuse/packages/bms/lib/notes/channels.js","file:///home/circleci/bemuse/packages/bms/lib/timing/index.js","file:///home/circleci/bemuse/packages/bms/lib/song-info/index.js","file:///home/circleci/bemuse/packages/bms/lib/keysounds/index.js","file:///home/circleci/bemuse/packages/bms/lib/positioning/index.js","file:///home/circleci/bemuse/packages/bms/lib/spacing/index.js","file:///home/circleci/bemuse/packages/bms/lib/bms/chart.js","file:///home/circleci/bemuse/src/resources/dnd-resources.js","file:///home/circleci/bemuse/packages/bms/lib/speedcore/index.js","file:///home/circleci/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/src/progress/utils.js","file:///home/circleci/bemuse/packages/bms/lib/util/lodash.js"],"names":["__webpack_exports__","blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","__export","m","p","exports","hasOwnProperty","__importStar","this","mod","__esModule","k","Object","call","defineProperty","value","Reader","__webpack_require__","Compiler","d","FADE_LENGTH","canPlay","unmuteAudio","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_0__","bemuse_utils_read_blob__WEBPACK_IMPORTED_MODULE_1__","dummyAudioTag","document","createElement","canPlayType","SoundGroup","[object Object]","samplingMaster","volume","_master","_gain","audioContext","createGain","gain","connect","destination","disconnect","Sample","audioBuffer","_buffer","delay","options","PlayInstance","buffer","context","source","createBufferSource","onended","stop","node","group","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","undefined","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","onstop","playbackRate","random","pow","ctx","osc","createOscillator","frequency","resume","e","console","error","_audioContext","_samples","_groups","_instances","Set","_destination","_destroyed","sample","destroy","instance","blobOrArrayBuffer","_coerceToArrayBuffer","then","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","numberOfChannels","decode","push","ArrayBuffer","decodeAudioData","add","delete","match","text","matched","when","pattern","callback","else","BMSHeaders","_data","_dataAll","prototype","each","i","get","name","toLowerCase","getAll","set","key","BMSObjects","_objects","object","channel","length","test","measure","fraction","all","slice","allSorted","list","sort","a","b","TimeSignatures","_values","getBeats","measureToBeat","sum","audio_context__WEBPACK_IMPORTED_MODULE_0__","audio_context__WEBPACK_IMPORTED_MODULE_0___default","n","latencyHint","r","Buffer","main","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","bms__WEBPACK_IMPORTED_MODULE_2__","bemuse_resources_dnd_resources__WEBPACK_IMPORTED_MODULE_3__","bemuse_sampling_master__WEBPACK_IMPORTED_MODULE_4__","co__WEBPACK_IMPORTED_MODULE_5__","co__WEBPACK_IMPORTED_MODULE_5___default","bemuse_audio_context__WEBPACK_IMPORTED_MODULE_6__","_template_jade__WEBPACK_IMPORTED_MODULE_7__","_template_jade__WEBPACK_IMPORTED_MODULE_7___default","element","on","handler","el","appendTo","find","hide","preventDefault","dndLoader","originalEvent","loader","master","$log","$play","$sampler","log","t","loadKeysound","file","catch","replace","read","fileList","bmsFile","filter","f","arraybuffer","from","Uint8Array","promisify","readAsync","chart","compile","timing","fromBMSChart","notes","info","JSON","stringify","samples","promises","completed","note","keysound","headers","tap","loadSamples","show","unmute","setTimeout","span","play","scrollTop","scrollHeight","addClass","beatToSeconds","beat","done","go","ui","off","content","module","hmr","transform","insertInto","locals","buf","join","chardet","args","_i","arguments","charset","forceEncoding","detect","Blob","getReaderOptionsFromFilename_1","getReaderOptionsFromFilename","filename","match_1","chart_1","matchers","bms","if","endif","timeSignature","header","dtx","BMSChart","rng","floor","matcher","format","randomStack","skipStack","headerSentences","channelSentences","controlSentences","skippedSentences","malformedSentences","warnings","split","map","line","trim","forEach","index","eachLine","lineNumber","flow","charAt","pop","skipped","timeSignatures","string","items","substr","objects","handleChannelSentence","message","warn","__importDefault","default","data_structure_1","Segment","x","dx","note_1","invariant_1","ChannelMapping","Notes","Note","_notes","count","mapping","CHANNEL_MAPPING","IIDX_P1","BMSNoteBuilder","build","_chart","_mapping","_activeLN","_lastNote","_lnObj","_channelMapping","_this","_handle","_handleNormalNote","_handleLongNote","_normalizeChannel","_getBeat","endBeat","column","_getColumn","maybe","11","12","13","14","15","18","19","16","speedcore_1","lodash_1","precedence","bpm","Timing","initialBPM","actions","state","seconds","segments","inclusive","action","stopBeats","_speedcore","Speedcore","_eventBeats","uniq","secondsToBeat","bpmAtBeat","segmentAtX","getEventBeats","parseInt","isNaN","SongInfo","title","artist","genre","subtitles","subartists","difficulty","level","assign","extractSubtitle","Keysounds","_map","id","files","values","Positioning","speed","position","previous","Spacing","factor","unshift","headers_1","objects_1","time_signatures_1","bemuse_progress_utils__WEBPACK_IMPORTED_MODULE_0__","co__WEBPACK_IMPORTED_MODULE_1__","co__WEBPACK_IMPORTED_MODULE_1___default","bemuse_utils_read_blob__WEBPACK_IMPORTED_MODULE_2__","FileResource","_file","progress","URL","createObjectURL","event","_files","out","dataTransfer","item","Array","readItem","addFile","entry","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","entries","createReader","results","readEntries","readDirectory","getFilesFromEvent","segment_1","_segments","_reached","targetFn","segment","target","_segmentAt","X","segmentAtT","T","BYTES_FORMATTER","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","bytes__WEBPACK_IMPORTED_MODULE_0__","bytes__WEBPACK_IMPORTED_MODULE_0___default","wrap","current","total","toFixed","extra","fixed","atomic","wrapPromise","bind","simultaneous","bemuse_progress_formatters__WEBPACK_IMPORTED_MODULE_0__","loaded","report","promise","data","byteLength","formatter","apply","to","watch","unsubscribe","queue","update","shift","lodash_uniq_1","lodash_map_1","lodash_values_1","lodash_assign_1"],"mappings":"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","file":"build/comingSoonDemo-5e07b296d1ea2dceabaa.js","sourcesContent":["export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function(resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function() {\n          resolve(reader.result)\n        }\n        reader.onerror = function() {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","\"use strict\";\n/**\n * Public: The `bms` package is a library for working with rhythm game data.\n *\n * Although this library’s name suggests that it is for BMS file format,\n * almost every part can be used standalone.\n *\n * This package contains:\n *\n * - __Modules that reads and parses BMS files:__\n *\n *   - {Reader} reads the BMS file from a {Buffer}, detects the character set\n *     and decodes the buffer using that character set into a {String}.\n *   - {Compiler} reads the BMS source from a {String}, and converts into\n *     {BMSChart}, an internal representation of a BMS notechart.\n *\n * - __Classes for representing a BMS notechart.__\n *   These module stores the data as close to the BMS file format as possible.\n *\n *   Almost no musical interpretation is made.\n *   For example, a BPM change is simply represented using a\n *   BMSObject with `channel` = `03` or `08`.\n *\n *   - {BMSChart} is composed of {BMSHeaders}, {BMSObjects}, and {TimeSignatures}.\n *   - {BMSHeaders} represents the header sentences in a BMS file.\n *   - {BMSObjects} represents the objects in a BMS file.\n *   - {BMSObject} represents a single object.\n *\n * - __Classes that represent different aspects of a notechart.__\n *   Instance of these classes may be created from a {BMSChart},\n *   but they can be used in a standalone manner as well.\n *\n *   This makes this library very flexible,\n *   and able to accommodate different formats of notechart.\n *   For example, see the [bmson](https: *github.com/bemusic/bmson) package.\n *\n *   It’s also possible to use these classes in context other than music gaming,\n *   for example, you can use these classes to help building a music player\n *   that requires precise synchronization between beats.\n *\n *   - {TimeSignatures} represents a collection of time signatures\n *     in a musical score, and lets you convert the measure number and fraction\n *     into beat number.\n *   - {Timing} represents the timing information in a musical score,\n *     and provides methods to convert between musical time (beats) and\n *     metric time (seconds).\n *   - {SongInfo} represents the basic song information,\n *     such as title, artist, and genre.\n *   - {Notes} represents the sound objects inside your notechart.\n *   - {Keysounds} represents a mapping between keysound ID and filename.\n *   - {Positioning} represents a mapping between beat and in-game position.\n *     Some rhythm game lets chart author control the amount of scrolling\n *     per beat. In StepMania 5, this is called the scroll segments.\n *   - {Spacing} represents a mapping between beat and note spacing.\n *     Some rhythm game lets chart author change the note spacing (HI-SPEED)\n *     dynamically. In StepMania 5, this is called the speed segments.\n *\n * - __Low-level utility classes:__\n *\n *   - {Speedcore} represents a linear animation.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Reader = __importStar(require(\"./reader\"));\nexports.Reader = Reader;\nvar Compiler = __importStar(require(\"./compiler\"));\nexports.Compiler = Compiler;\n__export(require(\"./bms/chart\"));\n__export(require(\"./bms/headers\"));\n__export(require(\"./bms/objects\"));\n__export(require(\"./speedcore\"));\n__export(require(\"./time-signatures\"));\n__export(require(\"./notes\"));\n__export(require(\"./timing\"));\n__export(require(\"./song-info\"));\n__export(require(\"./keysounds\"));\n__export(require(\"./positioning\"));\n__export(require(\"./spacing\"));\n//# sourceMappingURL=index.js.map","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination() {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample(blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group(options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor(samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination() {\n    return this._gain\n  }\n\n  destroy() {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor(samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor(samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio(ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction match(text) {\n    var matched = false;\n    return {\n        when: function (pattern, callback) {\n            if (matched)\n                return this;\n            var match = text.match(pattern);\n            if (match) {\n                matched = true;\n                callback(match);\n            }\n            return this;\n        },\n        else: function (callback) {\n            if (matched)\n                return this;\n            callback();\n        },\n    };\n}\nexports.match = match;\n//# sourceMappingURL=match.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A BMSHeader holds the header information in a BMS file, such as\n * `#TITLE`, `#ARTIST`, or `#BPM`.\n *\n * You get retrieve a header using the `get()` method:\n *\n * ```js\n * chart.headers.get('title')\n * ```\n *\n * For some header fields that may contain multiple values, such as `#SUBTITLE`,\n * you can get them all using `getAll()`:\n *\n * ```js\n * chart.headers.getAll()\n * ```\n */\nvar BMSHeaders = /** @class */ (function () {\n    function BMSHeaders() {\n        this._data = {};\n        this._dataAll = {};\n    }\n    /**\n     * Iterates through each header field using a callback function.\n     * @param callback will be called for each header field\n     */\n    BMSHeaders.prototype.each = function (callback) {\n        for (var i in this._data) {\n            callback(i, this._data[i]);\n        }\n    };\n    /**\n     * Retrieves the header field’s latest value.\n     * @param name field’s name\n     * @return the field’s latest value\n     */\n    BMSHeaders.prototype.get = function (name) {\n        return this._data[name.toLowerCase()];\n    };\n    /**\n     * Retrieves the header field’s values.\n     * This is useful when a header field is specified multiple times.\n     * @param name field’s name\n     */\n    BMSHeaders.prototype.getAll = function (name) {\n        return this._dataAll[name.toLowerCase()];\n    };\n    /**\n     * Sets the header field’s value.\n     * @param name field’s name\n     * @param value field’s value\n     */\n    BMSHeaders.prototype.set = function (name, value) {\n        var key = name.toLowerCase();\n        this._data[key] = value;\n        (this._dataAll[key] || (this._dataAll[key] = [])).push(value);\n    };\n    return BMSHeaders;\n}());\nexports.BMSHeaders = BMSHeaders;\n//# sourceMappingURL=headers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * BMSObjects holds a collection of objects inside a BMS notechart.\n */\nvar BMSObjects = /** @class */ (function () {\n    function BMSObjects() {\n        this._objects = [];\n    }\n    /**\n     * Adds a new object to this collection.\n     * If an object already exists on the same channel and position,\n     * the object is replaced (except for autokeysound tracks).\n     * @param object the object to add\n     */\n    BMSObjects.prototype.add = function (object) {\n        if (object.channel !== '01') {\n            for (var i = 0; i < this._objects.length; i++) {\n                var test = this._objects[i];\n                if (test.channel === object.channel &&\n                    test.measure === object.measure &&\n                    test.fraction === object.fraction) {\n                    this._objects[i] = object;\n                    return;\n                }\n            }\n        }\n        this._objects.push(object);\n    };\n    /**\n     * Returns an array of all objects.\n     */\n    BMSObjects.prototype.all = function () {\n        return this._objects.slice();\n    };\n    /**\n     * Returns a sorted array of all objects.\n     */\n    BMSObjects.prototype.allSorted = function () {\n        var list = this.all();\n        list.sort(function (a, b) {\n            return a.measure + a.fraction - (b.measure + b.fraction);\n        });\n        return list;\n    };\n    return BMSObjects;\n}());\nexports.BMSObjects = BMSObjects;\n//# sourceMappingURL=objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A TimeSignatures is a collection of time signature values\n * index by measure number.\n *\n * The measure number starts from 0.\n * By default, each measure has a measure size of 1\n * (which represents the common 4/4 time signature)\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00102:0.75\n * #00103:1.25\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can access the {TimeSignatures} object:\n *\n * ```js\n * var timeSignatures = bmsChart.timeSignatures\n * ```\n *\n * Note that you can also use the constructor\n * to create a {TimeSignatures} from scratch.\n *\n * One of the most useful use case of this class\n * is to convert the measure and fraction into beat number.\n *\n * ```js\n * timeSignatures.measureToBeat(0, 0.000) // =>  0.0\n * timeSignatures.measureToBeat(0, 0.500) // =>  2.0\n * timeSignatures.measureToBeat(1, 0.000) // =>  4.0\n * timeSignatures.measureToBeat(1, 0.500) // =>  5.5\n * timeSignatures.measureToBeat(2, 0.000) // =>  7.0\n * timeSignatures.measureToBeat(2, 0.500) // =>  9.5\n * timeSignatures.measureToBeat(3, 0.000) // => 12.0\n * ```\n */\nvar TimeSignatures = /** @class */ (function () {\n    function TimeSignatures() {\n        this._values = {};\n    }\n    /**\n     * Sets the size of a specified measure.\n     * @param measure the measure number, starting from 0\n     * @param value the measure size.\n     *  For example, a size of 1.0 represents a common 4/4 time signature,\n     *  whereas a size of 0.75 represents the 3/4 or 6/8 time signature.\n     */\n    TimeSignatures.prototype.set = function (measure, value) {\n        this._values[measure] = value;\n    };\n    /**\n     * Retrieves the size of a specified measure.\n     * @param measure representing the measure number.\n     * @returns the size of the measure.\n     *  By default, a measure has a size of 1.\n     */\n    TimeSignatures.prototype.get = function (measure) {\n        return this._values[measure] || 1;\n    };\n    /**\n     * Retrieves the number of beats in a specified measure.\n     *\n     * Since one beat is equivalent to a quarter note in 4/4 time signature,\n     * this is equivalent to `(timeSignatures.get(measure) * 4)`.\n     * @param measure representing the measure number.\n     * @returns the size of the measure in beats.\n     */\n    TimeSignatures.prototype.getBeats = function (measure) {\n        return this.get(measure) * 4;\n    };\n    /**\n     * Converts a measure number and a fraction inside that measure\n     * into the beat number.\n     *\n     * @param measure the measure number.\n     * @param fraction the fraction of a measure,\n     * @returns the number of beats since measure 0.\n     */\n    TimeSignatures.prototype.measureToBeat = function (measure, fraction) {\n        var sum = 0;\n        for (var i = 0; i < measure; i++)\n            sum += this.getBeats(i);\n        return sum + this.getBeats(measure) * fraction;\n    };\n    return TimeSignatures;\n}());\nexports.TimeSignatures = TimeSignatures;\n//# sourceMappingURL=index.js.map","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction',\n})\n","import './style.scss'\n\nimport $ from 'jquery'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport co from 'co'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main(element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nfunction go(loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  co(function*() {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = Buffer.from(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>')\n      .text(JSON.stringify(info, null, 2))\n      .appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function() {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n            .text('[' + note.keysound + '] ')\n            .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function() {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay() {\n    return new Promise(function(resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/src/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\\n\", \"\"]);\n\n// exports\n","var jade = require(\"/home/circleci/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chardet = require(\"bemuse-chardet/bemuse-chardet\");\nfunction read(buffer) {\n    throw new Error('Synchronous read unsupported in browser!');\n}\nexports.read = read;\nfunction readAsync() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var buffer = args[0];\n    var options = args[1];\n    var callback = args[2];\n    if (callback) {\n        options = args[1];\n        callback = args[2];\n    }\n    else {\n        options = null;\n        callback = args[1];\n    }\n    var charset = (options && options.forceEncoding) || chardet.detect(buffer);\n    var reader = new FileReader();\n    reader.onload = function () {\n        callback(null, reader.result);\n    };\n    reader.onerror = function () {\n        callback(new Error('cannot read it'));\n    };\n    reader.readAsText(new Blob([buffer]), charset);\n}\nexports.readAsync = readAsync;\nvar getReaderOptionsFromFilename_1 = require(\"./getReaderOptionsFromFilename\");\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename_1.getReaderOptionsFromFilename;\n//# sourceMappingURL=index.web.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Given the filename, returns the reader options.\n * @param {string} filename\n */\nfunction getReaderOptionsFromFilename(filename) {\n    var forceEncoding;\n    if (filename.match(/\\.sjis\\.\\w+$/i)) {\n        forceEncoding = 'Shift-JIS';\n    }\n    if (filename.match(/\\.euc_kr\\.\\w+$/i)) {\n        forceEncoding = 'EUC-KR';\n    }\n    if (filename.match(/\\.utf8\\.\\w+$/i)) {\n        forceEncoding = 'UTF-8';\n    }\n    return { forceEncoding: forceEncoding };\n}\nexports.getReaderOptionsFromFilename = getReaderOptionsFromFilename;\n//# sourceMappingURL=getReaderOptionsFromFilename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Public: A module that takes a string representing the BMS notechart,\n// parses it, and compiles into a {BMSChart}.\n/* module */\nvar match_1 = require(\"../util/match\");\nvar chart_1 = require(\"../bms/chart\");\nvar matchers = {\n    bms: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):(\\S*)$/,\n        header: /^#(\\w+)(?:\\s+(\\S.*))?$/,\n    },\n    dtx: {\n        random: /^#RANDOM\\s+(\\d+)$/i,\n        if: /^#IF\\s+(\\d+)$/i,\n        endif: /^#ENDIF$/i,\n        timeSignature: /^#(\\d\\d\\d)02:\\s*(\\S*)$/,\n        channel: /^#(?:EXT\\s+#)?(\\d\\d\\d)(\\S\\S):\\s*(\\S*)$/,\n        header: /^#(\\w+):(?:\\s+(\\S.*))?$/,\n    },\n};\n/**\n * Reads the string representing the BMS notechart, parses it,\n * and compiles into a {BMSChart}.\n * @param text the BMS notechart\n * @param options additional parser options\n */\nfunction compile(text, options) {\n    options = options || {};\n    var chart = new chart_1.BMSChart();\n    var rng = options.rng ||\n        function (max) {\n            return 1 + Math.floor(Math.random() * max);\n        };\n    var matcher = (options.format && matchers[options.format]) || matchers.bms;\n    var randomStack = [];\n    var skipStack = [false];\n    var result = {\n        headerSentences: 0,\n        channelSentences: 0,\n        controlSentences: 0,\n        skippedSentences: 0,\n        malformedSentences: 0,\n        /**\n         * The resulting chart\n         */\n        chart: chart,\n        /**\n         * Warnings found during compilation\n         */\n        warnings: [],\n    };\n    eachLine(text, function (text, lineNumber) {\n        var flow = true;\n        if (text.charAt(0) !== '#')\n            return;\n        match_1.match(text)\n            .when(matcher.random, function (m) {\n            result.controlSentences += 1;\n            randomStack.push(rng(+m[1]));\n        })\n            .when(matcher.if, function (m) {\n            result.controlSentences += 1;\n            skipStack.push(randomStack[randomStack.length - 1] !== +m[1]);\n        })\n            .when(matcher.endif, function (m) {\n            result.controlSentences += 1;\n            skipStack.pop();\n        })\n            .else(function () {\n            flow = false;\n        });\n        if (flow)\n            return;\n        var skipped = skipStack[skipStack.length - 1];\n        match_1.match(text)\n            .when(matcher.timeSignature, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                chart.timeSignatures.set(+m[1], +m[2]);\n        })\n            .when(matcher.channel, function (m) {\n            result.channelSentences += 1;\n            if (!skipped)\n                handleChannelSentence(+m[1], m[2], m[3], lineNumber);\n        })\n            .when(matcher.header, function (m) {\n            result.headerSentences += 1;\n            if (!skipped)\n                chart.headers.set(m[1], m[2]);\n        })\n            .else(function () {\n            warn(lineNumber, 'Invalid command');\n        });\n    });\n    return result;\n    function handleChannelSentence(measure, channel, string, lineNumber) {\n        var items = Math.floor(string.length / 2);\n        if (items === 0)\n            return;\n        for (var i = 0; i < items; i++) {\n            var value = string.substr(i * 2, 2);\n            var fraction = i / items;\n            if (value === '00')\n                continue;\n            chart.objects.add({\n                measure: measure,\n                fraction: fraction,\n                value: value,\n                channel: channel,\n                lineNumber: lineNumber,\n            });\n        }\n    }\n    function warn(lineNumber, message) {\n        result.warnings.push({\n            lineNumber: lineNumber,\n            message: message,\n        });\n    }\n}\nexports.compile = compile;\nfunction eachLine(text, callback) {\n    text\n        .split(/\\r\\n|\\r|\\n/)\n        .map(function (line) {\n        return line.trim();\n    })\n        .forEach(function (line, index) {\n        callback(line, index + 1);\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Segment = data_structure_1.default({\n    t: 'number',\n    x: 'number',\n    dx: 'number',\n});\n//# sourceMappingURL=segment.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar note_1 = require(\"./note\");\nvar invariant_1 = __importDefault(require(\"invariant\"));\nvar ChannelMapping = __importStar(require(\"./channels\"));\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Notes holds the {Note} objects in the game.\n * A note object may or may not be playable.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #00111:AA\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Notes} using `fromBMSChart()`:\n *\n * ```js\n * var notes = Notes.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can get all notes using `.all()` method\n *\n * ```js\n * notes.all()\n * ```\n */\nvar Notes = /** @class */ (function () {\n    /**\n     * @param {BMSNote[]} notes An array of Note objects\n     */\n    function Notes(notes) {\n        notes.forEach(note_1.Note);\n        this._notes = notes;\n    }\n    /**\n     * Returns the number of notes in this object,\n     * counting both playable and non-playable notes.\n     */\n    Notes.prototype.count = function () {\n        return this._notes.length;\n    };\n    /**\n     * Returns an Array of all notes.\n     */\n    Notes.prototype.all = function () {\n        return this._notes.slice();\n    };\n    /**\n     * Creates a Notes object from a BMSChart.\n     * @param chart the chart to process\n     * @param options options\n     */\n    Notes.fromBMSChart = function (chart, options) {\n        void chart_1.BMSChart;\n        options = options || {};\n        var mapping = options.mapping || Notes.CHANNEL_MAPPING.IIDX_P1;\n        var builder = new BMSNoteBuilder(chart, { mapping: mapping });\n        return builder.build();\n    };\n    Notes.CHANNEL_MAPPING = ChannelMapping;\n    return Notes;\n}());\nexports.Notes = Notes;\nvar BMSNoteBuilder = /** @class */ (function () {\n    function BMSNoteBuilder(chart, options) {\n        this._chart = chart;\n        invariant_1.default(options.mapping, 'Expected options.mapping');\n        invariant_1.default(typeof options.mapping === 'object', 'options.mapping must be object');\n        this._mapping = options.mapping;\n        this._notes = [];\n        this._activeLN = {};\n        this._lastNote = {};\n        this._lnObj = (this._chart.headers.get('lnobj') || '').toLowerCase();\n        this._channelMapping = this._mapping;\n        this._objects = this._chart.objects.allSorted();\n    }\n    BMSNoteBuilder.prototype.build = function () {\n        var _this = this;\n        this._objects.forEach(function (object) {\n            _this._handle(object);\n        });\n        return new Notes(this._notes);\n    };\n    BMSNoteBuilder.prototype._handle = function (object) {\n        if (object.channel === '01') {\n            this._handleNormalNote(object);\n        }\n        else {\n            switch (object.channel.charAt(0)) {\n                case '1':\n                case '2':\n                    this._handleNormalNote(object);\n                    break;\n                case '5':\n                case '6':\n                    this._handleLongNote(object);\n                    break;\n            }\n        }\n    };\n    BMSNoteBuilder.prototype._handleNormalNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (object.value.toLowerCase() === this._lnObj) {\n            if (this._lastNote[channel]) {\n                this._lastNote[channel].endBeat = beat;\n            }\n        }\n        else {\n            var note = {\n                beat: beat,\n                endBeat: undefined,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n            this._lastNote[channel] = note;\n            this._notes.push(note);\n        }\n    };\n    BMSNoteBuilder.prototype._handleLongNote = function (object) {\n        var channel = this._normalizeChannel(object.channel);\n        var beat = this._getBeat(object);\n        if (this._activeLN[channel]) {\n            var note = this._activeLN[channel];\n            note.endBeat = beat;\n            this._notes.push(note);\n            delete this._activeLN[channel];\n        }\n        else {\n            this._activeLN[channel] = {\n                beat: beat,\n                keysound: object.value,\n                column: this._getColumn(channel),\n            };\n        }\n    };\n    BMSNoteBuilder.prototype._getBeat = function (object) {\n        return this._chart.measureToBeat(object.measure, object.fraction);\n    };\n    BMSNoteBuilder.prototype._getColumn = function (channel) {\n        return this._channelMapping[channel];\n    };\n    BMSNoteBuilder.prototype._normalizeChannel = function (channel) {\n        return channel.replace(/^5/, '1').replace(/^6/, '2');\n    };\n    return BMSNoteBuilder;\n}());\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_structure_1 = __importDefault(require(\"data-structure\"));\nexports.Note = data_structure_1.default({\n    beat: 'number',\n    endBeat: data_structure_1.default.maybe('number'),\n    column: data_structure_1.default.maybe('string'),\n    keysound: 'string',\n});\n//# sourceMappingURL=note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IIDX_P1 = {\n    '11': '1',\n    '12': '2',\n    '13': '3',\n    '14': '4',\n    '15': '5',\n    '18': '6',\n    '19': '7',\n    '16': 'SC',\n};\n//# sourceMappingURL=channels.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\nvar precedence = { bpm: 1, stop: 2 };\n/**\n * A Timing represents the timing information of a musical score.\n * A Timing object provides facilities to synchronize between\n * metric time (seconds) and musical time (beats).\n *\n * A Timing are created from a series of actions:\n *\n * - BPM changes.\n * - STOP action.\n */\nvar Timing = /** @class */ (function () {\n    /**\n     * Constructs a Timing with an initial BPM and specified actions.\n     *\n     * Generally, you would use `Timing.fromBMSChart` to create an instance\n     * from a BMSChart, but the constructor may also be used in other situations\n     * unrelated to the BMS file format. (e.g. bmson package)\n     */\n    function Timing(initialBPM, actions) {\n        var state = { bpm: initialBPM, beat: 0, seconds: 0 };\n        var segments = [];\n        segments.push({\n            t: 0,\n            x: 0,\n            dx: state.bpm / 60,\n            bpm: state.bpm,\n            inclusive: true,\n        });\n        actions = actions.slice();\n        actions.sort(function (a, b) {\n            return a.beat - b.beat || precedence[a.type] - precedence[b.type];\n        });\n        actions.forEach(function (action) {\n            var beat = action.beat;\n            var seconds = state.seconds + ((beat - state.beat) * 60) / state.bpm;\n            switch (action.type) {\n                case 'bpm':\n                    state.bpm = action.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    break;\n                case 'stop':\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: 0,\n                        bpm: state.bpm,\n                        inclusive: true,\n                    });\n                    seconds += ((action.stopBeats || 0) * 60) / state.bpm;\n                    segments.push({\n                        t: seconds,\n                        x: beat,\n                        dx: state.bpm / 60,\n                        bpm: state.bpm,\n                        inclusive: false,\n                    });\n                    break;\n                default:\n                    throw new Error('Unrecognized segment object!');\n            }\n            state.beat = beat;\n            state.seconds = seconds;\n        });\n        this._speedcore = new speedcore_1.Speedcore(segments);\n        this._eventBeats = lodash_1.uniq(lodash_1.map(actions, function (action) { return action.beat; }));\n    }\n    /**\n     * Convert the given beat into seconds.\n     * @param {number} beat\n     */\n    Timing.prototype.beatToSeconds = function (beat) {\n        return this._speedcore.t(beat);\n    };\n    /**\n     * Convert the given second into beats.\n     * @param {number} seconds\n     */\n    Timing.prototype.secondsToBeat = function (seconds) {\n        return this._speedcore.x(seconds);\n    };\n    /**\n     * Returns the BPM at the specified beat.\n     * @param {number} beat\n     */\n    Timing.prototype.bpmAtBeat = function (beat) {\n        return this._speedcore.segmentAtX(beat).bpm;\n    };\n    /**\n     * Returns an array representing the beats where there are events.\n     */\n    Timing.prototype.getEventBeats = function () {\n        return this._eventBeats;\n    };\n    /**\n     * Creates a Timing instance from a BMSChart.\n     * @param {BMSChart} chart\n     */\n    Timing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var actions = [];\n        chart.objects.all().forEach(function (object) {\n            var bpm;\n            var beat = chart.measureToBeat(object.measure, object.fraction);\n            if (object.channel === '03') {\n                bpm = parseInt(object.value, 16);\n                actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '08') {\n                bpm = +chart.headers.get('bpm' + object.value);\n                if (!isNaN(bpm))\n                    actions.push({ type: 'bpm', beat: beat, bpm: bpm });\n            }\n            else if (object.channel === '09') {\n                var stopBeats = +chart.headers.get('stop' + object.value) / 48;\n                actions.push({ type: 'stop', beat: beat, stopBeats: stopBeats });\n            }\n        });\n        return new Timing(+chart.headers.get('bpm') || 60, actions);\n    };\n    return Timing;\n}());\nexports.Timing = Timing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_1 = require(\"../util/match\");\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A SongInfo represents the song info, such as title, artist, genre.\n *\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #TITLE Exargon [HYPER]\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {SongInfo} using `fromBMSChart()`:\n *\n * ```js\n * var info = SongInfo.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can query the song information by accessing its properties.\n *\n * ```js\n * info.title     // => 'Exargon'\n * info.subtitles // => ['HYPER']\n * ```\n */\nvar SongInfo = /** @class */ (function () {\n    /**\n     * Constructs a SongInfo with given data\n     * @param info the properties to set on this new instance\n     */\n    function SongInfo(info) {\n        /** the song title */\n        this.title = 'NO TITLE';\n        /** the song artist */\n        this.artist = 'NO ARTIST';\n        /** the song genre */\n        this.genre = 'NO GENRE';\n        /**\n         * the song's subtitles, one line per element.\n         * The subtitle may be used to represent the difficulty name,\n         * such as NORMAL, HYPER, ANOTHER.\n         * @type {string[]}\n         */\n        this.subtitles = [];\n        /**\n         * the song's other artists, one artist per element.\n         * @type {string[]}\n         */\n        this.subartists = [];\n        /**\n         * the difficulty.\n         * Meaning of the number is same as BMS's [`#DIFFICULTY`](http:*hitkey.nekokan.dyndns.info/cmds.htm#DIFFICULTY) header.\n         *\n         * | difficulty | meaning  |\n         * | ----------:|:--------:|\n         * |          1 | BEGINNER |\n         * |          2 | NORMAL   |\n         * |          3 | HYPER    |\n         * |          4 | ANOTHER  |\n         * |          5 | INSANE   |\n         */\n        this.difficulty = 0;\n        /**\n         * the level of the song.\n         * When converted from a BMS chart, this is the value of `#PLAYLEVEL` header.\n         */\n        this.level = 0;\n        if (info)\n            lodash_1.assign(this, info);\n    }\n    /**\n     * Constructs a new {SongInfo} object from a {BMSChart}.\n     * @param chart A {BMSChart} to construct a {SongInfo} from\n     */\n    SongInfo.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var info = {};\n        var title = chart.headers.get('title');\n        var artist = chart.headers.get('artist');\n        var genre = chart.headers.get('genre');\n        var difficulty = +chart.headers.get('difficulty') || 0;\n        var level = +chart.headers.get('playlevel') || 0;\n        var subtitles = chart.headers.getAll('subtitle');\n        var subartists = chart.headers.getAll('subartist');\n        if (typeof title === 'string' && !subtitles) {\n            var extractSubtitle = function (m) {\n                title = m[1];\n                subtitles = [m[2]];\n            };\n            match_1.match(title)\n                .when(/^(.*\\S)\\s*-(.+?)-$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*～(.+?)～$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\((.+?)\\)$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*\\[(.+?)\\]$/, extractSubtitle)\n                .when(/^(.*\\S)\\s*<(.+?)>$/, extractSubtitle);\n        }\n        if (title)\n            info.title = title;\n        if (artist)\n            info.artist = artist;\n        if (genre)\n            info.genre = genre;\n        if (subtitles)\n            info.subtitles = subtitles;\n        if (subartists)\n            info.subartists = subartists;\n        if (difficulty)\n            info.difficulty = difficulty;\n        if (level)\n            info.level = level;\n        return new SongInfo(info);\n    };\n    return SongInfo;\n}());\nexports.SongInfo = SongInfo;\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Public: A module that exposes {Keysounds}\n/* module */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lodash_1 = require(\"../util/lodash\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A simple mapping between keysounds ID and the file name.\n * ## Example\n *\n * If you have a BMS like this:\n *\n * ```\n * #WAVAA cat.wav\n * ```\n *\n * Having parsed it using a {Compiler} into a {BMSChart},\n * you can create a {Keysounds} using `fromBMSChart()`:\n *\n * ```js\n * var keysounds = Keysounds.fromBMSChart(bmsChart)\n * ```\n *\n * Then you can retrieve the filename using `.get()`:\n *\n * ```js\n * keysounds.get('aa') // => 'cat.wav'\n * ```\n */\nvar Keysounds = /** @class */ (function () {\n    function Keysounds(map) {\n        this._map = map;\n    }\n    /**\n     * Returns the keysound file at the specified ID.\n     * @param id the two-character keysound ID\n     * @returns the sound filename\n     */\n    Keysounds.prototype.get = function (id) {\n        return this._map[id.toLowerCase()];\n    };\n    /**\n     * Returns an array of unique filenames in this Keysounds object.\n     * @returns filenames array\n     */\n    Keysounds.prototype.files = function () {\n        return lodash_1.uniq(lodash_1.values(this._map));\n    };\n    /**\n     * Returns a mapping from keysound ID to keysound filename.\n     *\n     * **Warning:** This method returns the internal data structure used\n     * in this Keysounds object. Do not mutate!\n     */\n    Keysounds.prototype.all = function () {\n        return this._map;\n    };\n    /**\n     * Constructs a new {Keysounds} object from a {BMSChart}.\n     * @param chart\n     */\n    Keysounds.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var map = {};\n        chart.headers.each(function (name, value) {\n            var match = name.match(/^wav(\\S\\S)$/i);\n            if (!match)\n                return;\n            map[match[1].toLowerCase()] = value;\n        });\n        return new Keysounds(map);\n    };\n    return Keysounds;\n}());\nexports.Keysounds = Keysounds;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * A Positioning represents the relation between song beats and\n * display position, and provides a way to convert between them.\n *\n * In some rhythm games, the amount of scrolling per beat may be different.\n * StepMania’s `#SCROLL` segments is an example.\n */\nvar Positioning = /** @class */ (function () {\n    /**\n     * Constructs a Positioning from the given `segments`.\n     * @param segments\n     */\n    function Positioning(segments) {\n        this._speedcore = new speedcore_1.Speedcore(segments);\n    }\n    /**\n     * Returns the scrolling speed at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.speed = function (beat) {\n        return this._speedcore.dx(beat);\n    };\n    /**\n     * Returns the total elapsed scrolling amount at specified beat.\n     * @param beat the beat number\n     */\n    Positioning.prototype.position = function (beat) {\n        return this._speedcore.x(beat);\n    };\n    /**\n     * Creates a {Positioning} object from the {BMSChart}.\n     * @param {BMSChart} chart A {BMSChart} to construct a {Positioning} from\n     */\n    Positioning.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        var x = 0;\n        segments.push({\n            t: 0,\n            x: x,\n            dx: 1,\n            inclusive: true,\n        });\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SC') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var dx = +chart.headers.get('scroll' + object.value);\n                if (isNaN(dx))\n                    return;\n                var previous = segments[segments.length - 1];\n                x += (beat - previous.t) * previous.dx;\n                if (beat === 0 && segments.length === 1) {\n                    segments[0].dx = dx;\n                }\n                else {\n                    segments.push({\n                        t: beat,\n                        x: x,\n                        dx: dx,\n                        inclusive: true,\n                    });\n                }\n            }\n        });\n        return new Positioning(segments);\n    };\n    return Positioning;\n}());\nexports.Positioning = Positioning;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar speedcore_1 = require(\"../speedcore\");\nvar chart_1 = require(\"../bms/chart\");\n/**\n * Public: A Spacing represents the relation between song beats and\n * notes spacing.\n *\n * In some rhythm games, such as Pump It Up!,\n * the speed (note spacing factor) may be adjusted by the notechart.\n * StepMania’s `#SPEED` segments is an example.\n */\nvar Spacing = /** @class */ (function () {\n    /**\n     * Constructs a Spacing from the given `segments`.\n     */\n    function Spacing(segments) {\n        if (segments.length > 0) {\n            this._speedcore = new speedcore_1.Speedcore(segments);\n        }\n    }\n    /**\n     * Returns the note spacing factor at the specified beat.\n     * @param beat the beat\n     */\n    Spacing.prototype.factor = function (beat) {\n        if (this._speedcore) {\n            return this._speedcore.x(beat);\n        }\n        else {\n            return 1;\n        }\n    };\n    /**\n     * Creates a {Spacing} object from the {BMSChart}.\n     *\n     * ## `#SPEED` and `#xxxSP`\n     *\n     * Speed is defined as keyframes. These keyframes will be linearly interpolated.\n     *\n     * ```\n     * #SPEED01 1.0\n     * #SPEED02 2.0\n     *\n     * #001SP:01010202\n     * ```\n     *\n     * In this example, the note spacing factor will gradually change\n     * from 1.0x at beat 1 to 2.0x at beat 2.\n     *\n     * Returns a {Spacing} object\n     *\n     * @param {BMSChart} chart the chart\n     */\n    Spacing.fromBMSChart = function (chart) {\n        void chart_1.BMSChart;\n        var segments = [];\n        chart.objects.allSorted().forEach(function (object) {\n            if (object.channel === 'SP') {\n                var beat = chart.measureToBeat(object.measure, object.fraction);\n                var factor = +chart.headers.get('speed' + object.value);\n                if (isNaN(factor))\n                    return;\n                if (segments.length > 0) {\n                    var previous = segments[segments.length - 1];\n                    previous.dx = (factor - previous.x) / (beat - previous.t);\n                }\n                segments.push({\n                    t: beat,\n                    x: factor,\n                    dx: 0,\n                    inclusive: true,\n                });\n            }\n        });\n        if (segments.length > 0) {\n            segments.unshift({\n                t: 0,\n                x: segments[0].x,\n                dx: 0,\n                inclusive: true,\n            });\n        }\n        return new Spacing(segments);\n    };\n    return Spacing;\n}());\nexports.Spacing = Spacing;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar headers_1 = require(\"./headers\");\nvar objects_1 = require(\"./objects\");\nvar time_signatures_1 = require(\"../time-signatures\");\n/**\n * A BMSChart holds information about a particular BMS notechart.\n * Note that a BMSChart does not contain any information about `#RANDOM`,\n * as they are already processed after compilation.\n *\n * There is not many useful things you can do with a BMSChart other than\n * accessing the header fields and objects inside it.\n *\n * To extract information from a BMSChart,\n * please look at the documentation of higher-level classes,\n * such as {Keysounds}, {Notes}, and {Timing}.\n */\nvar BMSChart = /** @class */ (function () {\n    function BMSChart() {\n        /**\n         * {BMSHeaders} representing the BMS-specific headers of this notechart\n         */\n        this.headers = new headers_1.BMSHeaders();\n        /**\n         * {BMSObjects} representing all objects of this notechart\n         */\n        this.objects = new objects_1.BMSObjects();\n        /**\n         * {TimeSignatures} representing the time signature information in this chart\n         */\n        this.timeSignatures = new time_signatures_1.TimeSignatures();\n    }\n    /**\n     * Public: Converts measure number and fraction into beat.\n     * A single beat is equivalent to a quarter note in common time signature.\n     *\n     * @param {number} measure representing the measure number, starting from 0\n     * @param {number} fraction representing the fraction inside that measure, from 0 to 1\n     */\n    BMSChart.prototype.measureToBeat = function (measure, fraction) {\n        return this.timeSignatures.measureToBeat(measure, fraction);\n    };\n    return BMSChart;\n}());\nexports.BMSChart = BMSChart;\n//# sourceMappingURL=chart.js.map","import * as ProgressUtils from 'bemuse/progress/utils'\n\nimport co from 'co'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport class DndResources {\n  constructor(event) {\n    this._files = getFilesFromEvent(event)\n  }\n  file(name) {\n    return this._files.then(function(files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList() {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource {\n  constructor(file) {\n    this._file = file\n  }\n  read(progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl() {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name() {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nfunction getFilesFromEvent(event) {\n  let out = []\n\n  return co(function*() {\n    if (event.dataTransfer.items) {\n      for (let item of Array.from(event.dataTransfer.items)) {\n        yield readItem(item)\n      }\n    } else if (event.dataTransfer.files) {\n      for (let file of Array.from(event.dataTransfer.files)) {\n        addFile(file)\n      }\n    }\n    return out\n  })\n\n  function readItem(item) {\n    return co(function*() {\n      let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n      if (entry) {\n        yield readEntry(entry, '')\n      } else {\n        let file = item.getAsFile && item.getAsFile()\n        addFile(file)\n      }\n    })\n  }\n\n  function readEntry(entry) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile(entry) {\n    return new Promise((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  function readDirectory(dir) {\n    return co(function*() {\n      let entries = []\n      let reader = dir.createReader()\n      let readMore = () =>\n        new Promise((resolve, reject) => {\n          reader.readEntries(resolve, reject)\n        })\n      for (;;) {\n        let results = yield readMore()\n        if (!results || results.length === 0) break\n        entries.push(...Array.from(results))\n      }\n      for (let entry of entries) {\n        yield readEntry(entry)\n      }\n    })\n  }\n\n  function addFile(file) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar segment_1 = require(\"./segment\");\n/**\n * Speedcore is a small internally-used library.\n * A Speedcore represents a single dimensional keyframed linear motion\n * (as in equation x = f(t)), and is useful when working\n * with BPM changes ({Timing}), note spacing factor ({Spacing}), or scrolling\n * segments ({Positioning}).\n * A Speedcore is constructed from an array of Segments.\n *\n * A {Segment} is defined as `{ t, x, dx }`, such that:\n *\n * * speedcore.x(segment.t) = segment.x\n * * speedcore.t(segment.x) = segment.t\n * * speedcore.x(segment.t + dt) = segment.x + (segment.dx / dt)\n *\n *\n * ## Explanation\n *\n * One way to think of these segments is to think about tempo changes, where:\n *\n * * `t` is the elapsed time (in seconds) since song start.\n * * `x` is the elapsed beat since song start.\n * * `dx` is the amount of `x` increase per `t`. In this case, it has the\n *   unit of beats per second.\n *\n * For example, consider a song that starts at 140 BPM.\n * 32 beats later, the tempo changes to 160 BPM.\n * 128 beats later (at beat 160), the tempo reverts to 140 BPM.\n *\n * We can derive three segments:\n *\n * 1. At time 0, we are at beat 0, and moving at 2.333 beats per second.\n * 2. At 13.714s, we are at beat 32, moving at 2.667 beats per second.\n * 3. At 61.714s, we are at beat 160, moving at 2.333 beats per second.\n *\n * This maps out to this data structure:\n *\n * ```js\n * [ [0]: { t:  0.000,  x:   0,  dx: 2.333,  inclusive: true },\n *   [1]: { t: 13.714,  x:  32,  dx: 2.667,  inclusive: true },\n *   [2]: { t: 61.714,  x: 160,  dx: 2.333,  inclusive: true } ]\n * ```\n *\n * With this data, it is possible to find out the value of `x` at any given `t`.\n *\n * For example, to answer the question, “what is the beat number at 30s?”\n * First, we find the segment with maximum value of `t < 30`, and we get\n * the segment `[1]`.\n *\n * We calculate `segment.x + (t - segment.t) * segment.dx`.\n * The result beat number is (32 + (30 - 13.714) * 2.667) = 75.435.\n *\n * We can also perform the reverse calculation in a similar way, by reversing\n * the equation.\n *\n * Interestingly, we can use these segments to represent the effect of\n * both BPM changes and STOP segments in the same array.\n * For example, a 150-BPM song with a 2-beat stop in the 32nd beat\n * can be represented like this:\n *\n * ```js\n * [ [0]: { t:  0.0,  x:  0,  dx: 2.5,  inclusive: true  },\n *   [1]: { t: 12.8,  x: 32,  dx: 0,    inclusive: true  },\n *   [2]: { t: 13.6,  x: 32,  dx: 2.5,  inclusive: false } ]\n * ```\n */\nvar Speedcore = /** @class */ (function () {\n    /**\n     * Constructs a new `Speedcore` from given segments.\n     */\n    function Speedcore(segments) {\n        segments.forEach(segment_1.Segment);\n        this._segments = segments;\n    }\n    Speedcore.prototype._reached = function (index, targetFn, position) {\n        if (index >= this._segments.length)\n            return false;\n        var segment = this._segments[index];\n        var target = targetFn(segment);\n        return segment.inclusive ? position >= target : position > target;\n    };\n    Speedcore.prototype._segmentAt = function (targetFn, position) {\n        for (var i = 0; i < this._segments.length; i++) {\n            if (!this._reached(i + 1, targetFn, position))\n                return this._segments[i];\n        }\n        throw new Error('Unable to find a segment matching a criteria (this should never happen)!');\n    };\n    Speedcore.prototype.segmentAtX = function (x) {\n        return this._segmentAt(X, x);\n    };\n    Speedcore.prototype.segmentAtT = function (t) {\n        return this._segmentAt(T, t);\n    };\n    /**\n     * Calculates the _t_, given _x_.\n     */\n    Speedcore.prototype.t = function (x) {\n        var segment = this.segmentAtX(x);\n        return segment.t + (x - segment.x) / (segment.dx || 1);\n    };\n    /**\n     * Calculates the _x_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.x = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.x + (t - segment.t) * segment.dx;\n    };\n    /**\n     * Finds the _dx_, given _t_.\n     * @param {number} t\n     */\n    Speedcore.prototype.dx = function (t) {\n        var segment = this.segmentAtT(t);\n        return segment.dx;\n    };\n    return Speedcore;\n}());\nexports.Speedcore = Speedcore;\nvar T = function (segment) { return segment.t; };\nvar X = function (segment) { return segment.x; };\n//# sourceMappingURL=index.js.map","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\nexport function fixed(total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return extra => progress.report(++loaded, total, extra)\n}\n\n// Reports the progress as an atomic operation.\nexport function atomic(progress, promise) {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (data && data.byteLength) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\n\nexport function wrapPromise(progress, f) {\n  let current = 0\n  let total = 0\n  return function() {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\nexport function simultaneous(target) {\n  let queue = []\n  let current\n  let unsubscribe\n  function update() {\n    if (current) {\n      target.report(current.current, current.total, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress >= 1)) {\n      bind(queue.shift())\n    }\n  }\n  function bind(progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A subset of lodash that we actually use.\nvar lodash_uniq_1 = __importDefault(require(\"lodash.uniq\"));\nexports.uniq = lodash_uniq_1.default;\nvar lodash_map_1 = __importDefault(require(\"lodash.map\"));\nexports.map = lodash_map_1.default;\nvar lodash_values_1 = __importDefault(require(\"lodash.values\"));\nexports.values = lodash_values_1.default;\nvar lodash_assign_1 = __importDefault(require(\"lodash.assign\"));\nexports.assign = lodash_assign_1.default;\n//# sourceMappingURL=lodash.js.map"],"sourceRoot":""}
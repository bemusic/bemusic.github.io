{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/src/bootstrap/index.js","file:///home/circleci/bemuse/bemuse/src/promise/index.ts","file:///home/circleci/bemuse/bemuse/src/boot/environment.js"],"names":["global","DEBUG","wrapBluebirdInstanceMethod","methodName","args","wrapped","resolve","this","Promise","wrapBluebirdStaticMethod","apply","prototype","error","bind","props","map","reduce","filter","tap","get","done","try","promisify","delay","window","React","attach","document","body"],"mappings":"wFAAA,kDAQAA,EAAOC,MAAQ,M,oDCRf,sBAKA,SAASC,EACPC,GAEA,OAAO,YAAqCC,GAC1C,MAAMC,EAAU,IAASC,QAAQC,MACjC,OAAOC,QAAQF,QAAQD,EAAQF,MAAeC,KAIlD,SAASK,EACPN,GAEA,OAAO,YAAoCC,GACzC,OAAOI,QAAQF,QAAS,IAASH,GAAoBO,MAAM,IAAUN,KAwBzEI,QAAQG,UAAUC,MAAQV,EAA2B,SACrDM,QAAQG,UAAUE,KAAOX,EAA2B,QACpDM,QAAQG,UAAUG,MAAQZ,EAA2B,SACrDM,QAAQG,UAAUI,IAAMb,EAA2B,OACnDM,QAAQG,UAAUK,OAASd,EAA2B,UACtDM,QAAQG,UAAUM,OAASf,EAA2B,UACtDM,QAAQG,UAAUO,IAAMhB,EAA2B,OACnDM,QAAQG,UAAUQ,IAAMjB,EAA2B,OACnDM,QAAQG,UAAUS,KAAOlB,EAA2B,QAEpDM,QAAQa,IAAMZ,EAAyB,OACvCD,QAAQc,UAAYb,EAAyB,aAC7CD,QAAQe,MAAQd,EAAyB,SACzCD,QAAQO,IAAMN,EAAyB,Q,kCCvDvC,6DAKAe,OAAOC,MAAQ,IACf,IAAUC,OAAOC,SAASC","file":"build/environment-1a9a0bb5a6e183ebe54c.js","sourcesContent":["/* eslint-disable no-extend-native */\nimport 'whatwg-fetch'\nimport 'bemuse/promise'\nimport debug from 'debug'\n\n/**\n * An instance of `debug`. Used for debugging.\n */\nglobal.DEBUG = debug\n","import Bluebird from 'bluebird'\n\n// Disabled for purely historical reasons.\n/* eslint no-extend-native: off */\n\nfunction wrapBluebirdInstanceMethod<K extends keyof Bluebird<any>>(\n  methodName: K\n) {\n  return function (this: PromiseLike<any>, ...args: any[]): any {\n    const wrapped = Bluebird.resolve(this) as any\n    return Promise.resolve(wrapped[methodName](...args))\n  }\n}\n\nfunction wrapBluebirdStaticMethod<K extends keyof typeof Bluebird>(\n  methodName: K\n) {\n  return function (this: typeof Bluebird, ...args: any[]): any {\n    return Promise.resolve((Bluebird[methodName] as any).apply(Bluebird, args))\n  }\n}\n\ndeclare global {\n  interface Promise<T> {\n    error: Bluebird<T>['error']\n    bind: Bluebird<T>['bind']\n    props: Bluebird<T>['props']\n    map: Bluebird<T>['map']\n    reduce: Bluebird<T>['reduce']\n    filter: Bluebird<T>['filter']\n    tap: Bluebird<T>['tap']\n    get: Bluebird<T>['get']\n    done: Bluebird<T>['done']\n  }\n  interface PromiseConstructor {\n    try: typeof Bluebird.try\n    promisify: typeof Bluebird.promisify\n    delay: typeof Bluebird.delay\n    map: typeof Bluebird.map\n  }\n}\n\nPromise.prototype.error = wrapBluebirdInstanceMethod('error')\nPromise.prototype.bind = wrapBluebirdInstanceMethod('bind')\nPromise.prototype.props = wrapBluebirdInstanceMethod('props')\nPromise.prototype.map = wrapBluebirdInstanceMethod('map')\nPromise.prototype.reduce = wrapBluebirdInstanceMethod('reduce')\nPromise.prototype.filter = wrapBluebirdInstanceMethod('filter')\nPromise.prototype.tap = wrapBluebirdInstanceMethod('tap')\nPromise.prototype.get = wrapBluebirdInstanceMethod('get')\nPromise.prototype.done = wrapBluebirdInstanceMethod('done')\n\nPromise.try = wrapBluebirdStaticMethod('try')\nPromise.promisify = wrapBluebirdStaticMethod('promisify')\nPromise.delay = wrapBluebirdStaticMethod('delay')\nPromise.map = wrapBluebirdStaticMethod('map')\n","import 'jquery'\nimport 'bemuse/bootstrap'\nimport FastClick from 'fastclick'\nimport React from 'react'\n\nwindow.React = React\nFastClick.attach(document.body)\n"],"sourceRoot":""}
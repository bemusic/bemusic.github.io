{"version":3,"sources":["file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/download.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.jsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/index.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/Progress.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/observable.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/callbacks.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/MusicTable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.jsx","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/SongOfTheDay.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/formatters.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/read-blob.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/utils.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/main-element.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/default.ogg","file:///home/runner/work/bemuse/bemuse/bemuse/src/music-previewer/go.ogg","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/url.ts"],"names":["url","getRetryDelay","Math","random","async","type","progress","shouldGiveUp","i","Promise","resolve","reject","xh","XMLHttpRequest","open","responseType","onload","status","response","Error","onerror","formatter","onprogress","e","report","loaded","total","send","error","console","waitMs","setTimeout","MusicSelectPreviewer","Component","componentDidMount","this","props","addEventListener","handleMessage","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","render","data","propTypes","string","getPreviewResourceUrl","song","serverUrl","tutorial","baseResources","file","preview_url","resolveUrl","Progress","current","undefined","_observable","extra","notify","watch","f","toString","constructor","value","_callbacks","_value","call","add","init","_nextId","length","args","callbacks","id","callback","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","reverse","sortBy","getAdded","initial","renderSongWarnings","problems","message","keys","push","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","getPlayableCharts","info","subtitles","validateSong","map","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","super","state","sort","initialSort","Object","previewUrl","previewEnabled","renderTable","borderSpacing","colSpan","renderSorter","renderPreview","renderRows","out","onClick","setState","button","s","categories","category","prompt","color","textAlign","genre","log","alert","inspect","artist","renderMessage","text","object","query","server","then","result","catch","preprocessCollection","main","OFFICIAL_SERVER_URL","load","fetch","global","indexUrl","getServerIndexFileUrl","json","Array","isArray","dir","replace","path","endsWith","orderBy","difficulty","level","draft","chart_names","name","preprocessSong","min","bpm","toLowerCase","BemusePackageFileResource","resources","ref","read","getBlob","blob","as","URL","createObjectURL","Ref","spec","_basePromise","base","_promise","loadPayload","getPayload","slice","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","once","_base","_metadataFilename","Blob","JSON","parse","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","href","fallback","_fallback","_fallbackPattern","fallbackPattern","metadataFilename","simultaneous","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","getHashFunction","today","Date","now","toISOString","split","memoize","md5","update","digest","enabled","ids","Set","sorted","custom","isSongOfTheDay","has","grouping","criteria","context","songOfTheDay","songOfTheDayEnabled","groups","group","input","output","resolveRelativeResources","includes","parts","dirName","shift","DirectoryResources","filename","instance","getInstance","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","goSound","document","createElement","src","volume","backgroundFader","createFader","target","pause","fadeTo","destroy","playing","play","stop","playAudio","warn","createInstance","songUrl","audio","played","fader","onended","enable","disable","go","currentTime","preview","createMusicPreviewer","element","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","max","currentVolume","requestAnimationFrame","speed","getSongResources","assetResources","bemusepackUrl","assetsBase","wrapAssetResources","bemusepack_url","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","reader","FileReader","readAsArrayBuffer","readAsText","fixed","atomic","promise","tap","byteLength","hasByteLength","wrapPromise","apply","bind","from","to","queue","unsubscribe","querySelector","module","exports","URLResource","URLResources","part","encodeURIComponent","join"],"mappings":"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","file":"build/music-9680306f2f0d0a995c89.js","sourcesContent":["import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await new Promise((resolve) => setTimeout(resolve, waitMs))\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          const xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as MusicPreviewer from './'\n\nMusicPreviewer.preload()\n\nexport default class MusicSelectPreviewer extends React.Component {\n  static propTypes = {\n    url: PropTypes.string,\n  }\n\n  componentDidMount() {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(this.props.url)\n    addEventListener('message', this.handleMessage)\n  }\n\n  componentWillUnmount() {\n    MusicPreviewer.disable()\n    removeEventListener('message', this.handleMessage)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    MusicPreviewer.preview(nextProps.url)\n  }\n\n  render() {\n    return null\n  }\n\n  handleMessage({ data }) {\n    if (data.type === 'calibration-started') {\n      MusicPreviewer.disable()\n    } else if (data.type === 'calibration-closed') {\n      MusicPreviewer.enable()\n    }\n  }\n}\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (let i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    const callbacks = this._callbacks\n    for (const id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    const id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\n\nconst sorters = {\n  ingame: (songs) => groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\nfunction validateSong(song) {\n  const problems = []\n  const report = (message, ...keys) => problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nfunction renderSongWarnings(song) {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport class MusicTable extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    url: PropTypes.string,\n    initialSort: PropTypes.string,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sort: this.props.initialSort || Object.keys(sorters)[0],\n      previewUrl: null,\n      previewEnabled: false,\n    }\n  }\n\n  renderTable() {\n    return (\n      <table style={{ borderSpacing: 4 }}>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              {this.renderSorter()}\n              {' · '}\n              {this.renderPreview()}\n            </th>\n          </tr>\n          <tr>\n            <th>id</th>\n            <th>song</th>\n            <th>warnings</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    )\n  }\n\n  renderSorter() {\n    const out = []\n    for (const key of Object.keys(sorters)) {\n      out.push(\n        <button\n          key={key}\n          onClick={() => {\n            this.setState({ sort: key })\n          }}\n        >\n          {key}\n        </button>\n      )\n    }\n    return (\n      <span>\n        <strong>Sort by:</strong> {out}\n      </span>\n    )\n  }\n\n  renderPreview() {\n    const button = (\n      <button\n        onClick={() => {\n          this.setState((s) => ({ previewEnabled: !s.previewEnabled }))\n        }}\n      >\n        {this.state.previewEnabled ? 'disable' : 'enable'}\n      </button>\n    )\n    return (\n      <span>\n        <strong>Music preview:</strong> {button}\n        {this.state.previewEnabled && (\n          <MusicSelectPreviewer url={this.state.previewUrl} />\n        )}\n      </span>\n    )\n  }\n\n  renderRows() {\n    const categories = sorters[this.state.sort](this.props.data.songs)\n    const out = []\n    for (const category of categories) {\n      out.push(\n        <tr key={category.title}>\n          <th colSpan={4}>{category.title}</th>\n        </tr>\n      )\n      for (const song of category.songs) {\n        out.push(\n          <tr key={song.id}>\n            <td>\n              <strong\n                onClick={() => {\n                  prompt('', `vim '${song.id}/README.md'`)\n                }}\n              >\n                <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n              </strong>\n              <br />\n              <span style={{ color: '#8b8685' }}>{song.added}</span>\n            </td>\n            <td style={{ textAlign: 'center', background: '#353433' }}>\n              <span\n                style={{ color: '#8b8685' }}\n                onClick={async () => {\n                  const previewUrl = await getPreviewResourceUrl(\n                    song,\n                    this.props.url\n                  )\n                  this.setState({ previewUrl })\n                }}\n              >\n                {song.genre}\n              </span>\n              <br />\n              <strong\n                onClick={() => {\n                  console.log(song)\n                  alert(require('util').inspect(song))\n                }}\n              >\n                {song.title}\n              </strong>\n              <br />\n              {song.artist}\n            </td>\n            <td>{renderSongWarnings(song)}</td>\n          </tr>\n        )\n      }\n    }\n    return out\n  }\n\n  renderMessage(text) {\n    return <div style={{ textAlign: 'center' }}>{text}</div>\n  }\n\n  render() {\n    if (!this.props.data) return this.renderMessage('No data')\n    try {\n      return this.renderTable()\n    } catch (e) {\n      return this.renderMessage(`Error: ${e}`)\n    }\n  }\n}\n\nexport default MusicTable\n","import React from 'react'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\nimport { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\n\nimport MusicTable from './MusicTable'\n\nexport class CollectionViewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: query.server || OFFICIAL_SERVER_URL,\n      status: 'Loading',\n    }\n  }\n\n  componentDidMount() {\n    load(this.state.url)\n      .then((result) => {\n        this.setState({ status: 'Load completed', data: result })\n      })\n      .catch((e) => {\n        this.setState({ status: 'Load error: ' + e })\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <header style={{ textAlign: 'center' }}>\n          <h1>Bemuse collection viewer</h1>\n          <div>\n            {this.state.url}\n            <br />\n            {this.state.status}\n          </div>\n        </header>\n        <div style={{ padding: 20 }}>\n          <MusicTable\n            data={this.state.data && preprocessCollection(this.state.data)}\n            url={this.state.url}\n            initialSort={query.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import produce from 'immer'\n\nexport const preprocessCollection = produce((draft, songs) => {\n  if (songs) {\n    draft.songs = songs.map((song) => preprocessSong(song))\n  }\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = produce(song, (draft) => {\n      if (draft.charts) {\n        draft.charts = draft.charts.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return produce(chart, (draft) => {\n            draft.info = {\n              subtitles: (subtitles) => [...subtitles, name],\n            }\n          })\n        })\n      }\n    })\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    const simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    const nextProgress = () => {\n      const progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    const files = new Map<string, BemusePackFileEntry>()\n    for (const file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    const file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  const array = new Uint8Array(buffer)\n  const length =\n    array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import _ from 'lodash'\nimport { createHash } from 'crypto'\nimport { Song } from 'bemuse/collection-model/types'\n\nconst getHashFunction = _.once(() => {\n  const today = new Date(Date.now() + 9 * 3600e3).toISOString().split('T')[0]\n  return _.memoize((id: string) => {\n    const md5 = createHash('md5')\n    md5.update(id)\n    md5.update(today)\n    return md5.digest('hex')\n  })\n})\n\nexport class SongOfTheDay {\n  private ids: Set<string>\n  constructor(songs: Song[], { enabled = true } = {}) {\n    if (!enabled) {\n      this.ids = new Set()\n      return\n    }\n\n    const sorted = _.sortBy(\n      songs.filter((s) => !s.custom && !s.tutorial),\n      (s) => getHashFunction()(s.id)\n    )\n    this.ids = new Set(sorted.slice(0, 3).map((s) => s.id))\n  }\n\n  isSongOfTheDay(id: string) {\n    return this.ids.has(id)\n  }\n}\n","import _ from 'lodash'\nimport { SongOfTheDay } from './SongOfTheDay'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  {\n    title: 'Random Songs of the Day',\n    criteria: (song, context) => context.songOfTheDay.isSongOfTheDay(song.id),\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(\n  songs,\n  { songOfTheDayEnabled = false } = {}\n) {\n  const context = {\n    songOfTheDay: new SongOfTheDay(songs, { enabled: songOfTheDayEnabled }),\n  }\n  const groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (const song of songs) {\n    for (const { input, output } of groups) {\n      if (input.criteria(song, context)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (const { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction playAudio(element) {\n  return new Promise((resolve) => {\n    resolve(element.play())\n  })\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        playAudio(background).catch(() =>\n          console.warn('Cannot play background music')\n        )\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      playAudio(goSound).catch(() => console.warn('Cannot play go sound.'))\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          playAudio(audio)\n            .then(() => {\n              played = true\n            })\n            .catch(() => console.warn('Cannot play', audio.src))\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import bytes from 'bytes'\n\nconst wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport const BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport const PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport const EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        const reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap((data) => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  const queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","export default document.querySelector('#scene-root')\n","module.exports = __webpack_public_path__ + \"build/354b30433269481d2f132496a0d13f64.ogg\";","module.exports = __webpack_public_path__ + \"build/38fbcad5f2b14ca6ffc359446f7ec455.ogg\";","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n"],"sourceRoot":""}
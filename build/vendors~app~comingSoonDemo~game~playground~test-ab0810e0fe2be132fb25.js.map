{"version":3,"sources":["file:///home/circleci/bemuse/node_modules/data-structure/index.js","file:///home/circleci/bemuse/node_modules/util/util.js","file:///home/circleci/bemuse/node_modules/util/node_modules/inherits/inherits_browser.js","file:///home/circleci/bemuse/node_modules/util/support/isBufferBrowser.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/encoding/iso2022.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/encoding/sbcs.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/encoding/mbcs.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/encoding/unicode.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/encoding/utf8.js","file:///home/circleci/bemuse/node_modules/base64-js/index.js","file:///home/circleci/bemuse/node_modules/bytes/index.js","file:///home/circleci/bemuse/node_modules/process/browser.js","file:///home/circleci/bemuse/node_modules/lodash.assign/index.js","file:///home/circleci/bemuse/node_modules/lodash.values/index.js","file:///home/circleci/bemuse/node_modules/lodash.map/index.js","file:///home/circleci/bemuse/node_modules/lodash.uniq/index.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/match.js","file:///home/circleci/bemuse/node_modules/bemuse-chardet/bemuse-chardet.js","file:///home/circleci/bemuse/node_modules/co/index.js","file:///home/circleci/bemuse/node_modules/invariant/browser.js"],"names":["DataStructure","schemas","slice","call","arguments","Constructor","object","validate","i","length","schema","value","Number","String","Error","prop","e","message","validateObject","module","exports","maybe","MaybeValidator","global","process","formatRegExp","format","f","isString","objects","push","inspect","join","args","len","str","replace","x","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","apply","this","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","prototype","ret","primitive","simple","isNumber","formatPrimitive","keys","Object","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","RegExp","toString","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","get","set","split","line","substr","ar","Array","arg","re","objectToString","d","o","pad","n","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","__webpack_require__","months","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","copy","fill","readUInt8","util","Match","ISO_2022","det","j","escN","quality","hits","misses","shifts","text","fInputBytes","textLen","fInputLen","scanInput","checkEscapes","escapeSequences","seq","ISO_2022_JP","ISO_2022_KR","ISO_2022_CN","NGramParser","theNgramList","theByteMap","byteIndex","ngram","ngramList","byteMap","ngramCount","hitCount","spaceChar","search","table","index","lookup","thisNgram","addByte","b","nextByte","parse","spaceCh","ignoreSpace","mb","rawPercent","Math","floor","NGramsPlusLang","la","ng","fLang","fNGrams","sbcs","ngrams","confidence","bestConfidenceSoFar","lang","ngl","ISO_8859_1","fC1Bytes","ISO_8859_2","ISO_8859_5","language","ISO_8859_6","ISO_8859_7","ISO_8859_8","ISO_8859_9","windows_1251","windows_1256","KOI8_R","binarySearch","arr","searchValue","find","left","right","mid","mbcs","eucNextChar","iter","nextIndex","firstByte","secondByte","thirdByte","charValue","done","doubleByteCharCount","commonCharCount","badCharCount","totalCharCount","reset","fRawLength","fRawInput","detectBlock","nextChar","cv","singleByteCharCount","commonChars","scaleFactor","parseFloat","min","sjis","big5","euc_jp","euc_kr","gb_18030","fourthByte","buildChar","UTF_32","UTF_16BE","input","UTF_16LE","limit","numValid","numInvalid","hasBOM","getChar","ch","UTF_32BE","UTF_32LE","trailBytes","byteLength","b64","placeHoldersCount","toByteArray","tmp","placeHolders","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","Uint8Array","code","start","end","num","options","formatThousandsRegExp","formatDecimalsRegExp","kb","gb","tb","parseRegExp","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","Boolean","unit","toLowerCase","toFixed","isNaN","floatValue","results","exec","parseInt","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","reIsUint","func","transform","objectProto","propertyIsEnumerable","nativeKeys","nativeMax","max","nonEnumShadows","valueOf","arrayLikeKeys","inherited","result","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","iteratee","baseTimes","skipIndexes","isIndex","assignValue","objValue","eq","isPrototype","Ctor","other","isLength","tag","type","assign","assigner","sources","customizer","guard","isIterateeCall","source","otherArgs","thisArg","createAssigner","props","newValue","copyObject","baseKeys","baseValues","arrayMap","proto","LARGE_ARRAY_SIZE","FUNC_ERROR_TEXT","HASH_UNDEFINED","UNORDERED_COMPARE_FLAG","PARTIAL_COMPARE_FLAG","INFINITY","arrayTag","boolTag","dateTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","typedArrayTags","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","freeProcess","nodeUtil","nodeIsTypedArray","isTypedArray","arraySome","predicate","isHostObject","mapToArray","size","setToArray","uid","arrayProto","funcProto","coreJsData","maskSrcKey","IE_PROTO","funcToString","reIsNative","Symbol","splice","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","Hash","entries","clear","entry","ListCache","MapCache","SetCache","values","__data__","Stack","assocIndexOf","has","data","getMapData","cache","pairs","eachFunc","fromRight","baseEach","baseFor","collection","iterable","keysFunc","createBaseFor","baseGet","path","isKey","castPath","toKey","baseHasIn","baseIsEqual","bitmask","stack","equalFunc","objIsArr","othIsArr","objTag","othTag","getTag","objIsObj","othIsObj","isSameTag","equalArrays","byteOffset","buffer","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","othLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","defaultValue","hasFunc","hasPath","hasIn","baseMatchesProperty","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","baseMap","stringToPath","arrLength","arrValue","othIndex","getValue","ArrayBuffer","resolve","ctorString","memoize","baseToString","quote","resolver","TypeError","memoized","Cache","baseUnary","arrayIncludes","fromIndex","baseFindIndex","baseIsNaN","baseIndexOf","arrayIncludesWith","comparator","cacheHas","createSet","includes","isCommon","outer","computed","seenIndex","baseUniq","rec","utf8","unicode","recognisers","detect","fByteStats","context","filter","sort","a","co","gen","reject","next","onFulfilled","res","onRejected","err","throw","toPromise","isPromise","then","displayName","isGenerator","isGeneratorFunction","all","promises","promise","defer","wrap","createPromise","__generatorFunction__","condition","c","argIndex","framesToPop"],"mappings":"uEAGA,SAAAA,IAEA,IAAAC,KAAAC,MAAAC,KAAAC,WAEA,SAAAC,EAAAC,GAEA,OADAD,EAAAE,SAAAD,GACAA,EASA,OANAD,EAAAE,SAAA,SAAAD,GACA,QAAAE,EAAA,EAAmBA,EAAAP,EAAAQ,OAAoBD,IACvCD,EAAAN,EAAAO,GAAAF,IAIAD,EAgBA,SAAAE,EAAAG,EAAAC,GAGA,GAFAD,IAAAE,SAAAF,EAAA,UACAA,IAAAG,SAAAH,EAAA,UACA,iBAAAA,GACA,UAAAC,IAAAD,EAAA,UAAAI,MAAA,eAAAJ,QACG,sBAAAA,GACH,sBAAAA,EAAAH,SACAG,EAAAH,SAAAI,QACK,KAAAA,aAAAD,GACL,UAAAI,MAAA,4BAAAJ,OAEG,qBAAAA,EAIH,UAAAI,MAAA,kBAHA,IAAAH,EAAA,UAAAG,MAAA,wBAOA,SAAAJ,EAAAJ,GACA,QAAAS,KAAAL,EAAA,CACA,KAAAK,KAAAT,GACA,UAAAQ,MAAA,sBAAAC,EAAA,KAEA,IACAR,EAAAG,EAAAK,GAAAT,EAAAS,IACK,MAAAC,GACL,UAAAF,MAAA,sBAAAC,EAAA,MAAAC,EAAAC,WAdAC,CAAAR,EAAAC,IA9CAQ,EAAAC,QAAApB,EAqBAA,EAAAqB,MAAA,SAAAX,GACA,SAAAY,EAAAhB,GAEA,OADAgB,EAAAf,SAAAD,GACAA,EAMA,OAJAgB,EAAAf,SAAA,SAAAI,GACAA,SACAJ,EAAAG,EAAAC,IAEAW,yBC/BA,SAAAC,EAAAC,GAqBA,IAAAC,EAAA,WACAL,EAAAM,OAAA,SAAAC,GACA,IAAAC,EAAAD,GAAA,CAEA,IADA,IAAAE,KACArB,EAAA,EAAmBA,EAAAJ,UAAAK,OAAsBD,IACzCqB,EAAAC,KAAAC,EAAA3B,UAAAI,KAEA,OAAAqB,EAAAG,KAAA,KAGAxB,EAAA,EAmBA,IAnBA,IACAyB,EAAA7B,UACA8B,EAAAD,EAAAxB,OACA0B,EAAAtB,OAAAc,GAAAS,QAAAX,EAAA,SAAAY,GACA,UAAAA,EAAA,UACA,GAAA7B,GAAA0B,EAAA,OAAAG,EACA,OAAAA,GACA,gBAAAxB,OAAAoB,EAAAzB,MACA,gBAAAI,OAAAqB,EAAAzB,MACA,SACA,IACA,OAAA8B,KAAAC,UAAAN,EAAAzB,MACS,MAAAgC,GACT,mBAEA,QACA,OAAAH,KAGAA,EAAAJ,EAAAzB,GAAuBA,EAAA0B,EAASG,EAAAJ,IAAAzB,GAChCiC,EAAAJ,KAAAK,EAAAL,GACAF,GAAA,IAAAE,EAEAF,GAAA,IAAAJ,EAAAM,GAGA,OAAAF,GAOAf,EAAAuB,UAAA,SAAAC,EAAAC,GAEA,GAAAC,EAAAvB,EAAAC,SACA,kBACA,OAAAJ,EAAAuB,UAAAC,EAAAC,GAAAE,MAAAC,KAAA5C,YAIA,QAAAoB,EAAAyB,cACA,OAAAL,EAGA,IAAAM,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAA1B,EAAA2B,iBACA,UAAArC,MAAA+B,GACOrB,EAAA4B,iBACPC,QAAAC,MAAAT,GAEAQ,QAAAE,MAAAV,GAEAK,GAAA,EAEA,OAAAN,EAAAG,MAAAC,KAAA5C,aAOA,IACAoD,EADAC,KA6BA,SAAA1B,EAAA2B,EAAAC,GAEA,IAAAC,GACAC,QACAC,QAAAC,GAkBA,OAfA3D,UAAAK,QAAA,IAAAmD,EAAAI,MAAA5D,UAAA,IACAA,UAAAK,QAAA,IAAAmD,EAAAK,OAAA7D,UAAA,IACA8D,EAAAP,GAEAC,EAAAO,WAAAR,EACGA,GAEHvC,EAAAgD,QAAAR,EAAAD,GAGAb,EAAAc,EAAAO,cAAAP,EAAAO,YAAA,GACArB,EAAAc,EAAAI,SAAAJ,EAAAI,MAAA,GACAlB,EAAAc,EAAAK,UAAAL,EAAAK,QAAA,GACAnB,EAAAc,EAAAS,iBAAAT,EAAAS,eAAA,GACAT,EAAAK,SAAAL,EAAAE,QAAAQ,GACAC,EAAAX,EAAAF,EAAAE,EAAAI,OAoCA,SAAAM,EAAAnC,EAAAqC,GACA,IAAAC,EAAA1C,EAAA2C,OAAAF,GAEA,OAAAC,EACA,KAAA1C,EAAAkC,OAAAQ,GAAA,OAAAtC,EACA,KAAAJ,EAAAkC,OAAAQ,GAAA,OAEAtC,EAKA,SAAA4B,EAAA5B,EAAAqC,GACA,OAAArC,EAeA,SAAAoC,EAAAX,EAAAjD,EAAAgE,GAGA,GAAAf,EAAAS,eACA1D,GACAiE,EAAAjE,EAAAoB,UAEApB,EAAAoB,UAAAX,EAAAW,WAEApB,EAAAkE,aAAAlE,EAAAkE,YAAAC,YAAAnE,GAAA,CACA,IAAAoE,EAAApE,EAAAoB,QAAA4C,EAAAf,GAIA,OAHAhC,EAAAmD,KACAA,EAAAR,EAAAX,EAAAmB,EAAAJ,IAEAI,EAIA,IAAAC,EA+FA,SAAApB,EAAAjD,GACA,GAAAmC,EAAAnC,GACA,OAAAiD,EAAAE,QAAA,yBACA,GAAAlC,EAAAjB,GAAA,CACA,IAAAsE,EAAA,IAAA3C,KAAAC,UAAA5B,GAAAyB,QAAA,aACAA,QAAA,YACAA,QAAA,gBACA,OAAAwB,EAAAE,QAAAmB,EAAA,UAEA,GAAAC,EAAAvE,GACA,OAAAiD,EAAAE,QAAA,GAAAnD,EAAA,UACA,GAAAuD,EAAAvD,GACA,OAAAiD,EAAAE,QAAA,GAAAnD,EAAA,WAEA,GAAA8B,EAAA9B,GACA,OAAAiD,EAAAE,QAAA,eA9GAqB,CAAAvB,EAAAjD,GACA,GAAAqE,EACA,OAAAA,EAIA,IAAAI,EAAAC,OAAAD,KAAAzE,GACA2E,EApCA,SAAAC,GACA,IAAAC,KAMA,OAJAD,EAAAE,QAAA,SAAAC,EAAAC,GACAH,EAAAE,IAAA,IAGAF,EA6BAI,CAAAR,GAQA,GANAxB,EAAAO,aACAiB,EAAAC,OAAAQ,oBAAAlF,IAKAmF,EAAAnF,KACAyE,EAAAW,QAAA,eAAAX,EAAAW,QAAA,mBACA,OAAAC,EAAArF,GAIA,OAAAyE,EAAA3E,OAAA,CACA,GAAAmE,EAAAjE,GAAA,CACA,IAAAsF,EAAAtF,EAAAsF,KAAA,KAAAtF,EAAAsF,KAAA,GACA,OAAArC,EAAAE,QAAA,YAAAmC,EAAA,eAEA,GAAAC,EAAAvF,GACA,OAAAiD,EAAAE,QAAAqC,OAAArB,UAAAsB,SAAAjG,KAAAQ,GAAA,UAEA,GAAA0F,EAAA1F,GACA,OAAAiD,EAAAE,QAAAwC,KAAAxB,UAAAsB,SAAAjG,KAAAQ,GAAA,QAEA,GAAAmF,EAAAnF,GACA,OAAAqF,EAAArF,GAIA,IA2CA4F,EA3CAC,EAAA,GAAAjB,GAAA,EAAAkB,GAAA,IAA4C,MAG5CC,EAAA/F,KACA4E,GAAA,EACAkB,GAAA,UAIA7B,EAAAjE,MAEA6F,EAAA,cADA7F,EAAAsF,KAAA,KAAAtF,EAAAsF,KAAA,IACA,KAkBA,OAdAC,EAAAvF,KACA6F,EAAA,IAAAL,OAAArB,UAAAsB,SAAAjG,KAAAQ,IAIA0F,EAAA1F,KACA6F,EAAA,IAAAF,KAAAxB,UAAA6B,YAAAxG,KAAAQ,IAIAmF,EAAAnF,KACA6F,EAAA,IAAAR,EAAArF,IAGA,IAAAyE,EAAA3E,QAAA8E,GAAA,GAAA5E,EAAAF,OAIAkE,EAAA,EACAuB,EAAAvF,GACAiD,EAAAE,QAAAqC,OAAArB,UAAAsB,SAAAjG,KAAAQ,GAAA,UAEAiD,EAAAE,QAAA,uBAIAF,EAAAC,KAAA/B,KAAAnB,GAIA4F,EADAhB,EAsCA,SAAA3B,EAAAjD,EAAAgE,EAAAW,EAAAF,GAEA,IADA,IAAAmB,KACA/F,EAAA,EAAAoG,EAAAjG,EAAAF,OAAmCD,EAAAoG,IAAOpG,EAC1CqG,EAAAlG,EAAAE,OAAAL,IACA+F,EAAAzE,KAAAgF,EAAAlD,EAAAjD,EAAAgE,EAAAW,EACAzE,OAAAL,IAAA,IAEA+F,EAAAzE,KAAA,IASA,OANAsD,EAAAK,QAAA,SAAAsB,GACAA,EAAAC,MAAA,UACAT,EAAAzE,KAAAgF,EAAAlD,EAAAjD,EAAAgE,EAAAW,EACAyB,GAAA,MAGAR,EArDAU,CAAArD,EAAAjD,EAAAgE,EAAAW,EAAAF,GAEAA,EAAA8B,IAAA,SAAAH,GACA,OAAAD,EAAAlD,EAAAjD,EAAAgE,EAAAW,EAAAyB,EAAAxB,KAIA3B,EAAAC,KAAAsD,MA6GA,SAAAZ,EAAAC,EAAAC,GAQA,GANAF,EAAAa,OAAA,SAAAC,EAAAC,GAGA,OAFAC,EACAD,EAAAvB,QAAA,UAAAwB,EACAF,EAAAC,EAAAlF,QAAA,sBAAA3B,OAAA,GACG,GAEH,GACA,OAAAgG,EAAA,IACA,KAAAD,EAAA,GAAAA,EAAA,OACA,IACAD,EAAAvE,KAAA,SACA,IACAyE,EAAA,GAGA,OAAAA,EAAA,GAAAD,EAAA,IAAAD,EAAAvE,KAAA,UAAAyE,EAAA,GA5HAe,CAAAjB,EAAAC,EAAAC,IAxBAA,EAAA,GAAAD,EAAAC,EAAA,GA+CA,SAAAT,EAAArF,GACA,UAAAG,MAAAgE,UAAAsB,SAAAjG,KAAAQ,GAAA,IAwBA,SAAAmG,EAAAlD,EAAAjD,EAAAgE,EAAAW,EAAAyB,EAAAxB,GACA,IAAAU,EAAA9D,EAAAsF,EAsCA,IArCAA,EAAApC,OAAAqC,yBAAA/G,EAAAoG,KAAyDpG,QAAAoG,KACzDY,IAEAxF,EADAsF,EAAAG,IACAhE,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGA2D,EAAAG,MACAzF,EAAAyB,EAAAE,QAAA,uBAGA+C,EAAAvB,EAAAyB,KACAd,EAAA,IAAAc,EAAA,KAEA5E,IACAyB,EAAAC,KAAAkC,QAAA0B,EAAA9G,OAAA,GAEAwB,EADAM,EAAAkC,GACAJ,EAAAX,EAAA6D,EAAA9G,MAAA,MAEA4D,EAAAX,EAAA6D,EAAA9G,MAAAgE,EAAA,IAEAoB,QAAA,WAEA5D,EADAoD,EACApD,EAAA0F,MAAA,MAAAX,IAAA,SAAAY,GACA,WAAAA,IACW9F,KAAA,MAAA+F,OAAA,GAEX,KAAA5F,EAAA0F,MAAA,MAAAX,IAAA,SAAAY,GACA,YAAAA,IACW9F,KAAA,OAIXG,EAAAyB,EAAAE,QAAA,yBAGAhB,EAAAmD,GAAA,CACA,GAAAV,GAAAwB,EAAAC,MAAA,SACA,OAAA7E,GAEA8D,EAAA3D,KAAAC,UAAA,GAAAwE,IACAC,MAAA,iCACAf,IAAA8B,OAAA,EAAA9B,EAAAxF,OAAA,GACAwF,EAAArC,EAAAE,QAAAmC,EAAA,UAEAA,IAAA7D,QAAA,YACAA,QAAA,YACAA,QAAA,gBACA6D,EAAArC,EAAAE,QAAAmC,EAAA,WAIA,OAAAA,EAAA,KAAA9D,EA2BA,SAAAuE,EAAAsB,GACA,OAAAC,MAAAvB,QAAAsB,GAIA,SAAA9D,EAAAgE,GACA,wBAAAA,EAIA,SAAAzF,EAAAyF,GACA,cAAAA,EASA,SAAAhD,EAAAgD,GACA,uBAAAA,EAIA,SAAAtG,EAAAsG,GACA,uBAAAA,EASA,SAAApF,EAAAoF,GACA,gBAAAA,EAIA,SAAAhC,EAAAiC,GACA,OAAAzF,EAAAyF,IAAA,oBAAAC,EAAAD,GAIA,SAAAzF,EAAAwF,GACA,uBAAAA,GAAA,OAAAA,EAIA,SAAA7B,EAAAgC,GACA,OAAA3F,EAAA2F,IAAA,kBAAAD,EAAAC,GAIA,SAAAvC,EAAA9E,GACA,OAAA0B,EAAA1B,KACA,mBAAAoH,EAAApH,iBAAAF,OAIA,SAAA8D,EAAAsD,GACA,yBAAAA,EAgBA,SAAAE,EAAAE,GACA,OAAAjD,OAAAP,UAAAsB,SAAAjG,KAAAmI,GAIA,SAAAC,EAAAC,GACA,OAAAA,EAAA,OAAAA,EAAApC,SAAA,IAAAoC,EAAApC,SAAA,IApbAhF,EAAAqH,SAAA,SAAAb,GAIA,GAHA9E,EAAAU,KACAA,EAAAhC,EAAAkH,IAAAC,YAAA,IACAf,IAAAgB,eACAnF,EAAAmE,GACA,OAAAzB,OAAA,MAAAyB,EAAA,WAAAiB,KAAArF,GAAA,CACA,IAAAsF,EAAAtH,EAAAsH,IACArF,EAAAmE,GAAA,WACA,IAAA/E,EAAAzB,EAAAM,OAAAqB,MAAA3B,EAAAhB,WACAiD,QAAAE,MAAA,YAAAqE,EAAAkB,EAAAjG,SAGAY,EAAAmE,GAAA,aAGA,OAAAnE,EAAAmE,IAoCAxG,EAAAW,UAIAA,EAAAkC,QACA8E,MAAA,MACAC,QAAA,MACAC,WAAA,MACAC,SAAA,MACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,SAAA,OACAC,KAAA,OACAC,QAAA,QAIA5H,EAAA2C,QACAkF,QAAA,OACAC,OAAA,SACAC,QAAA,SACAC,UAAA,OACAC,KAAA,OACAC,OAAA,QACAC,KAAA,UAEAC,OAAA,OAkRA/I,EAAAsF,UAKAtF,EAAA8C,YAKA9C,EAAAqB,SAKArB,EAAAgJ,kBAHA,SAAAlC,GACA,aAAAA,GAOA9G,EAAA8D,WAKA9D,EAAAQ,WAKAR,EAAAiJ,SAHA,SAAAnC,GACA,uBAAAA,GAOA9G,EAAA0B,cAKA1B,EAAA8E,WAKA9E,EAAAsB,WAKAtB,EAAAiF,SAMAjF,EAAA0E,UAKA1E,EAAAwD,aAUAxD,EAAAkJ,YARA,SAAApC,GACA,cAAAA,GACA,kBAAAA,GACA,iBAAAA,GACA,iBAAAA,GACA,iBAAAA,QACA,IAAAA,GAIA9G,EAAAmJ,SAAAC,EAAA,MAYA,IAAAC,GAAA,sDACA,mBA6CA,SAAA5D,EAAAnD,EAAA3C,GACA,OAAAsE,OAAAP,UAAA+B,eAAA1G,KAAAuD,EAAA3C,GAjCAK,EAAAsJ,IAAA,WAVA,IACArC,EACAsC,EASAtH,QAAAqH,IAAA,WAVArC,EAAA,IAAA/B,KACAqE,GAAApC,EAAAF,EAAAuC,YACArC,EAAAF,EAAAwC,cACAtC,EAAAF,EAAAyC,eAAA9I,KAAA,MACAqG,EAAA0C,UAAAN,EAAApC,EAAA2C,YAAAL,GAAA3I,KAAA,MAMAZ,EAAAM,OAAAqB,MAAA3B,EAAAhB,aAiBAgB,EAAA6J,SAAAT,EAAA,MAEApJ,EAAAgD,QAAA,SAAA8G,EAAAC,GAEA,IAAAA,IAAAzI,EAAAyI,GAAA,OAAAD,EAIA,IAFA,IAAA9F,EAAAC,OAAAD,KAAA+F,GACA3K,EAAA4E,EAAA3E,OACAD,KACA0K,EAAA9F,EAAA5E,IAAA2K,EAAA/F,EAAA5E,IAEA,OAAA0K,gDCpkBA,mBAAA7F,OAAA+F,OAEAjK,EAAAC,QAAA,SAAAiK,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAAvG,UAAAO,OAAA+F,OAAAE,EAAAxG,WACAD,aACAlE,MAAA0K,EACAG,YAAA,EACAC,UAAA,EACAC,cAAA,MAMAvK,EAAAC,QAAA,SAAAiK,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAK,EAAA,aACAA,EAAA7G,UAAAwG,EAAAxG,UACAuG,EAAAvG,UAAA,IAAA6G,EACAN,EAAAvG,UAAAD,YAAAwG,uBCpBAlK,EAAAC,QAAA,SAAA8G,GACA,OAAAA,GAAA,iBAAAA,GACA,mBAAAA,EAAA0D,MACA,mBAAA1D,EAAA2D,MACA,mBAAA3D,EAAA4D,iCCJA,IAAAC,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KASA,SAAAyB,KAEAA,EAAAnH,UAAAkC,MAAA,SAAAkF,GAeA,IAAA1L,EAAA2L,EACAC,EAIAC,EAHAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAIAC,EAAAP,EAAAQ,YACAC,EAAAT,EAAAU,UAEAC,EACA,IAAArM,EAAA,EAAeA,EAAAmM,EAAanM,IAAA,CAC5B,OAAAiM,EAAAjM,GAAA,CACAsM,EACA,IAAAV,EAAA,EAAwBA,EAAApJ,KAAA+J,gBAAAtM,OAAoC2L,IAAA,CAC5D,IAAAY,EAAAhK,KAAA+J,gBAAAX,GAEA,KAAAO,EAAAnM,EAAAwM,EAAAvM,QAAA,CAGA,IAAA0L,EAAA,EAAuBA,EAAAa,EAAAvM,OAAgB0L,IACvC,GAAAa,EAAAb,IAAAM,EAAAjM,EAAA2L,GACA,SAAAW,EAGAR,IACA9L,GAAAwM,EAAAvM,OAAA,EACA,SAAAoM,GAGAN,IAIA,IAAAE,EAAAjM,IAAA,IAAAiM,EAAAjM,IACAgM,IAIA,UAAAF,EACA,MAQAD,GAAA,IAAAC,EAAA,IAAAC,IAAAD,EAAAC,GAKAD,EAAAE,EAAA,IACAH,GAAA,OAAAC,EAAAE,KAEAH,GAAA,WAAAL,EAAAE,EAAAlJ,KAAAqJ,KAGAlL,EAAAC,QAAA6L,YAAA,WACAjK,KAAAiD,KAAA,WACA,qBAEAjD,KAAA+J,kBACA,cACA,cACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YAGAhB,EAAAd,SAAA9J,EAAAC,QAAA6L,YAAAhB,GAIA9K,EAAAC,QAAA8L,YAAA,WACAlK,KAAAiD,KAAA,WACA,qBAEAjD,KAAA+J,kBACA,eAGAhB,EAAAd,SAAA9J,EAAAC,QAAA8L,YAAAjB,GAIA9K,EAAAC,QAAA+L,YAAA,WACAnK,KAAAiD,KAAA,WACA,qBAEAjD,KAAA+J,kBACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,QACA,SAGAhB,EAAAd,SAAA9J,EAAAC,QAAA+L,YAAAlB,yBC5IA,IAAAF,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,KAOA,SAAA4C,EAAAC,EAAAC,GAGAtK,KAAAuK,UAAA,EACAvK,KAAAwK,MAAA,EAEAxK,KAAAyK,UAAAJ,EACArK,KAAA0K,QAAAJ,EAEAtK,KAAA2K,WAAA,EACA3K,KAAA4K,SAAA,EAEA5K,KAAA6K,UAKA7K,KAAA8K,OAAA,SAAAC,EAAApN,GACA,IAAAqN,EAAA,EAUA,OARAD,EAAAC,EAAA,KAAArN,IAAAqN,GAAA,IACAD,EAAAC,EAAA,KAAArN,IAAAqN,GAAA,IACAD,EAAAC,EAAA,IAAArN,IAAAqN,GAAA,GACAD,EAAAC,EAAA,IAAArN,IAAAqN,GAAA,GACAD,EAAAC,EAAA,IAAArN,IAAAqN,GAAA,GACAD,EAAAC,EAAA,IAAArN,IAAAqN,GAAA,GACAD,EAAAC,GAAArN,IAAAqN,GAAA,GAEAA,EAAA,GAAAD,EAAAC,IAAArN,GACA,EAEAqN,GAGAhL,KAAAiL,OAAA,SAAAC,GACAlL,KAAA2K,YAAA,EACA3K,KAAA8K,OAAA9K,KAAAyK,UAAAS,IAAA,IACAlL,KAAA4K,UAAA,IAIA5K,KAAAmL,QAAA,SAAAC,GACApL,KAAAwK,OAAAxK,KAAAwK,OAAA,QAAAY,GAzCA,SA0CApL,KAAAiL,OAAAjL,KAAAwK,QAGAxK,KAAAqL,SAAA,SAAAnC,GACA,OAAAlJ,KAAAuK,WAAArB,EAAAU,WACA,EAEA,IAAAV,EAAAQ,YAAA1J,KAAAuK,cAGAvK,KAAAsL,MAAA,SAAApC,EAAAqC,GACA,IAAAH,EAAAI,GAAA,EAGA,IAFAxL,KAAA6K,UAAAU,GAEAH,EAAApL,KAAAqL,SAAAnC,KAAA,IACA,IAAAuC,EAAAzL,KAAA0K,QAAAU,GAGA,GAAAK,IACAA,GAAAzL,KAAA6K,WAAAW,GACAxL,KAAAmL,QAAAM,GAGAD,EAAAC,GAAAzL,KAAA6K,WAKA7K,KAAAmL,QAAAnL,KAAA6K,WAEA,IAAAa,EAAA1L,KAAA4K,SAAA5K,KAAA2K,WAIA,OAAAe,EAAA,IACA,GAEAC,KAAAC,MAAA,IAAAF,IAIA,SAAAG,EAAAC,EAAAC,GACA/L,KAAAgM,MAAAF,EACA9L,KAAAiM,QAAAF,EAGA,SAAAG,KACAA,EAAApK,UAAA+I,UAAA,GACAqB,EAAApK,UAAAqK,OAAA,aACAD,EAAApK,UAAA4I,QAAA,aACAwB,EAAApK,UAAAkC,MAAA,SAAAkF,GAEA,IAAAiD,EAAAnM,KAAAmM,SAGA,KAFAlH,MAAAvB,QAAAyI,MAAA,aAAAN,GAKA,OADAO,EADA,IAAAhC,EAAA+B,EAAAnM,KAAA0K,WACAY,MAAApC,EAAAlJ,KAAA6K,aACA,WAAA7B,EAAAE,EAAAlJ,KAAAoM,GAMA,IAHA,IAAAC,GAAA,EACAC,EAAA,KAEA9O,EAAA2O,EAAA1O,OAAA,EAAiCD,GAAA,EAAQA,IAAA,CACzC,IAGA4O,EAHAG,EAAAJ,EAAA3O,IAGA4O,EADA,IAAAhC,EAAAmC,EAAAN,QAAAjM,KAAA0K,WACAY,MAAApC,EAAAlJ,KAAA6K,YACAwB,IACAA,EAAAD,EACAE,EAAAC,EAAAP,OAIA,IAAA/I,EAAAjD,KAAAiD,KAAAiG,GACA,OAAAmD,GAAA,WAAArD,EAAAE,EAAAlJ,KAAAqM,EAAApJ,EAAAqJ,IAIAnO,EAAAC,QAAAoO,WAAA,WACAxM,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBACA,yBACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,+BACA,kCAIA1K,KAAAmM,OAAA,WACA,OACA,IAAAN,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,mEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,oEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,sEAKA7L,KAAAiD,KAAA,SAAAiG,GACA,OAAAA,KAAAuD,SAAA,8BAGA1D,EAAAd,SAAA9J,EAAAC,QAAAoO,WAAAN,GAGA/N,EAAAC,QAAAsO,WAAA,WACA1M,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,4BACA,8BACA,6BACA,8BACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,+BACA,iCAIA1K,KAAAmM,OAAA,WACA,OACA,IAAAN,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,yEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,oEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,mEAEA,IAAAA,EAAA,MACA,gEACA,gEACA,gEACA,gEACA,+DACA,gEACA,gEACA,sEAKA7L,KAAAiD,KAAA,SAAAiG,GACA,OAAAA,KAAAuD,SAAA,8BAGA1D,EAAAd,SAAA9J,EAAAC,QAAAsO,WAAAR,GAGA/N,EAAAC,QAAAuO,WAAA,WACA3M,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,+BACA,+BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,+BACA,iCAIA1K,KAAAmM,OAAA,WACA,OACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,yEAIAnM,KAAAiD,KAAA,SAAAiG,GACA,oBAGAlJ,KAAA4M,SAAA,WACA,aAGA7D,EAAAd,SAAA9J,EAAAC,QAAAuO,WAAAT,GAGA/N,EAAAC,QAAAyO,WAAA,WACA7M,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BACA,gCACA,gCACA,2BACA,gCACA,2BACA,wBACA,0BAIA1K,KAAAmM,OAAA,WACA,OACA,gEACA,wEACA,wEACA,wEACA,wEACA,wEACA,wEACA,0EAIAnM,KAAAiD,KAAA,SAAAiG,GACA,oBAGAlJ,KAAA4M,SAAA,WACA,aAGA7D,EAAAd,SAAA9J,EAAAC,QAAAyO,WAAAX,GAGA/N,EAAAC,QAAA0O,WAAA,WACA9M,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,0BACA,wBACA,yBACA,8BACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,gCACA,iCAIA1K,KAAAmM,OAAA,WACA,OACA,gEACA,gEACA,uEACA,wEACA,wEACA,wEACA,wEACA,yEAIAnM,KAAAiD,KAAA,SAAAiG,GACA,OAAAA,KAAAuD,SAAA,6BAGAzM,KAAA4M,SAAA,WACA,aAGA7D,EAAAd,SAAA9J,EAAAC,QAAA0O,WAAAZ,GAEA/N,EAAAC,QAAA2O,WAAA,WAEA/M,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,gCACA,gCACA,gCACA,6BAIA1K,KAAAmM,OAAA,WACA,OACA,IAAAN,EAAA,MACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,0EAEA,IAAAA,EAAA,MACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,4EAKA7L,KAAAiD,KAAA,SAAAiG,GACA,OAAAA,KAAAuD,SAAA,6BAGAzM,KAAA4M,SAAA,WACA,aAIA7D,EAAAd,SAAA9J,EAAAC,QAAA2O,WAAAb,GAGA/N,EAAAC,QAAA4O,WAAA,WACAhN,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBACA,yBACA,gCACA,gCACA,+BACA,gCACA,gCACA,gCACA,+BACA,kCAIA1K,KAAAmM,OAAA,WACA,OACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,sEAIAnM,KAAAiD,KAAA,SAAAiG,GACA,OAAAA,KAAAuD,SAAA,6BAGAzM,KAAA4M,SAAA,WACA,aAGA7D,EAAAd,SAAA9J,EAAAC,QAAA4O,WAAAd,GAGA/N,EAAAC,QAAA6O,aAAA,WACAjN,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,2BACA,6BACA,yBACA,6BACA,4BACA,2BACA,4BACA,8BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,kCAIA1K,KAAAmM,OAAA,WACA,OACA,gEACA,gEACA,sEACA,wEACA,wEACA,wEACA,wEACA,0EAIAnM,KAAAiD,KAAA,SAAAiG,GACA,sBAGAlJ,KAAA4M,SAAA,WACA,aAGA7D,EAAAd,SAAA9J,EAAAC,QAAA6O,aAAAf,GAGA/N,EAAAC,QAAA8O,aAAA,WACAlN,KAAA0K,QAAA,WACA,OACA,wBACA,wBACA,wBACA,wBACA,uBACA,wBACA,wBACA,wBACA,4BACA,gCACA,gCACA,2BACA,4BACA,gCACA,gCACA,2BACA,0BACA,8BACA,yBACA,4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","file":"vendors~app~comingSoonDemo~game~playground~test-ab0810e0fe2be132fb25.js","sourcesContent":["\nmodule.exports = DataStructure\n\nfunction DataStructure() {\n\n  var schemas = [].slice.call(arguments)\n\n  function Constructor(object) {\n    Constructor.validate(object)\n    return object\n  }\n\n  Constructor.validate = function(object) {\n    for (var i = 0; i < schemas.length; i ++) {\n      validate(schemas[i], object)\n    }\n  }\n\n  return Constructor\n\n}\n\nDataStructure.maybe = function maybe(schema) {\n  function MaybeValidator(object) {\n    MaybeValidator.validate(object)\n    return object\n  }\n  MaybeValidator.validate = function(value) {\n    if (value === null || value === undefined) return\n    validate(schema, value)\n  }\n  return MaybeValidator\n}\n\nfunction validate(schema, value) {\n  if (schema === Number) schema = 'number'\n  if (schema === String) schema = 'string'\n  if (typeof schema === 'string') {\n    if (typeof value !== schema) throw new Error('should be a ' + schema)\n  } else if (typeof schema === 'function') {\n    if (typeof schema.validate === 'function') {\n      schema.validate(value)\n    } else if (!(value instanceof schema)) {\n      throw new Error('should be an instance of ' + schema)\n    }\n  } else if (typeof schema === 'object') {\n    if (!value) throw new Error('should be an object')\n    validateObject(schema, value)\n  } else {\n    throw new Error('invalid schema')\n  }\n}\n\nfunction validateObject(schema, object) {\n  for (var prop in schema) {\n    if (!(prop in object)) {\n      throw new Error('missing property: \"' + prop + '\"')\n    }\n    try {\n      validate(schema[prop], object[prop])\n    } catch (e) {\n      throw new Error('error in property \"' + prop + '\": ' + e.message)\n    }\n  }\n}\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","var util = require('util'),\n  Match = require ('../match');\n\n\n/**\n * This is a superclass for the individual detectors for\n * each of the detectable members of the ISO 2022 family\n * of encodings.\n */\n\nfunction ISO_2022() {}\n\nISO_2022.prototype.match = function(det) {\n\n  /**\n   * Matching function shared among the 2022 detectors JP, CN and KR\n   * Counts up the number of legal an unrecognized escape sequences in\n   * the sample of text, and computes a score based on the total number &\n   * the proportion that fit the encoding.\n   *\n   *\n   * @param text the byte buffer containing text to analyse\n   * @param textLen  the size of the text in the byte.\n   * @param escapeSequences the byte escape sequences to test for.\n   * @return match quality, in the range of 0-100.\n   */\n\n  var i, j;\n  var escN;\n  var hits   = 0;\n  var misses = 0;\n  var shifts = 0;\n  var quality;\n\n  // TODO: refactor me\n  var text = det.fInputBytes;\n  var textLen = det.fInputLen;\n\n  scanInput:\n    for (i = 0; i < textLen; i++) {\n      if (text[i] == 0x1b) {\n        checkEscapes:\n          for (escN = 0; escN < this.escapeSequences.length; escN++) {\n            var seq = this.escapeSequences[escN];\n\n            if ((textLen - i) < seq.length)\n              continue checkEscapes;\n\n            for (j = 1; j < seq.length; j++)\n              if (seq[j] != text[i + j])\n                continue checkEscapes;\n\n\n            hits++;\n            i += seq.length - 1;\n            continue scanInput;\n          }\n\n          misses++;\n      }\n\n      // Shift in/out\n      if (text[i] == 0x0e || text[i] == 0x0f)\n        shifts++;\n\n    }\n\n  if (hits == 0)\n    return null;\n\n  //\n  // Initial quality is based on relative proportion of recongized vs.\n  //   unrecognized escape sequences.\n  //   All good:  quality = 100;\n  //   half or less good: quality = 0;\n  //   linear inbetween.\n  quality = (100 * hits - 100 * misses) / (hits + misses);\n\n  // Back off quality if there were too few escape sequences seen.\n  //   Include shifts in this computation, so that KR does not get penalized\n  //   for having only a single Escape sequence, but many shifts.\n  if (hits + shifts < 5)\n    quality -= (5 - (hits + shifts)) * 10;\n\n  return quality <= 0 ? null : new Match(det, this, quality);\n};\n\nmodule.exports.ISO_2022_JP = function() {\n  this.name = function() {\n    return 'ISO-2022-JP';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x28, 0x43 ],   // KS X 1001:1992\n    [ 0x1b, 0x24, 0x28, 0x44 ],   // JIS X 212-1990\n    [ 0x1b, 0x24, 0x40 ],         // JIS C 6226-1978\n    [ 0x1b, 0x24, 0x41 ],         // GB 2312-80\n    [ 0x1b, 0x24, 0x42 ],         // JIS X 208-1983\n    [ 0x1b, 0x26, 0x40 ],         // JIS X 208 1990, 1997\n    [ 0x1b, 0x28, 0x42 ],         // ASCII\n    [ 0x1b, 0x28, 0x48 ],         // JIS-Roman\n    [ 0x1b, 0x28, 0x49 ],         // Half-width katakana\n    [ 0x1b, 0x28, 0x4a ],         // JIS-Roman\n    [ 0x1b, 0x2e, 0x41 ],         // ISO 8859-1\n    [ 0x1b, 0x2e, 0x46 ]          // ISO 8859-7\n  ];\n};\nutil.inherits(module.exports.ISO_2022_JP, ISO_2022);\n\n\n\nmodule.exports.ISO_2022_KR = function() {\n  this.name = function() {\n    return 'ISO-2022-KR';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x29, 0x43 ]\n  ];\n};\nutil.inherits(module.exports.ISO_2022_KR, ISO_2022);\n\n\n\nmodule.exports.ISO_2022_CN = function() {\n  this.name = function() {\n    return 'ISO-2022-CN';\n  };\n  this.escapeSequences = [\n    [ 0x1b, 0x24, 0x29, 0x41 ],   // GB 2312-80\n    [ 0x1b, 0x24, 0x29, 0x47 ],   // CNS 11643-1992 Plane 1\n    [ 0x1b, 0x24, 0x2A, 0x48 ],   // CNS 11643-1992 Plane 2\n    [ 0x1b, 0x24, 0x29, 0x45 ],   // ISO-IR-165\n    [ 0x1b, 0x24, 0x2B, 0x49 ],   // CNS 11643-1992 Plane 3\n    [ 0x1b, 0x24, 0x2B, 0x4A ],   // CNS 11643-1992 Plane 4\n    [ 0x1b, 0x24, 0x2B, 0x4B ],   // CNS 11643-1992 Plane 5\n    [ 0x1b, 0x24, 0x2B, 0x4C ],   // CNS 11643-1992 Plane 6\n    [ 0x1b, 0x24, 0x2B, 0x4D ],   // CNS 11643-1992 Plane 7\n    [ 0x1b, 0x4e ],               // SS2\n    [ 0x1b, 0x4f ]                // SS3\n  ];\n};\nutil.inherits(module.exports.ISO_2022_CN, ISO_2022);\n","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * This class recognizes single-byte encodings. Because the encoding scheme is so\n * simple, language statistics are used to do the matching.\n */\n\nfunction NGramParser(theNgramList, theByteMap) {\n  var N_GRAM_MASK = 0xFFFFFF;\n\n  this.byteIndex = 0;\n  this.ngram = 0;\n\n  this.ngramList = theNgramList;\n  this.byteMap = theByteMap;\n\n  this.ngramCount = 0;\n  this.hitCount = 0;\n\n  this.spaceChar;\n\n  /*\n   * Binary search for value in table, which must have exactly 64 entries.\n   */\n  this.search = function(table, value) {\n    var index = 0;\n\n    if (table[index + 32] <= value) index += 32;\n    if (table[index + 16] <= value) index += 16;\n    if (table[index + 8]  <= value) index += 8;\n    if (table[index + 4]  <= value) index += 4;\n    if (table[index + 2]  <= value) index += 2;\n    if (table[index + 1]  <= value) index += 1;\n    if (table[index]      > value)  index -= 1;\n\n    if (index < 0 || table[index] != value)\n      return -1;\n\n    return index;\n  };\n\n  this.lookup = function(thisNgram) {\n    this.ngramCount += 1;\n    if (this.search(this.ngramList, thisNgram) >= 0) {\n      this.hitCount += 1;\n    }\n  };\n\n  this.addByte = function(b) {\n    this.ngram = ((this.ngram << 8) + (b & 0xFF)) & N_GRAM_MASK;\n    this.lookup(this.ngram);\n  }\n\n  this.nextByte = function(det) {\n    if (this.byteIndex >= det.fInputLen)\n      return -1;\n\n    return det.fInputBytes[this.byteIndex++] & 0xFF;\n  }\n\n  this.parse = function(det, spaceCh) {\n    var b, ignoreSpace = false;\n    this.spaceChar = spaceCh;\n\n    while ((b = this.nextByte(det)) >= 0) {\n      var mb = this.byteMap[b];\n\n      // TODO: 0x20 might not be a space in all character sets...\n      if (mb != 0) {\n        if (!(mb == this.spaceChar && ignoreSpace)) {\n          this.addByte(mb);\n        }\n\n        ignoreSpace = (mb == this.spaceChar);\n      }\n    }\n\n    // TODO: Is this OK? The buffer could have ended in the middle of a word...\n    this.addByte(this.spaceChar);\n\n    var rawPercent = this.hitCount / this.ngramCount;\n\n    // TODO - This is a bit of a hack to take care of a case\n    // were we were getting a confidence of 135...\n    if (rawPercent > 0.33)\n      return 98;\n\n    return Math.floor(rawPercent * 300.0);\n  };\n};\n\nfunction NGramsPlusLang(la, ng) {\n  this.fLang = la;\n  this.fNGrams = ng;\n};\n\nfunction sbcs() {};\nsbcs.prototype.spaceChar = 0x20;\nsbcs.prototype.ngrams = function() {};\nsbcs.prototype.byteMap = function() {};\nsbcs.prototype.match = function(det) {\n\n  var ngrams = this.ngrams();\n  var multiple = (Array.isArray(ngrams) && ngrams[0] instanceof NGramsPlusLang);\n\n  if (!multiple) {\n    var parser = new NGramParser(ngrams, this.byteMap());\n    var confidence = parser.parse(det, this.spaceChar);\n    return confidence <= 0 ? null : new Match(det, this, confidence);\n  }\n\n  var bestConfidenceSoFar = -1;\n  var lang = null;\n\n  for (var i = ngrams.length - 1; i >= 0; i--) {\n    var ngl = ngrams[i];\n\n    var parser = new NGramParser(ngl.fNGrams, this.byteMap());\n    var confidence = parser.parse(det, this.spaceChar);\n    if (confidence > bestConfidenceSoFar) {\n      bestConfidenceSoFar = confidence;\n      lang = ngl.fLang;\n    }\n  }\n\n  var name = this.name(det);\n  return bestConfidenceSoFar <= 0 ? null : new Match(det, this, bestConfidenceSoFar, name, lang);\n};\n\n\nmodule.exports.ISO_8859_1 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('da', [\n        0x206166, 0x206174, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n        0x206D65, 0x206F67, 0x2070E5, 0x207369, 0x207374, 0x207469, 0x207669, 0x616620,\n        0x616E20, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646572, 0x646574,\n        0x652073, 0x656420, 0x656465, 0x656E20, 0x656E64, 0x657220, 0x657265, 0x657320,\n        0x657420, 0x666F72, 0x676520, 0x67656E, 0x676572, 0x696765, 0x696C20, 0x696E67,\n        0x6B6520, 0x6B6B65, 0x6C6572, 0x6C6967, 0x6C6C65, 0x6D6564, 0x6E6465, 0x6E6520,\n        0x6E6720, 0x6E6765, 0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722064, 0x722065,\n        0x722073, 0x726520, 0x737465, 0x742073, 0x746520, 0x746572, 0x74696C, 0x766572\n      ]),\n      new NGramsPlusLang('de', [\n        0x20616E, 0x206175, 0x206265, 0x206461, 0x206465, 0x206469, 0x206569, 0x206765,\n        0x206861, 0x20696E, 0x206D69, 0x207363, 0x207365, 0x20756E, 0x207665, 0x20766F,\n        0x207765, 0x207A75, 0x626572, 0x636820, 0x636865, 0x636874, 0x646173, 0x64656E,\n        0x646572, 0x646965, 0x652064, 0x652073, 0x65696E, 0x656974, 0x656E20, 0x657220,\n        0x657320, 0x67656E, 0x68656E, 0x687420, 0x696368, 0x696520, 0x696E20, 0x696E65,\n        0x697420, 0x6C6963, 0x6C6C65, 0x6E2061, 0x6E2064, 0x6E2073, 0x6E6420, 0x6E6465,\n        0x6E6520, 0x6E6720, 0x6E6765, 0x6E7465, 0x722064, 0x726465, 0x726569, 0x736368,\n        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x756E64, 0x756E67, 0x766572\n      ]),\n      new NGramsPlusLang('en', [\n        0x206120, 0x20616E, 0x206265, 0x20636F, 0x20666F, 0x206861, 0x206865, 0x20696E,\n        0x206D61, 0x206F66, 0x207072, 0x207265, 0x207361, 0x207374, 0x207468, 0x20746F,\n        0x207768, 0x616964, 0x616C20, 0x616E20, 0x616E64, 0x617320, 0x617420, 0x617465,\n        0x617469, 0x642061, 0x642074, 0x652061, 0x652073, 0x652074, 0x656420, 0x656E74,\n        0x657220, 0x657320, 0x666F72, 0x686174, 0x686520, 0x686572, 0x696420, 0x696E20,\n        0x696E67, 0x696F6E, 0x697320, 0x6E2061, 0x6E2074, 0x6E6420, 0x6E6720, 0x6E7420,\n        0x6F6620, 0x6F6E20, 0x6F7220, 0x726520, 0x727320, 0x732061, 0x732074, 0x736169,\n        0x737420, 0x742074, 0x746572, 0x746861, 0x746865, 0x74696F, 0x746F20, 0x747320\n      ]),\n      new NGramsPlusLang('es', [\n        0x206120, 0x206361, 0x20636F, 0x206465, 0x20656C, 0x20656E, 0x206573, 0x20696E,\n        0x206C61, 0x206C6F, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n        0x20756E, 0x207920, 0x612063, 0x612064, 0x612065, 0x61206C, 0x612070, 0x616369,\n        0x61646F, 0x616C20, 0x617220, 0x617320, 0x6369F3, 0x636F6E, 0x646520, 0x64656C,\n        0x646F20, 0x652064, 0x652065, 0x65206C, 0x656C20, 0x656E20, 0x656E74, 0x657320,\n        0x657374, 0x69656E, 0x69F36E, 0x6C6120, 0x6C6F73, 0x6E2065, 0x6E7465, 0x6F2064,\n        0x6F2065, 0x6F6E20, 0x6F7220, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573,\n        0x732064, 0x732065, 0x732070, 0x736520, 0x746520, 0x746F20, 0x756520, 0xF36E20\n      ]),\n      new NGramsPlusLang('fr', [\n        0x206175, 0x20636F, 0x206461, 0x206465, 0x206475, 0x20656E, 0x206574, 0x206C61,\n        0x206C65, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207365, 0x20736F, 0x20756E,\n        0x20E020, 0x616E74, 0x617469, 0x636520, 0x636F6E, 0x646520, 0x646573, 0x647520,\n        0x652061, 0x652063, 0x652064, 0x652065, 0x65206C, 0x652070, 0x652073, 0x656E20,\n        0x656E74, 0x657220, 0x657320, 0x657420, 0x657572, 0x696F6E, 0x697320, 0x697420,\n        0x6C6120, 0x6C6520, 0x6C6573, 0x6D656E, 0x6E2064, 0x6E6520, 0x6E7320, 0x6E7420,\n        0x6F6E20, 0x6F6E74, 0x6F7572, 0x717565, 0x72206C, 0x726520, 0x732061, 0x732064,\n        0x732065, 0x73206C, 0x732070, 0x742064, 0x746520, 0x74696F, 0x756520, 0x757220\n      ]),\n      new NGramsPlusLang('it', [\n        0x20616C, 0x206368, 0x20636F, 0x206465, 0x206469, 0x206520, 0x20696C, 0x20696E,\n        0x206C61, 0x207065, 0x207072, 0x20756E, 0x612063, 0x612064, 0x612070, 0x612073,\n        0x61746F, 0x636865, 0x636F6E, 0x64656C, 0x646920, 0x652061, 0x652063, 0x652064,\n        0x652069, 0x65206C, 0x652070, 0x652073, 0x656C20, 0x656C6C, 0x656E74, 0x657220,\n        0x686520, 0x692061, 0x692063, 0x692064, 0x692073, 0x696120, 0x696C20, 0x696E20,\n        0x696F6E, 0x6C6120, 0x6C6520, 0x6C6920, 0x6C6C61, 0x6E6520, 0x6E6920, 0x6E6F20,\n        0x6E7465, 0x6F2061, 0x6F2064, 0x6F2069, 0x6F2073, 0x6F6E20, 0x6F6E65, 0x706572,\n        0x726120, 0x726520, 0x736920, 0x746120, 0x746520, 0x746920, 0x746F20, 0x7A696F\n      ]),\n      new NGramsPlusLang('nl', [\n        0x20616C, 0x206265, 0x206461, 0x206465, 0x206469, 0x206565, 0x20656E, 0x206765,\n        0x206865, 0x20696E, 0x206D61, 0x206D65, 0x206F70, 0x207465, 0x207661, 0x207665,\n        0x20766F, 0x207765, 0x207A69, 0x61616E, 0x616172, 0x616E20, 0x616E64, 0x617220,\n        0x617420, 0x636874, 0x646520, 0x64656E, 0x646572, 0x652062, 0x652076, 0x65656E,\n        0x656572, 0x656E20, 0x657220, 0x657273, 0x657420, 0x67656E, 0x686574, 0x696520,\n        0x696E20, 0x696E67, 0x697320, 0x6E2062, 0x6E2064, 0x6E2065, 0x6E2068, 0x6E206F,\n        0x6E2076, 0x6E6465, 0x6E6720, 0x6F6E64, 0x6F6F72, 0x6F7020, 0x6F7220, 0x736368,\n        0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x76616E, 0x766572, 0x766F6F\n      ]),\n      new NGramsPlusLang('no', [\n        0x206174, 0x206176, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920,\n        0x206D65, 0x206F67, 0x2070E5, 0x207365, 0x20736B, 0x20736F, 0x207374, 0x207469,\n        0x207669, 0x20E520, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646574,\n        0x652073, 0x656420, 0x656E20, 0x656E65, 0x657220, 0x657265, 0x657420, 0x657474,\n        0x666F72, 0x67656E, 0x696B6B, 0x696C20, 0x696E67, 0x6B6520, 0x6B6B65, 0x6C6520,\n        0x6C6C65, 0x6D6564, 0x6D656E, 0x6E2073, 0x6E6520, 0x6E6720, 0x6E6765, 0x6E6E65,\n        0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722073, 0x726520, 0x736F6D, 0x737465,\n        0x742073, 0x746520, 0x74656E, 0x746572, 0x74696C, 0x747420, 0x747465, 0x766572\n      ]),\n      new NGramsPlusLang('pt', [\n        0x206120, 0x20636F, 0x206461, 0x206465, 0x20646F, 0x206520, 0x206573, 0x206D61,\n        0x206E6F, 0x206F20, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,\n        0x20756D, 0x612061, 0x612063, 0x612064, 0x612070, 0x616465, 0x61646F, 0x616C20,\n        0x617220, 0x617261, 0x617320, 0x636F6D, 0x636F6E, 0x646120, 0x646520, 0x646F20,\n        0x646F73, 0x652061, 0x652064, 0x656D20, 0x656E74, 0x657320, 0x657374, 0x696120,\n        0x696361, 0x6D656E, 0x6E7465, 0x6E746F, 0x6F2061, 0x6F2063, 0x6F2064, 0x6F2065,\n        0x6F2070, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732061, 0x732064,\n        0x732065, 0x732070, 0x737461, 0x746520, 0x746F20, 0x756520, 0xE36F20, 0xE7E36F\n      ]),\n      new NGramsPlusLang('sv', [\n        0x206174, 0x206176, 0x206465, 0x20656E, 0x2066F6, 0x206861, 0x206920, 0x20696E,\n        0x206B6F, 0x206D65, 0x206F63, 0x2070E5, 0x20736B, 0x20736F, 0x207374, 0x207469,\n        0x207661, 0x207669, 0x20E472, 0x616465, 0x616E20, 0x616E64, 0x617220, 0x617474,\n        0x636820, 0x646520, 0x64656E, 0x646572, 0x646574, 0x656420, 0x656E20, 0x657220,\n        0x657420, 0x66F672, 0x67656E, 0x696C6C, 0x696E67, 0x6B6120, 0x6C6C20, 0x6D6564,\n        0x6E2073, 0x6E6120, 0x6E6465, 0x6E6720, 0x6E6765, 0x6E696E, 0x6F6368, 0x6F6D20,\n        0x6F6E20, 0x70E520, 0x722061, 0x722073, 0x726120, 0x736B61, 0x736F6D, 0x742073,\n        0x746120, 0x746520, 0x746572, 0x74696C, 0x747420, 0x766172, 0xE47220, 0xF67220,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1252' : 'ISO-8859-1';\n  };\n};\nutil.inherits(module.exports.ISO_8859_1, sbcs);\n\n\nmodule.exports.ISO_8859_2 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0x20,\n      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n      0x20, 0xB1, 0x20, 0xB3, 0x20, 0xB5, 0xB6, 0xB7,\n      0x20, 0xB9, 0xBA, 0xBB, 0xBC, 0x20, 0xBE, 0xBF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n    ];\n  }\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('cs', [\n        0x206120, 0x206279, 0x20646F, 0x206A65, 0x206E61, 0x206E65, 0x206F20, 0x206F64,\n        0x20706F, 0x207072, 0x2070F8, 0x20726F, 0x207365, 0x20736F, 0x207374, 0x20746F,\n        0x207620, 0x207679, 0x207A61, 0x612070, 0x636520, 0x636820, 0x652070, 0x652073,\n        0x652076, 0x656D20, 0x656EED, 0x686F20, 0x686F64, 0x697374, 0x6A6520, 0x6B7465,\n        0x6C6520, 0x6C6920, 0x6E6120, 0x6EE920, 0x6EEC20, 0x6EED20, 0x6F2070, 0x6F646E,\n        0x6F6A69, 0x6F7374, 0x6F7520, 0x6F7661, 0x706F64, 0x706F6A, 0x70726F, 0x70F865,\n        0x736520, 0x736F75, 0x737461, 0x737469, 0x73746E, 0x746572, 0x746EED, 0x746F20,\n        0x752070, 0xBE6520, 0xE16EED, 0xE9686F, 0xED2070, 0xED2073, 0xED6D20, 0xF86564,\n      ]),\n      new NGramsPlusLang('hu', [\n        0x206120, 0x20617A, 0x206265, 0x206567, 0x20656C, 0x206665, 0x206861, 0x20686F,\n        0x206973, 0x206B65, 0x206B69, 0x206BF6, 0x206C65, 0x206D61, 0x206D65, 0x206D69,\n        0x206E65, 0x20737A, 0x207465, 0x20E973, 0x612061, 0x61206B, 0x61206D, 0x612073,\n        0x616B20, 0x616E20, 0x617A20, 0x62616E, 0x62656E, 0x656779, 0x656B20, 0x656C20,\n        0x656C65, 0x656D20, 0x656E20, 0x657265, 0x657420, 0x657465, 0x657474, 0x677920,\n        0x686F67, 0x696E74, 0x697320, 0x6B2061, 0x6BF67A, 0x6D6567, 0x6D696E, 0x6E2061,\n        0x6E616B, 0x6E656B, 0x6E656D, 0x6E7420, 0x6F6779, 0x732061, 0x737A65, 0x737A74,\n        0x737AE1, 0x73E967, 0x742061, 0x747420, 0x74E173, 0x7A6572, 0xE16E20, 0xE97320,\n      ]),\n      new NGramsPlusLang('pl', [\n        0x20637A, 0x20646F, 0x206920, 0x206A65, 0x206B6F, 0x206D61, 0x206D69, 0x206E61,\n        0x206E69, 0x206F64, 0x20706F, 0x207072, 0x207369, 0x207720, 0x207769, 0x207779,\n        0x207A20, 0x207A61, 0x612070, 0x612077, 0x616E69, 0x636820, 0x637A65, 0x637A79,\n        0x646F20, 0x647A69, 0x652070, 0x652073, 0x652077, 0x65207A, 0x65676F, 0x656A20,\n        0x656D20, 0x656E69, 0x676F20, 0x696120, 0x696520, 0x69656A, 0x6B6120, 0x6B6920,\n        0x6B6965, 0x6D6965, 0x6E6120, 0x6E6961, 0x6E6965, 0x6F2070, 0x6F7761, 0x6F7769,\n        0x706F6C, 0x707261, 0x70726F, 0x70727A, 0x727A65, 0x727A79, 0x7369EA, 0x736B69,\n        0x737461, 0x776965, 0x796368, 0x796D20, 0x7A6520, 0x7A6965, 0x7A7920, 0xF37720,\n      ]),\n      new NGramsPlusLang('ro', [\n        0x206120, 0x206163, 0x206361, 0x206365, 0x20636F, 0x206375, 0x206465, 0x206469,\n        0x206C61, 0x206D61, 0x207065, 0x207072, 0x207365, 0x2073E3, 0x20756E, 0x20BA69,\n        0x20EE6E, 0x612063, 0x612064, 0x617265, 0x617420, 0x617465, 0x617520, 0x636172,\n        0x636F6E, 0x637520, 0x63E320, 0x646520, 0x652061, 0x652063, 0x652064, 0x652070,\n        0x652073, 0x656120, 0x656920, 0x656C65, 0x656E74, 0x657374, 0x692061, 0x692063,\n        0x692064, 0x692070, 0x696520, 0x696920, 0x696E20, 0x6C6120, 0x6C6520, 0x6C6F72,\n        0x6C7569, 0x6E6520, 0x6E7472, 0x6F7220, 0x70656E, 0x726520, 0x726561, 0x727520,\n        0x73E320, 0x746520, 0x747275, 0x74E320, 0x756920, 0x756C20, 0xBA6920, 0xEE6E20,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1250' : 'ISO-8859-2';\n  };\n};\nutil.inherits(module.exports.ISO_8859_2, sbcs);\n\n\nmodule.exports.ISO_8859_5 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0x20, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x20, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20D220, 0x20D2DE, 0x20D4DE, 0x20D7D0, 0x20D820, 0x20DAD0, 0x20DADE, 0x20DDD0,\n      0x20DDD5, 0x20DED1, 0x20DFDE, 0x20DFE0, 0x20E0D0, 0x20E1DE, 0x20E1E2, 0x20E2DE,\n      0x20E7E2, 0x20EDE2, 0xD0DDD8, 0xD0E2EC, 0xD3DE20, 0xD5DBEC, 0xD5DDD8, 0xD5E1E2,\n      0xD5E220, 0xD820DF, 0xD8D520, 0xD8D820, 0xD8EF20, 0xDBD5DD, 0xDBD820, 0xDBECDD,\n      0xDDD020, 0xDDD520, 0xDDD8D5, 0xDDD8EF, 0xDDDE20, 0xDDDED2, 0xDE20D2, 0xDE20DF,\n      0xDE20E1, 0xDED220, 0xDED2D0, 0xDED3DE, 0xDED920, 0xDEDBEC, 0xDEDC20, 0xDEE1E2,\n      0xDFDEDB, 0xDFE0D5, 0xDFE0D8, 0xDFE0DE, 0xE0D0D2, 0xE0D5D4, 0xE1E2D0, 0xE1E2D2,\n      0xE1E2D8, 0xE1EF20, 0xE2D5DB, 0xE2DE20, 0xE2DEE0, 0xE2EC20, 0xE7E2DE, 0xEBE520\n    ];\n  };\n\n  this.name = function(det) {\n    return 'ISO-8859-5';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.ISO_8859_5, sbcs);\n\n\nmodule.exports.ISO_8859_6 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C7E4, 0x20C7E6, 0x20C8C7, 0x20D9E4, 0x20E1EA, 0x20E4E4, 0x20E5E6, 0x20E8C7,\n      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E420, 0xC7E4C3, 0xC7E4C7, 0xC7E4C8,\n      0xC7E4CA, 0xC7E4CC, 0xC7E4CD, 0xC7E4CF, 0xC7E4D3, 0xC7E4D9, 0xC7E4E2, 0xC7E4E5,\n      0xC7E4E8, 0xC7E4EA, 0xC7E520, 0xC7E620, 0xC7E6CA, 0xC820C7, 0xC920C7, 0xC920E1,\n      0xC920E4, 0xC920E5, 0xC920E8, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n      0xD320C7, 0xD920C7, 0xD9E4E9, 0xE1EA20, 0xE420C7, 0xE4C920, 0xE4E920, 0xE4EA20,\n      0xE520C7, 0xE5C720, 0xE5C920, 0xE5E620, 0xE620C7, 0xE720C7, 0xE7C720, 0xE8C7E4,\n      0xE8E620, 0xE920C7, 0xEA20C7, 0xEA20E5, 0xEA20E8, 0xEAC920, 0xEAD120, 0xEAE620\n    ];\n  };\n\n  this.name = function(det) {\n    return 'ISO-8859-6';\n  };\n\n  this.language = function() {\n    return 'ar';\n  };\n};\nutil.inherits(module.exports.ISO_8859_6, sbcs);\n\n\nmodule.exports.ISO_8859_7 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0xA1, 0xA2, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xDC, 0x20,\n      0xDD, 0xDE, 0xDF, 0x20, 0xFC, 0x20, 0xFD, 0xFE,\n      0xC0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0x20, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20E1ED, 0x20E1F0, 0x20E3E9, 0x20E4E9, 0x20E5F0, 0x20E720, 0x20EAE1, 0x20ECE5,\n      0x20EDE1, 0x20EF20, 0x20F0E1, 0x20F0EF, 0x20F0F1, 0x20F3F4, 0x20F3F5, 0x20F4E7,\n      0x20F4EF, 0xDFE120, 0xE120E1, 0xE120F4, 0xE1E920, 0xE1ED20, 0xE1F0FC, 0xE1F220,\n      0xE3E9E1, 0xE5E920, 0xE5F220, 0xE720F4, 0xE7ED20, 0xE7F220, 0xE920F4, 0xE9E120,\n      0xE9EADE, 0xE9F220, 0xEAE1E9, 0xEAE1F4, 0xECE520, 0xED20E1, 0xED20E5, 0xED20F0,\n      0xEDE120, 0xEFF220, 0xEFF520, 0xF0EFF5, 0xF0F1EF, 0xF0FC20, 0xF220E1, 0xF220E5,\n      0xF220EA, 0xF220F0, 0xF220F4, 0xF3E520, 0xF3E720, 0xF3F4EF, 0xF4E120, 0xF4E1E9,\n      0xF4E7ED, 0xF4E7F2, 0xF4E9EA, 0xF4EF20, 0xF4EFF5, 0xF4F9ED, 0xF9ED20, 0xFEED20\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1253' : 'ISO-8859-7';\n  };\n\n  this.language = function() {\n    return 'el';\n  };\n};\nutil.inherits(module.exports.ISO_8859_7, sbcs);\n\nmodule.exports.ISO_8859_8 = function() {\n\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0x20, 0x20, 0x20, 0x20, 0x20\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      new NGramsPlusLang('he', [\n        0x20E0E5, 0x20E0E7, 0x20E0E9, 0x20E0FA, 0x20E1E9, 0x20E1EE, 0x20E4E0, 0x20E4E5,\n        0x20E4E9, 0x20E4EE, 0x20E4F2, 0x20E4F9, 0x20E4FA, 0x20ECE0, 0x20ECE4, 0x20EEE0,\n        0x20F2EC, 0x20F9EC, 0xE0FA20, 0xE420E0, 0xE420E1, 0xE420E4, 0xE420EC, 0xE420EE,\n        0xE420F9, 0xE4E5E0, 0xE5E020, 0xE5ED20, 0xE5EF20, 0xE5F820, 0xE5FA20, 0xE920E4,\n        0xE9E420, 0xE9E5FA, 0xE9E9ED, 0xE9ED20, 0xE9EF20, 0xE9F820, 0xE9FA20, 0xEC20E0,\n        0xEC20E4, 0xECE020, 0xECE420, 0xED20E0, 0xED20E1, 0xED20E4, 0xED20EC, 0xED20EE,\n        0xED20F9, 0xEEE420, 0xEF20E4, 0xF0E420, 0xF0E920, 0xF0E9ED, 0xF2EC20, 0xF820E4,\n        0xF8E9ED, 0xF9EC20, 0xFA20E0, 0xFA20E1, 0xFA20E4, 0xFA20EC, 0xFA20EE, 0xFA20F9,\n      ]),\n      new NGramsPlusLang('he', [\n        0x20E0E5, 0x20E0EC, 0x20E4E9, 0x20E4EC, 0x20E4EE, 0x20E4F0, 0x20E9F0, 0x20ECF2,\n        0x20ECF9, 0x20EDE5, 0x20EDE9, 0x20EFE5, 0x20EFE9, 0x20F8E5, 0x20F8E9, 0x20FAE0,\n        0x20FAE5, 0x20FAE9, 0xE020E4, 0xE020EC, 0xE020ED, 0xE020FA, 0xE0E420, 0xE0E5E4,\n        0xE0EC20, 0xE0EE20, 0xE120E4, 0xE120ED, 0xE120FA, 0xE420E4, 0xE420E9, 0xE420EC,\n        0xE420ED, 0xE420EF, 0xE420F8, 0xE420FA, 0xE4EC20, 0xE5E020, 0xE5E420, 0xE7E020,\n        0xE9E020, 0xE9E120, 0xE9E420, 0xEC20E4, 0xEC20ED, 0xEC20FA, 0xECF220, 0xECF920,\n        0xEDE9E9, 0xEDE9F0, 0xEDE9F8, 0xEE20E4, 0xEE20ED, 0xEE20FA, 0xEEE120, 0xEEE420,\n        0xF2E420, 0xF920E4, 0xF920ED, 0xF920FA, 0xF9E420, 0xFAE020, 0xFAE420, 0xFAE5E9,\n      ])\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1255' : 'ISO-8859-8';\n  };\n\n  this.language = function() {\n    return 'he';\n  };\n\n};\nutil.inherits(module.exports.ISO_8859_8, sbcs);\n\n\nmodule.exports.ISO_8859_9 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0x69, 0xFE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0x20,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x206261, 0x206269, 0x206275, 0x206461, 0x206465, 0x206765, 0x206861, 0x20696C,\n      0x206B61, 0x206B6F, 0x206D61, 0x206F6C, 0x207361, 0x207461, 0x207665, 0x207961,\n      0x612062, 0x616B20, 0x616C61, 0x616D61, 0x616E20, 0x616EFD, 0x617220, 0x617261,\n      0x6172FD, 0x6173FD, 0x617961, 0x626972, 0x646120, 0x646520, 0x646920, 0x652062,\n      0x65206B, 0x656469, 0x656E20, 0x657220, 0x657269, 0x657369, 0x696C65, 0x696E20,\n      0x696E69, 0x697220, 0x6C616E, 0x6C6172, 0x6C6520, 0x6C6572, 0x6E2061, 0x6E2062,\n      0x6E206B, 0x6E6461, 0x6E6465, 0x6E6520, 0x6E6920, 0x6E696E, 0x6EFD20, 0x72696E,\n      0x72FD6E, 0x766520, 0x796120, 0x796F72, 0xFD6E20, 0xFD6E64, 0xFD6EFD, 0xFDF0FD\n    ];\n  };\n\n  this.name = function(det) {\n    return (det && det.fC1Bytes) ? 'windows-1254' : 'ISO-8859-9';\n  };\n\n  this.language = function() {\n    return 'tr';\n  };\n};\nutil.inherits(module.exports.ISO_8859_9, sbcs);\n\n\nmodule.exports.windows_1251 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x90, 0x83, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x9A, 0x20, 0x9C, 0x9D, 0x9E, 0x9F,\n      0x20, 0xA2, 0xA2, 0xBC, 0x20, 0xB4, 0x20, 0x20,\n      0xB8, 0x20, 0xBA, 0x20, 0x20, 0x20, 0x20, 0xBF,\n      0x20, 0x20, 0xB3, 0xB3, 0xB4, 0xB5, 0x20, 0x20,\n      0xB8, 0x20, 0xBA, 0x20, 0xBC, 0xBE, 0xBE, 0xBF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n      0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20E220, 0x20E2EE, 0x20E4EE, 0x20E7E0, 0x20E820, 0x20EAE0, 0x20EAEE, 0x20EDE0,\n      0x20EDE5, 0x20EEE1, 0x20EFEE, 0x20EFF0, 0x20F0E0, 0x20F1EE, 0x20F1F2, 0x20F2EE,\n      0x20F7F2, 0x20FDF2, 0xE0EDE8, 0xE0F2FC, 0xE3EE20, 0xE5EBFC, 0xE5EDE8, 0xE5F1F2,\n      0xE5F220, 0xE820EF, 0xE8E520, 0xE8E820, 0xE8FF20, 0xEBE5ED, 0xEBE820, 0xEBFCED,\n      0xEDE020, 0xEDE520, 0xEDE8E5, 0xEDE8FF, 0xEDEE20, 0xEDEEE2, 0xEE20E2, 0xEE20EF,\n      0xEE20F1, 0xEEE220, 0xEEE2E0, 0xEEE3EE, 0xEEE920, 0xEEEBFC, 0xEEEC20, 0xEEF1F2,\n      0xEFEEEB, 0xEFF0E5, 0xEFF0E8, 0xEFF0EE, 0xF0E0E2, 0xF0E5E4, 0xF1F2E0, 0xF1F2E2,\n      0xF1F2E8, 0xF1FF20, 0xF2E5EB, 0xF2EE20, 0xF2EEF0, 0xF2FC20, 0xF7F2EE, 0xFBF520\n    ];\n  };\n\n  this.name = function(det) {\n    return 'windows-1251';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.windows_1251, sbcs);\n\n\nmodule.exports.windows_1256 = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x81, 0x20, 0x83, 0x20, 0x20, 0x20, 0x20,\n      0x88, 0x20, 0x8A, 0x20, 0x9C, 0x8D, 0x8E, 0x8F,\n      0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x98, 0x20, 0x9A, 0x20, 0x9C, 0x20, 0x20, 0x9F,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0xAA, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0xB5, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0x20,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,\n      0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,\n      0x20, 0x20, 0x20, 0x20, 0xF4, 0x20, 0x20, 0x20,\n      0x20, 0xF9, 0x20, 0xFB, 0xFC, 0x20, 0x20, 0xFF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C7E1, 0x20C7E4, 0x20C8C7, 0x20DAE1, 0x20DDED, 0x20E1E1, 0x20E3E4, 0x20E6C7,\n      0xC720C7, 0xC7C120, 0xC7CA20, 0xC7D120, 0xC7E120, 0xC7E1C3, 0xC7E1C7, 0xC7E1C8,\n      0xC7E1CA, 0xC7E1CC, 0xC7E1CD, 0xC7E1CF, 0xC7E1D3, 0xC7E1DA, 0xC7E1DE, 0xC7E1E3,\n      0xC7E1E6, 0xC7E1ED, 0xC7E320, 0xC7E420, 0xC7E4CA, 0xC820C7, 0xC920C7, 0xC920DD,\n      0xC920E1, 0xC920E3, 0xC920E6, 0xCA20C7, 0xCF20C7, 0xCFC920, 0xD120C7, 0xD1C920,\n      0xD320C7, 0xDA20C7, 0xDAE1EC, 0xDDED20, 0xE120C7, 0xE1C920, 0xE1EC20, 0xE1ED20,\n      0xE320C7, 0xE3C720, 0xE3C920, 0xE3E420, 0xE420C7, 0xE520C7, 0xE5C720, 0xE6C7E1,\n      0xE6E420, 0xEC20C7, 0xED20C7, 0xED20E3, 0xED20E6, 0xEDC920, 0xEDD120, 0xEDE420\n    ];\n  };\n\n  this.name = function(det) {\n    return 'windows-1256';\n  };\n\n  this.language = function() {\n    return 'ar';\n  };\n};\nutil.inherits(module.exports.windows_1256, sbcs);\n\n\nmodule.exports.KOI8_R = function() {\n  this.byteMap = function() {\n    return [\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n      0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,\n      0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n      0x78, 0x79, 0x7A, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0xA3, 0x20, 0x20, 0x20, 0x20,\n      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,\n      0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n      0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,\n      0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,\n      0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n      0x20C4CF, 0x20C920, 0x20CBC1, 0x20CBCF, 0x20CEC1, 0x20CEC5, 0x20CFC2, 0x20D0CF,\n      0x20D0D2, 0x20D2C1, 0x20D3CF, 0x20D3D4, 0x20D4CF, 0x20D720, 0x20D7CF, 0x20DAC1,\n      0x20DCD4, 0x20DED4, 0xC1CEC9, 0xC1D4D8, 0xC5CCD8, 0xC5CEC9, 0xC5D3D4, 0xC5D420,\n      0xC7CF20, 0xC920D0, 0xC9C520, 0xC9C920, 0xC9D120, 0xCCC5CE, 0xCCC920, 0xCCD8CE,\n      0xCEC120, 0xCEC520, 0xCEC9C5, 0xCEC9D1, 0xCECF20, 0xCECFD7, 0xCF20D0, 0xCF20D3,\n      0xCF20D7, 0xCFC7CF, 0xCFCA20, 0xCFCCD8, 0xCFCD20, 0xCFD3D4, 0xCFD720, 0xCFD7C1,\n      0xD0CFCC, 0xD0D2C5, 0xD0D2C9, 0xD0D2CF, 0xD2C1D7, 0xD2C5C4, 0xD3D120, 0xD3D4C1,\n      0xD3D4C9, 0xD3D4D7, 0xD4C5CC, 0xD4CF20, 0xD4CFD2, 0xD4D820, 0xD9C820, 0xDED4CF\n    ];\n  };\n\n  this.name = function(det) {\n    return 'KOI8-R';\n  };\n\n  this.language = function() {\n    return 'ru';\n  };\n};\nutil.inherits(module.exports.KOI8_R, sbcs);\n\n\n/*\nmodule.exports.ISO_8859_7 = function() {\n  this.byteMap = function() {\n    return [\n\n    ];\n  };\n\n  this.ngrams = function() {\n    return [\n\n    ];\n  };\n\n  this.name = function(det) {\n    if (typeof det == 'undefined')\n      return 'ISO-8859-7';\n    return det.fC1Bytes ? 'windows-1253' : 'ISO-8859-7';\n  };\n\n  this.language = function() {\n    return 'el';\n  };\n};\nutil.inherits(module.exports.ISO_8859_7, sbcs);\n*/\n\n","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * Binary search implementation (recursive)\n */\nfunction binarySearch(arr, searchValue) {\n  function find(arr, searchValue, left, right) {\n    if (right < left)\n      return -1;\n\n    /*\n    int mid = mid = (left + right) / 2;\n    There is a bug in the above line;\n    Joshua Bloch suggests the following replacement:\n    */\n    var mid = Math.floor((left + right) >>> 1);\n    if (searchValue > arr[mid])\n      return find(arr, searchValue, mid + 1, right);\n\n    if (searchValue < arr[mid])\n      return find(arr, searchValue, left, mid - 1);\n\n    return mid;\n  };\n\n  return find(arr, searchValue, 0, arr.length - 1);\n};\n\n// 'Character'  iterated character class.\n//    Recognizers for specific mbcs encodings make their 'characters' available\n//    by providing a nextChar() function that fills in an instance of iteratedChar\n//    with the next char from the input.\n//    The returned characters are not converted to Unicode, but remain as the raw\n//    bytes (concatenated into an int) from the codepage data.\n//\n//  For Asian charsets, use the raw input rather than the input that has been\n//   stripped of markup.  Detection only considers multi-byte chars, effectively\n//   stripping markup anyway, and double byte chars do occur in markup too.\n//\nfunction IteratedChar() {\n\n  this.charValue = 0; // 1-4 bytes from the raw input data\n  this.index     = 0;\n  this.nextIndex = 0;\n  this.error     = false;\n  this.done      = false;\n\n  this.reset = function() {\n    this.charValue = 0;\n    this.index     = -1;\n    this.nextIndex = 0;\n    this.error     = false;\n    this.done      = false;\n  };\n\n  this.nextByte = function(det) {\n    if (this.nextIndex >= det.fRawLength) {\n      this.done = true;\n      return -1;\n    }\n    var byteValue = det.fRawInput[this.nextIndex++] & 0x00ff;\n    return byteValue;\n  };\n};\n\n\n\n/**\n * Asian double or multi-byte - charsets.\n * Match is determined mostly by the input data adhering to the\n * encoding scheme for the charset, and, optionally,\n * frequency-of-occurence of characters.\n */\n\nfunction mbcs() {};\n\n/**\n * Test the match of this charset with the input text data\n *      which is obtained via the CharsetDetector object.\n *\n * @param det  The CharsetDetector, which contains the input text\n *             to be checked for being in this charset.\n * @return     Two values packed into one int  (Damn java, anyhow)\n *             bits 0-7:  the match confidence, ranging from 0-100\n *             bits 8-15: The match reason, an enum-like value.\n */\nmbcs.prototype.match = function(det) {\n\n  var singleByteCharCount = 0,  //TODO Do we really need this?\n    doubleByteCharCount = 0,\n    commonCharCount     = 0,\n    badCharCount        = 0,\n    totalCharCount      = 0,\n    confidence          = 0;\n\n  var iter = new IteratedChar();\n\n  detectBlock: {\n    for (iter.reset(); this.nextChar(iter, det);) {\n      totalCharCount++;\n      if (iter.error) {\n        badCharCount++;\n      } else {\n        var cv = iter.charValue & 0xFFFFFFFF;\n\n        if (cv <= 0xff) {\n          singleByteCharCount++;\n        } else {\n          doubleByteCharCount++;\n          if (this.commonChars != null) {\n            // NOTE: This assumes that there are no 4-byte common chars.\n            if (binarySearch(this.commonChars, cv) >= 0) {\n              commonCharCount++;\n            }\n          }\n        }\n      }\n      if (badCharCount >= 2 && badCharCount * 5 >= doubleByteCharCount) {\n        // console.log('its here!')\n        // Bail out early if the byte data is not matching the encoding scheme.\n        break detectBlock;\n      }\n    }\n\n    if (doubleByteCharCount <= 10 && badCharCount== 0) {\n      // Not many multi-byte chars.\n      if (doubleByteCharCount == 0 && totalCharCount < 10) {\n        // There weren't any multibyte sequences, and there was a low density of non-ASCII single bytes.\n        // We don't have enough data to have any confidence.\n        // Statistical analysis of single byte non-ASCII charcters would probably help here.\n        confidence = 0;\n      }\n      else {\n        //   ASCII or ISO file?  It's probably not our encoding,\n        //   but is not incompatible with our encoding, so don't give it a zero.\n        confidence = 10;\n      }\n      break detectBlock;\n    }\n\n    //\n    //  No match if there are too many characters that don't fit the encoding scheme.\n    //    (should we have zero tolerance for these?)\n    //\n    if (doubleByteCharCount < 20 * badCharCount) {\n      confidence = 0;\n      break detectBlock;\n    }\n\n    if (this.commonChars == null) {\n      // We have no statistics on frequently occuring characters.\n      //  Assess confidence purely on having a reasonable number of\n      //  multi-byte characters (the more the better\n      confidence = 30 + doubleByteCharCount - 20 * badCharCount;\n      if (confidence > 100) {\n        confidence = 100;\n      }\n    } else {\n      //\n      // Frequency of occurence statistics exist.\n      //\n      var maxVal = Math.log(parseFloat(doubleByteCharCount) / 4);\n      var scaleFactor = 90.0 / maxVal;\n      confidence = Math.floor(Math.log(commonCharCount + 1) * scaleFactor + 10);\n      confidence = Math.min(confidence, 100);\n    }\n  }   // end of detectBlock:\n\n  return confidence == 0 ? null : new Match(det, this, confidence);\n};\n\n/**\n * Get the next character (however many bytes it is) from the input data\n *    Subclasses for specific charset encodings must implement this function\n *    to get characters according to the rules of their encoding scheme.\n *\n *  This function is not a method of class iteratedChar only because\n *   that would require a lot of extra derived classes, which is awkward.\n * @param it  The iteratedChar 'struct' into which the returned char is placed.\n * @param det The charset detector, which is needed to get at the input byte data\n *            being iterated over.\n * @return    True if a character was returned, false at end of input.\n */\n\nmbcs.prototype.nextChar = function(iter, det) {};\n\n\n\n/**\n * Shift-JIS charset recognizer.\n */\nmodule.exports.sjis = function() {\n  this.name = function() {\n    return 'Shift-JIS';\n  };\n  this.language = function() {\n    return 'ja';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0x8140, 0x8141, 0x8142, 0x8145, 0x815b, 0x8169, 0x816a, 0x8175, 0x8176, 0x82a0,\n    0x82a2, 0x82a4, 0x82a9, 0x82aa, 0x82ab, 0x82ad, 0x82af, 0x82b1, 0x82b3, 0x82b5,\n    0x82b7, 0x82bd, 0x82be, 0x82c1, 0x82c4, 0x82c5, 0x82c6, 0x82c8, 0x82c9, 0x82cc,\n    0x82cd, 0x82dc, 0x82e0, 0x82e7, 0x82e8, 0x82e9, 0x82ea, 0x82f0, 0x82f1, 0x8341,\n    0x8343, 0x834e, 0x834f, 0x8358, 0x835e, 0x8362, 0x8367, 0x8375, 0x8376, 0x8389,\n    0x838a, 0x838b, 0x838d, 0x8393, 0x8e96, 0x93fa, 0x95aa\n  ];\n\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n\n    var firstByte;\n    firstByte = iter.charValue = iter.nextByte(det);\n    if (firstByte < 0)\n      return false;\n\n    if (firstByte <= 0x7f || (firstByte > 0xa0 && firstByte <= 0xdf))\n      return true;\n\n    var secondByte = iter.nextByte(det);\n    if (secondByte < 0)\n      return false;\n\n    iter.charValue = (firstByte << 8) | secondByte;\n    if (! ((secondByte >= 0x40 && secondByte <= 0x7f) || (secondByte >= 0x80 && secondByte <= 0xff))) {\n      // Illegal second byte value.\n      iter.error = true;\n    }\n    return true;\n  };\n};\nutil.inherits(module.exports.sjis, mbcs);\n\n\n\n/**\n *   Big5 charset recognizer.\n */\nmodule.exports.big5 = function() {\n  this.name = function() {\n    return 'Big5';\n  };\n  this.language = function() {\n    return 'zh';\n  };\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa140, 0xa141, 0xa142, 0xa143, 0xa147, 0xa149, 0xa175, 0xa176, 0xa440, 0xa446,\n    0xa447, 0xa448, 0xa451, 0xa454, 0xa457, 0xa464, 0xa46a, 0xa46c, 0xa477, 0xa4a3,\n    0xa4a4, 0xa4a7, 0xa4c1, 0xa4ce, 0xa4d1, 0xa4df, 0xa4e8, 0xa4fd, 0xa540, 0xa548,\n    0xa558, 0xa569, 0xa5cd, 0xa5e7, 0xa657, 0xa661, 0xa662, 0xa668, 0xa670, 0xa6a8,\n    0xa6b3, 0xa6b9, 0xa6d3, 0xa6db, 0xa6e6, 0xa6f2, 0xa740, 0xa751, 0xa759, 0xa7da,\n    0xa8a3, 0xa8a5, 0xa8ad, 0xa8d1, 0xa8d3, 0xa8e4, 0xa8fc, 0xa9c0, 0xa9d2, 0xa9f3,\n    0xaa6b, 0xaaba, 0xaabe, 0xaacc, 0xaafc, 0xac47, 0xac4f, 0xacb0, 0xacd2, 0xad59,\n    0xaec9, 0xafe0, 0xb0ea, 0xb16f, 0xb2b3, 0xb2c4, 0xb36f, 0xb44c, 0xb44e, 0xb54c,\n    0xb5a5, 0xb5bd, 0xb5d0, 0xb5d8, 0xb671, 0xb7ed, 0xb867, 0xb944, 0xbad8, 0xbb44,\n    0xbba1, 0xbdd1, 0xc2c4, 0xc3b9, 0xc440, 0xc45f\n  ];\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n\n    var firstByte = iter.charValue = iter.nextByte(det);\n\n    if (firstByte < 0)\n      return false;\n\n    // single byte character.\n    if (firstByte <= 0x7f || firstByte == 0xff)\n      return true;\n\n    var secondByte = iter.nextByte(det);\n\n    if (secondByte < 0)\n      return false;\n\n    iter.charValue = (iter.charValue << 8) | secondByte;\n\n    if (secondByte < 0x40 || secondByte == 0x7f || secondByte == 0xff)\n      iter.error = true;\n\n    return true;\n  };\n};\nutil.inherits(module.exports.big5, mbcs);\n\n\n\n/**\n *  EUC charset recognizers.  One abstract class that provides the common function\n *  for getting the next character according to the EUC encoding scheme,\n *  and nested derived classes for EUC_KR, EUC_JP, EUC_CN.\n *\n *  Get the next character value for EUC based encodings.\n *  Character 'value' is simply the raw bytes that make up the character\n *     packed into an int.\n */\nfunction eucNextChar(iter, det) {\n  iter.index = iter.nextIndex;\n  iter.error = false;\n  var firstByte  = 0;\n  var secondByte = 0;\n  var thirdByte  = 0;\n  //int fourthByte = 0;\n  buildChar: {\n    firstByte = iter.charValue = iter.nextByte(det);\n    if (firstByte < 0) {\n      // Ran off the end of the input data\n      iter.done = true;\n      break buildChar;\n    }\n    if (firstByte <= 0x8d) {\n      // single byte char\n      break buildChar;\n    }\n    secondByte = iter.nextByte(det);\n    iter.charValue = (iter.charValue << 8) | secondByte;\n    if (firstByte >= 0xA1 && firstByte <= 0xfe) {\n      // Two byte Char\n      if (secondByte < 0xa1) {\n        iter.error = true;\n      }\n      break buildChar;\n    }\n    if (firstByte == 0x8e) {\n      // Code Set 2.\n      //   In EUC-JP, total char size is 2 bytes, only one byte of actual char value.\n      //   In EUC-TW, total char size is 4 bytes, three bytes contribute to char value.\n      // We don't know which we've got.\n      // Treat it like EUC-JP.  If the data really was EUC-TW, the following two\n      //   bytes will look like a well formed 2 byte char.\n      if (secondByte < 0xa1) {\n        iter.error = true;\n      }\n      break buildChar;\n    }\n    if (firstByte == 0x8f) {\n      // Code set 3.\n      // Three byte total char size, two bytes of actual char value.\n      thirdByte = iter.nextByte(det);\n      iter.charValue = (iter.charValue << 8) | thirdByte;\n      if (thirdByte < 0xa1) {\n        iter.error = true;\n      }\n    }\n  }\n  return iter.done == false;\n};\n\n\n\n/**\n * The charset recognize for EUC-JP.  A singleton instance of this class\n *    is created and kept by the public CharsetDetector class\n */\nmodule.exports.euc_jp = function() {\n  this.name = function() {\n    return 'EUC-JP';\n  };\n  this.language = function() {\n    return 'ja';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a6, 0xa1bc, 0xa1ca, 0xa1cb, 0xa1d6, 0xa1d7, 0xa4a2,\n    0xa4a4, 0xa4a6, 0xa4a8, 0xa4aa, 0xa4ab, 0xa4ac, 0xa4ad, 0xa4af, 0xa4b1, 0xa4b3,\n    0xa4b5, 0xa4b7, 0xa4b9, 0xa4bb, 0xa4bd, 0xa4bf, 0xa4c0, 0xa4c1, 0xa4c3, 0xa4c4,\n    0xa4c6, 0xa4c7, 0xa4c8, 0xa4c9, 0xa4ca, 0xa4cb, 0xa4ce, 0xa4cf, 0xa4d0, 0xa4de,\n    0xa4df, 0xa4e1, 0xa4e2, 0xa4e4, 0xa4e8, 0xa4e9, 0xa4ea, 0xa4eb, 0xa4ec, 0xa4ef,\n    0xa4f2, 0xa4f3, 0xa5a2, 0xa5a3, 0xa5a4, 0xa5a6, 0xa5a7, 0xa5aa, 0xa5ad, 0xa5af,\n    0xa5b0, 0xa5b3, 0xa5b5, 0xa5b7, 0xa5b8, 0xa5b9, 0xa5bf, 0xa5c3, 0xa5c6, 0xa5c7,\n    0xa5c8, 0xa5c9, 0xa5cb, 0xa5d0, 0xa5d5, 0xa5d6, 0xa5d7, 0xa5de, 0xa5e0, 0xa5e1,\n    0xa5e5, 0xa5e9, 0xa5ea, 0xa5eb, 0xa5ec, 0xa5ed, 0xa5f3, 0xb8a9, 0xb9d4, 0xbaee,\n    0xbbc8, 0xbef0, 0xbfb7, 0xc4ea, 0xc6fc, 0xc7bd, 0xcab8, 0xcaf3, 0xcbdc, 0xcdd1\n  ];\n\n  this.nextChar = eucNextChar;\n};\nutil.inherits(module.exports.euc_jp, mbcs);\n\n\n\n/**\n * The charset recognize for EUC-KR.  A singleton instance of this class\n *    is created and kept by the public CharsetDetector class\n */\nmodule.exports.euc_kr = function() {\n  this.name = function() {\n    return 'EUC-KR';\n  };\n  this.language = function() {\n    return 'ko';\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xb0a1, 0xb0b3, 0xb0c5, 0xb0cd, 0xb0d4, 0xb0e6, 0xb0ed, 0xb0f8, 0xb0fa, 0xb0fc,\n    0xb1b8, 0xb1b9, 0xb1c7, 0xb1d7, 0xb1e2, 0xb3aa, 0xb3bb, 0xb4c2, 0xb4cf, 0xb4d9,\n    0xb4eb, 0xb5a5, 0xb5b5, 0xb5bf, 0xb5c7, 0xb5e9, 0xb6f3, 0xb7af, 0xb7c2, 0xb7ce,\n    0xb8a6, 0xb8ae, 0xb8b6, 0xb8b8, 0xb8bb, 0xb8e9, 0xb9ab, 0xb9ae, 0xb9cc, 0xb9ce,\n    0xb9fd, 0xbab8, 0xbace, 0xbad0, 0xbaf1, 0xbbe7, 0xbbf3, 0xbbfd, 0xbcad, 0xbcba,\n    0xbcd2, 0xbcf6, 0xbdba, 0xbdc0, 0xbdc3, 0xbdc5, 0xbec6, 0xbec8, 0xbedf, 0xbeee,\n    0xbef8, 0xbefa, 0xbfa1, 0xbfa9, 0xbfc0, 0xbfe4, 0xbfeb, 0xbfec, 0xbff8, 0xc0a7,\n    0xc0af, 0xc0b8, 0xc0ba, 0xc0bb, 0xc0bd, 0xc0c7, 0xc0cc, 0xc0ce, 0xc0cf, 0xc0d6,\n    0xc0da, 0xc0e5, 0xc0fb, 0xc0fc, 0xc1a4, 0xc1a6, 0xc1b6, 0xc1d6, 0xc1df, 0xc1f6,\n    0xc1f8, 0xc4a1, 0xc5cd, 0xc6ae, 0xc7cf, 0xc7d1, 0xc7d2, 0xc7d8, 0xc7e5, 0xc8ad\n  ];\n\n  this.nextChar = eucNextChar;\n};\nutil.inherits(module.exports.euc_kr, mbcs);\n\n\n\n/**\n *   GB-18030 recognizer. Uses simplified Chinese statistics.\n */\nmodule.exports.gb_18030 = function() {\n  this.name = function() {\n    return 'GB18030';\n  };\n  this.language = function() {\n    return 'zh';\n  };\n\n  /*\n   *  Get the next character value for EUC based encodings.\n   *  Character 'value' is simply the raw bytes that make up the character\n   *     packed into an int.\n   */\n  this.nextChar = function(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n    var firstByte  = 0;\n    var secondByte = 0;\n    var thirdByte  = 0;\n    var fourthByte = 0;\n    buildChar: {\n      firstByte = iter.charValue = iter.nextByte(det);\n      if (firstByte < 0) {\n        // Ran off the end of the input data\n        iter.done = true;\n        break buildChar;\n      }\n      if (firstByte <= 0x80) {\n        // single byte char\n        break buildChar;\n      }\n      secondByte = iter.nextByte(det);\n      iter.charValue = (iter.charValue << 8) | secondByte;\n      if (firstByte >= 0x81 && firstByte <= 0xFE) {\n        // Two byte Char\n        if ((secondByte >= 0x40 && secondByte <= 0x7E) || (secondByte >=80 && secondByte <= 0xFE)) {\n          break buildChar;\n        }\n        // Four byte char\n        if (secondByte >= 0x30 && secondByte <= 0x39) {\n          thirdByte = iter.nextByte(det);\n          if (thirdByte >= 0x81 && thirdByte <= 0xFE) {\n            fourthByte = iter.nextByte(det);\n            if (fourthByte >= 0x30 && fourthByte <= 0x39) {\n              iter.charValue = (iter.charValue << 16) | (thirdByte << 8) | fourthByte;\n              break buildChar;\n            }\n          }\n        }\n        iter.error = true;\n        break buildChar;\n      }\n    }\n    return iter.done == false;\n  };\n\n  // TODO:  This set of data comes from the character frequency-\n  //        of-occurence analysis tool.  The data needs to be moved\n  //        into a resource and loaded from there.\n  this.commonChars = [\n    0xa1a1, 0xa1a2, 0xa1a3, 0xa1a4, 0xa1b0, 0xa1b1, 0xa1f1, 0xa1f3, 0xa3a1, 0xa3ac,\n    0xa3ba, 0xb1a8, 0xb1b8, 0xb1be, 0xb2bb, 0xb3c9, 0xb3f6, 0xb4f3, 0xb5bd, 0xb5c4,\n    0xb5e3, 0xb6af, 0xb6d4, 0xb6e0, 0xb7a2, 0xb7a8, 0xb7bd, 0xb7d6, 0xb7dd, 0xb8b4,\n    0xb8df, 0xb8f6, 0xb9ab, 0xb9c9, 0xb9d8, 0xb9fa, 0xb9fd, 0xbacd, 0xbba7, 0xbbd6,\n    0xbbe1, 0xbbfa, 0xbcbc, 0xbcdb, 0xbcfe, 0xbdcc, 0xbecd, 0xbedd, 0xbfb4, 0xbfc6,\n    0xbfc9, 0xc0b4, 0xc0ed, 0xc1cb, 0xc2db, 0xc3c7, 0xc4dc, 0xc4ea, 0xc5cc, 0xc6f7,\n    0xc7f8, 0xc8ab, 0xc8cb, 0xc8d5, 0xc8e7, 0xc9cf, 0xc9fa, 0xcab1, 0xcab5, 0xcac7,\n    0xcad0, 0xcad6, 0xcaf5, 0xcafd, 0xccec, 0xcdf8, 0xceaa, 0xcec4, 0xced2, 0xcee5,\n    0xcfb5, 0xcfc2, 0xcfd6, 0xd0c2, 0xd0c5, 0xd0d0, 0xd0d4, 0xd1a7, 0xd2aa, 0xd2b2,\n    0xd2b5, 0xd2bb, 0xd2d4, 0xd3c3, 0xd3d0, 0xd3fd, 0xd4c2, 0xd4da, 0xd5e2, 0xd6d0\n  ];\n};\nutil.inherits(module.exports.gb_18030, mbcs);\n","var util = require('util'),\n  Match = require ('../match');\n\n/**\n * This class matches UTF-16 and UTF-32, both big- and little-endian. The\n * BOM will be used if it is present.\n */\nmodule.exports.UTF_16BE = function() {\n  this.name = function() {\n    return 'UTF-16BE';\n  };\n  this.match = function(det) {\n    var input = det.fRawInput;\n\n    if (input.length >= 2 && ((input[0] & 0xff) == 0xfe && (input[1] & 0xff) == 0xff))\n      return new Match(det, this, confidence = 100);\n\n    // TODO: Do some statistics to check for unsigned UTF-16BE\n    return null;\n  };\n};\n\nmodule.exports.UTF_16LE = function() {\n  this.name = function() {\n    return 'UTF-16LE';\n  };\n  this.match = function(det) {\n    var input = det.fRawInput;\n\n    if (input.length >= 2 && ((input[0] & 0xff) == 0xff && (input[1] & 0xff) == 0xfe)) {\n       // An LE BOM is present.\n       if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00)\n         // It is probably UTF-32 LE, not UTF-16\n         return null;\n\n       return new Match(det, this, confidence = 100);\n    }\n\n    // TODO: Do some statistics to check for unsigned UTF-16LE\n    return null;\n  }\n};\n\nfunction UTF_32() {};\nUTF_32.prototype.match = function(det) {\n  var input      = det.fRawInput,\n    limit      = (det.fRawLength / 4) * 4,\n    numValid   = 0,\n    numInvalid = 0,\n    hasBOM     = false,\n    confidence = 0;\n\n  if (limit == 0)\n    return null;\n\n  if (this.getChar(input, 0) == 0x0000FEFF)\n    hasBOM = true;\n\n  for (var i = 0; i < limit; i += 4) {\n    var ch = this.getChar(input, i);\n\n    if (ch < 0 || ch >= 0x10FFFF || (ch >= 0xD800 && ch <= 0xDFFF))\n      numInvalid += 1;\n    else\n      numValid += 1;\n  }\n\n  // Cook up some sort of confidence score, based on presence of a BOM\n  //    and the existence of valid and/or invalid multi-byte sequences.\n  if (hasBOM && numInvalid == 0) {\n    confidence = 100;\n  } else if (hasBOM && numValid > numInvalid * 10) {\n    confidence = 80;\n  } else if (numValid > 3 && numInvalid == 0) {\n    confidence = 100;\n  } else if (numValid > 0 && numInvalid == 0) {\n    confidence = 80;\n  } else if (numValid > numInvalid * 10) {\n    // Probably corrupt UTF-32BE data.  Valid sequences aren't likely by chance.\n    confidence = 25;\n  }\n\n  // return confidence == 0 ? null : new CharsetMatch(det, this, confidence);\n  return confidence == 0 ? null : new Match(det, this, confidence);\n};\n\nmodule.exports.UTF_32BE = function() {\n  this.name = function() {\n    return 'UTF-32BE';\n  };\n  this.getChar = function(input, index) {\n    return (input[index + 0] & 0xff) << 24 | (input[index + 1] & 0xff) << 16 |\n         (input[index + 2] & 0xff) <<  8 | (input[index + 3] & 0xff);\n  };\n};\nutil.inherits(module.exports.UTF_32BE, UTF_32);\n\nmodule.exports.UTF_32LE = function() {\n  this.name = function() {\n    return 'UTF-32LE';\n  };\n  this.getChar = function(input, index) {\n    return (input[index + 3] & 0xff) << 24 | (input[index + 2] & 0xff) << 16 |\n         (input[index + 1] & 0xff) <<  8 | (input[index + 0] & 0xff);\n  };\n};\nutil.inherits(module.exports.UTF_32LE, UTF_32);\n","\nvar Match = require ('../match');\n\n/**\n * Charset recognizer for UTF-8\n */\nmodule.exports = function() {\n  this.name = function() {\n    return 'UTF-8';\n  };\n  this.match = function(det) {\n\n    var hasBOM = false,\n      numValid = 0,\n      numInvalid = 0,\n      input = det.fRawInput,\n      trailBytes = 0,\n      confidence;\n\n    if (det.fRawLength >= 3 &&\n      (input[0] & 0xff) == 0xef && (input[1] & 0xff) == 0xbb && (input[2] & 0xff) == 0xbf) {\n      hasBOM = true;\n    }\n\n    // Scan for multi-byte sequences\n    for (var i = 0; i < det.fRawLength; i++) {\n      var b = input[i];\n      if ((b & 0x80) == 0)\n        continue; // ASCII\n\n      // Hi bit on char found.  Figure out how long the sequence should be\n      if ((b & 0x0e0) == 0x0c0) {\n        trailBytes = 1;\n      } else if ((b & 0x0f0) == 0x0e0) {\n        trailBytes = 2;\n      } else if ((b & 0x0f8) == 0xf0) {\n        trailBytes = 3;\n      } else {\n        numInvalid++;\n        if (numInvalid > 5)\n          break;\n        trailBytes = 0;\n      }\n\n      // Verify that we've got the right number of trail bytes in the sequence\n      for (;;) {\n        i++;\n        if (i >= det.fRawLength)\n          break;\n\n        if ((input[i] & 0xc0) != 0x080) {\n          numInvalid++;\n          break;\n        }\n        if (--trailBytes == 0) {\n          numValid++;\n          break;\n        }\n      }\n    }\n\n    // Cook up some sort of confidence score, based on presense of a BOM\n    //    and the existence of valid and/or invalid multi-byte sequences.\n    confidence = 0;\n    if (hasBOM && numInvalid == 0)\n      confidence = 100;\n    else if (hasBOM && numValid > numInvalid * 10)\n      confidence = 80;\n    else if (numValid > 3 && numInvalid == 0)\n      confidence = 100;\n    else if (numValid > 0 && numInvalid == 0)\n      confidence = 80;\n    else if (numValid == 0 && numInvalid == 0)\n      // Plain ASCII.\n      confidence = 10;\n    else if (numValid > numInvalid * 10)\n      // Probably corruput utf-8 data.  Valid sequences aren't likely by chance.\n      confidence = 25;\n    else\n      return null\n\n    return new Match(det, this, confidence);\n  };\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: ((1 << 30) * 1024)\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = values;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = map;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    Set = getNative(root, 'Set'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each\n * element is kept.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length)\n    ? baseUniq(array)\n    : [];\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = uniq;\n","\nmodule.exports = function(det, rec, confidence, name, lang) {\n  this.confidence = confidence;\n  this.name = name || rec.name(det);\n  this.lang = lang;\n};\n","\nvar utf8  = require('./encoding/utf8'),\n  unicode = require('./encoding/unicode'),\n  mbcs    = require('./encoding/mbcs'),\n  sbcs    = require('./encoding/sbcs'),\n  iso2022 = require('./encoding/iso2022');\n\nvar self = this;\n\nvar recognisers = [\n  new utf8,\n  new unicode.UTF_16BE,\n  new unicode.UTF_16LE,\n  new mbcs.sjis,\n  new mbcs.euc_kr\n];\n\nmodule.exports.detect = function(buffer) {\n\n  // Tally up the byte occurence statistics.\n  var fByteStats = [];\n  for (var i = 0; i < 256; i++)\n    fByteStats[i] = 0;\n\n  for (var i = buffer.length - 1; i >= 0; i--)\n    fByteStats[buffer[i] & 0x00ff]++;\n\n  var fC1Bytes = false;\n  for (var i = 0x80; i <= 0x9F; i += 1) {\n    if (fByteStats[i] != 0) {\n      fC1Bytes = true;\n      break;\n    }\n  }\n\n  var context = {\n    fByteStats:  fByteStats,\n    fC1Bytes:    fC1Bytes,\n    fRawInput:   buffer,\n    fRawLength:  buffer.length,\n    fInputBytes: buffer,\n    fInputLen:   buffer.length\n  };\n\n  var match = recognisers.map(function(rec) {\n    return rec.match(context);\n  }).filter(function(match) {\n    return !!match;\n  }).sort(function(a, b) {\n    return a.confidence - b.confidence;\n  }).pop();\n\n  return match ? match.name : null;\n};\n","\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n"],"sourceRoot":""}
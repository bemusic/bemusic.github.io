{"version":3,"sources":["file:///home/ubuntu/bemuse/src/scintillator/expression/index.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/concerns/display-object.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/lib/utils.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/concerns/animation.js","file:///home/ubuntu/bemuse/src/scintillator/index.js","file:///home/ubuntu/bemuse/src/scintillator/resources.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/text.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/sprite.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/skin-root.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/object.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/if.js","file:///home/ubuntu/bemuse/src/scintillator/expression/parser.pegjs","file:///home/ubuntu/bemuse/src/scintillator/nodes/group.js","file:///home/ubuntu/bemuse/src/scintillator/compiler.js","file:///home/ubuntu/bemuse/src/scintillator/loader.js","file:///home/ubuntu/bemuse/src/scintillator/context.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/lib/instance.js","file:///home/ubuntu/bemuse/src/scintillator/nodes/lib/base.js"],"names":["Expression","_debug","__webpack_require__","_parser","log","_debug2","default","createFunction","code","fn","eval","displayName","constant","test","text","_parser2","parse","f","evaluate","data","key","PIXI","properties","name","apply","obj","v","x","y","scale","alpha","width","height","visible","DisplayObject","compiler","$el","this","_animation","_animation2","compile","_bindings","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","property","value","attr","expression","_expression2","getter","prop","push","err","return","blendMode","BLEND_MODES","NORMAL","SCREEN","Error","parseBlendMode","ref","context","subject","_this2","object","bindings","onDestroy","i","length","binding","bind","unref","_instance2","parseFrame","m","match","Rectangle","_compile","_attrs","createKeytime","def","Object","assign","_keytime2","Animation","animations","timeKey","_classCallCheck","_timeKey","_properties","_lodash2","map","animation","flatten","thru","array","Set","_animations","_events","uniq","fallback","_this","has","values","_getAnimation","hasOwnProperty","event","filter","e","maxBy","t","a","on","concat","_toConsumableArray","animationElements","Array","from","children","el","_jquery2","keyframes","attrs","keyframe","time","ease","isNaN","attributes","n","toLowerCase","fromPairs","getSkinUrl","arguments","displayMode","window","innerWidth","innerHeight","_context","_loader","load","Context","_lodash","Resources","_map","src","url","TextNode","font","display","_displayObject2","ttf","fill","align","container","Text","extras","BitmapText","Container","addChild","parent","concerns","replace","updateText","_utils","SpriteNode","resources","get","frame","anchorX","anchorY","sprite","Sprite","getTexture","anchor","_texture","scaleMode","SCALE_MODES","NEAREST","base","BaseTexture","fromImage","texture","Texture","SkinRootNode","compileChildren","stage","Stage","ChildManager","expr","child","poolSize","instantiate","instances","Map","pool","instance","detach","initPool","onData","item","unused","keys","createInstance","set","delete","update","pop","attachTo","ObjectNode","batch","ParticleContainer","position","manager","IfNode","String","childNode","destroy","peg$SyntaxError","message","expected","found","location","captureStackTrace","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parseexpr","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","first","rest","operate","combine","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","val","peg$c23","peg$otherExpectation","peg$c24","peg$c25","peg$c26","peg$classExpectation","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","JSON","stringify","peg$c40","peg$c41","peg$c42","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","peg$buildStructuredError","peg$parselogical_or","s0","s1","s2","s3","s4","s5","s6","s7","peg$parselogical_and","peg$parse_","substr","peg$parseadd","peg$parsemul","peg$parseval","charAt","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsenumber","peg$parseidentifier","Mask","_frame","mask","Graphics","beginFill","drawShape","endFill","GroupNode","maskFrame","NODES","skin","group","if","Compiler","env","_defs","nodeName","Node","getNodeClass","output","compileDefs","getDef","getAttribute","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","id","node","xmlPath","progress","_co2","regeneratorRuntime","mark","_callee","$xml","paths","element","_element","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","path","assetUrl","wrap","prev","xmlUrl","Promise","resolve","ajax","dataType","then","xml","documentElement","sent","_resources2","find","add","t0","finish","t1","_url3","t2","loadResources","_compiler2","abrupt","stop","_formatters","urls","loader","loaders","Loader","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","once","formatter","PERCENTAGE_FORMATTER","report","createRenderer","w","h","utils","canUseNewCanvasBlendModes","CanvasRenderer","transparent","refs","_skin","_instance","_renderer","view","skinData","_setupInteractivity","render","_teardownInteractivity","mouse","touches","onMouse","onUpdateMouse","onNoMouse","onTouch","call","point","rect","clientX","left","clientY","top","addEventListener","removeEventListener","_input","getBoundingClientRect","touch","identifier","_callbacks","Instance","_object","_children","_concerns","_callbacks2","concern","onCreate","_len","pipeline","_key","sideEffect","_parent","removeChild","SkinNode"],"mappings":"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","file":"gameEngine~playground~test-f76e86a7706d0fbc5012.js","sourcesContent":["import debug from 'debug'\n\nimport parser from './parser.pegjs'\n\nconst log = debug('scintillator:expression')\n\nfunction createFunction (code) {\n  let fn = eval('(function(get) { return ' + code + ' })') // eslint-disable-line no-eval\n  fn.displayName = '(' + code + ')'\n  fn.constant = !!/^[-0-9.]+$/.test(code)\n  return fn\n}\n\nexport function Expression (text) {\n  log('parsing %s', text)\n  let code = parser.parse(text)\n  log('parsed %s => %s', text, code)\n  let f = createFunction(code)\n  let evaluate\n  if (f.constant) {\n    evaluate = f\n  } else {\n    evaluate = function (data) {\n      return f(function (key) {\n        return data[key]\n      })\n    }\n  }\n  evaluate.constant = f.constant\n  return evaluate\n}\n\nexport default Expression\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from '../lib/base'\nimport Instance from '../lib/instance'\n\nimport Expression from '../../expression'\nimport Animation from './animation'\n\n// Numeric properties that may be interpreted as expressions.\nlet properties = [\n  { name: 'x', default: '0', apply: (obj, v) => (obj.x = v) },\n  { name: 'y', default: '0', apply: (obj, v) => (obj.y = v) },\n  { name: 'scale-x', default: '1', apply: (obj, v) => (obj.scale.x = v) },\n  { name: 'scale-y', default: '1', apply: (obj, v) => (obj.scale.y = v) },\n  { name: 'alpha', default: '1', apply: (obj, v) => (obj.alpha = v) },\n  { name: 'width', apply: (obj, v) => (obj.width = v) },\n  { name: 'height', apply: (obj, v) => (obj.height = v) },\n  { name: 'visible', apply: (obj, v) => (obj.visible = v) }\n]\n\nexport class DisplayObject extends SkinNode {\n  compile (compiler, $el) {\n    this._animation = Animation.compile(compiler, $el)\n    this._bindings = []\n    for (let property of properties) {\n      let code = $el.attr(property.name) || property.default\n      if (!code) continue\n      let expression = new Expression(code)\n      let getter = this._animation.prop(property.name, expression)\n      this._bindings.push({\n        getter: getter,\n        apply: property.apply\n      })\n    }\n    this.blendMode = parseBlendMode($el.attr('blend') || 'normal')\n    this.ref = $el.attr('ref') || null\n  }\n  instantiate (context, subject) {\n    var object = subject.object\n    var bindings = []\n    var onDestroy = null\n    object.blendMode = this.blendMode\n    for (var i = 0; i < this._bindings.length; i++) {\n      var binding = this._bindings[i]\n      bindings.push([binding.getter, binding.apply.bind(null, object)])\n    }\n    if (this.ref) {\n      context.ref(this.ref, object)\n      onDestroy = () => context.unref(this.ref, object)\n    }\n    return new Instance({\n      bindings: bindings,\n      onDestroy: onDestroy\n    })\n  }\n}\n\nfunction parseBlendMode (text) {\n  if (text === 'normal') return PIXI.BLEND_MODES.NORMAL\n  if (text === 'screen') return PIXI.BLEND_MODES.SCREEN\n  throw new Error('Invalid blend mode: ' + text)\n}\n\nexport default DisplayObject\n","import * as PIXI from 'pixi.js'\n\nexport function parseFrame (text) {\n  let m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/)\n  if (!m) return null\n  return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2])\n}\n","import _ from 'lodash'\nimport $ from 'jquery'\nimport keytime from 'keytime'\n\nlet createKeytime = def => Object.assign({}, def, { data: keytime(def.data) })\n\nexport class Animation {\n  constructor (animations, timeKey) {\n    this._timeKey = timeKey || 't'\n    this._properties = _(animations)\n      .map(animation => _.map(animation.data, 'name'))\n      .flatten()\n      .thru(array => new Set(array))\n      .value()\n    this._animations = _.map(animations, createKeytime)\n    this._events = _.uniq(_.map(animations, 'on'))\n  }\n  prop (name, fallback) {\n    if (!this._properties.has(name)) {\n      return fallback\n    }\n    return data => {\n      let values = this._getAnimation(data)\n      if (values.hasOwnProperty(name)) {\n        return values[name]\n      } else {\n        return fallback(data)\n      }\n    }\n  }\n  _getAnimation (data) {\n    let event = _(this._events)\n      .filter(e => e === '' || e in data)\n      .maxBy(e => data[e] || 0)\n    let t = data[this._timeKey] - (data[event] || 0)\n    let animations = this._animations.filter(a => a.on === event)\n    let values = animations.map(a => a.data.values(t))\n    return Object.assign({}, ...values)\n  }\n  static compile (compiler, $el) {\n    let animationElements = Array.from($el.children('animation'))\n    let animations = _.map(animationElements, el => _compile($(el)))\n    let timeKey = $el.attr('t') || 't'\n    return new Animation(animations, timeKey)\n  }\n}\n\nexport function _compile ($el) {\n  let keyframes = _.map(Array.from($el.children('keyframe')), _attrs)\n  let attrs = {}\n  for (let keyframe of keyframes) {\n    let time = +keyframe.t\n    let ease = keyframe.ease || 'linear'\n    if (isNaN(time)) throw new Error('Expected keyframe to have \"t\" attribute')\n    for (let key in keyframe) {\n      if (key === 't' || key === 'ease') continue\n      let value = +keyframe[key]\n      let attr = attrs[key] || (attrs[key] = _createKeyframes(key))\n      attr.keyframes.push({ time, value, ease })\n    }\n  }\n  return {\n    on: $el.attr('on') || '',\n    data: _.values(attrs)\n  }\n}\n\nfunction _createKeyframes (name) {\n  return { name, keyframes: [] }\n}\n\nexport function _attrs (el) {\n  return _(el.attributes)\n    .map(n => [n.name.toLowerCase(), n.value])\n    .fromPairs()\n    .value()\n}\n\nexport default Animation\n","import { Context } from './context'\nimport { load } from './loader'\n\nexport { load, Context }\n\nexport function getSkinUrl ({ displayMode } = {}) {\n  if (displayMode === 'touch3d') {\n    return '/skins/default/skin_touch3d.xml'\n  } else {\n    if (window.innerWidth < window.innerHeight) {\n      return '/skins/default/skin_touch.xml'\n    } else {\n      return '/skins/default/skin_screen.xml'\n    }\n  }\n}\n","import _ from 'lodash'\n\n/**\n * The resources class contains a mapping from an image \"src\" to the resolved\n * image \"url.\"\n */\nexport class Resources {\n  constructor () {\n    this._map = {}\n  }\n  add (src, url) {\n    this._map[src] = url\n  }\n  get (src) {\n    if (!(src in this._map)) throw new Error('Not registered: ' + src)\n    return this._map[src]\n  }\n  get urls () {\n    return _.values(this._map)\n  }\n}\n\nexport default Resources\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport DisplayObject from './concerns/display-object'\nimport Expression from '../expression'\n\nexport class TextNode extends SkinNode {\n  compile (compiler, $el) {\n    this.font = $el.attr('font')\n    this.text = $el.attr('text')\n    this.data = new Expression($el.attr('data') || '0')\n    this.display = DisplayObject.compile(compiler, $el)\n    this.ttf = !$el.attr('font-src')\n    this.fill = $el.attr('fill')\n    this.align =\n      $el.attr('align') === 'left' ? 0 : $el.attr('align') === 'right' ? 1 : 0.5\n  }\n  instantiate (context, container) {\n    let text\n    if (this.ttf) {\n      text = new PIXI.Text(this.text, {\n        font: this.font,\n        fill: this.fill\n      })\n    } else {\n      text = new PIXI.extras.BitmapText(this.text, { font: this.font })\n    }\n    let object = new PIXI.Container()\n    object.addChild(text)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      concerns: [this.display],\n      bindings: [\n        [\n          this.data,\n          v => {\n            text.text = this.text.replace('%s', v)\n            text.updateText()\n            text.x = text.width * -this.align\n          }\n        ]\n      ]\n    })\n  }\n}\n\nexport default TextNode\n","import * as PIXI from 'pixi.js'\n\nimport DisplayObject from './concerns/display-object'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\nimport { parseFrame } from './lib/utils'\n\nexport class SpriteNode extends SkinNode {\n  compile (compiler, $el) {\n    this.url = compiler.resources.get($el.attr('image'))\n    this.display = DisplayObject.compile(compiler, $el)\n    this.frame = parseFrame($el.attr('frame') || '')\n    this.anchorX = +$el.attr('anchor-x') || 0\n    this.anchorY = +$el.attr('anchor-y') || 0\n  }\n  instantiate (context, container) {\n    let sprite = new PIXI.Sprite(this.getTexture())\n    sprite.anchor.x = this.anchorX\n    sprite.anchor.y = this.anchorY\n    return new Instance({\n      context: context,\n      object: sprite,\n      parent: container,\n      concerns: [this.display]\n    })\n  }\n  getTexture () {\n    if (this._texture) return this._texture\n    let scaleMode = PIXI.SCALE_MODES.NEAREST\n    let base = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode)\n    let texture = new PIXI.Texture(base, this.frame)\n    this._texture = texture\n    return texture\n  }\n}\n\nexport default SpriteNode\n","import * as PIXI from 'pixi.js'\n\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nexport class SkinRootNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.width = +$el.attr('width')\n    this.height = +$el.attr('height')\n    this.data = $el.data()\n  }\n  instantiate (context) {\n    let stage = new PIXI.Stage(0x090807)\n    return new Instance({\n      context: context,\n      object: stage,\n      children: this.children\n    })\n  }\n}\n\nexport default SkinRootNode\n","import * as PIXI from 'pixi.js'\n\nimport Expression from '../expression'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nfunction ChildManager (expr, child, poolSize) {\n  return {\n    instantiate (context, subject) {\n      let instances = new Map()\n      let pool = []\n      initPool()\n      return new Instance({\n        context: context,\n        onData: data => {\n          update(expr(data))\n        }\n      })\n      function initPool () {\n        var instance\n        for (var i = 0; i < poolSize; i++) {\n          instance = child.instantiate(context, subject.object)\n          instance.detach()\n          pool.push(instance)\n        }\n      }\n      function update (array) {\n        var unused = new Set(instances.keys())\n        var key\n        var item\n        var instance\n        if (!array) array = []\n        for (var i = 0; i < array.length; i++) {\n          item = array[i]\n          key = item.key\n          if (instances.has(key)) {\n            instance = instances.get(key)\n          } else {\n            instance = createInstance()\n            instances.set(key, instance)\n          }\n          instance.push(item)\n          unused.delete(key)\n        }\n        for (key of unused) {\n          instance = instances.get(key)\n          instance.detach()\n          instances.delete(key)\n          pool.push(instance)\n        }\n      }\n      function createInstance () {\n        var instance = pool.pop()\n        if (instance) {\n          instance.attachTo(subject.object)\n        } else {\n          instance = child.instantiate(context, subject.object)\n        }\n        return instance\n      }\n    }\n  }\n}\n\nexport class ObjectNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    if (this.children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + this.children.length + ' given'\n      )\n    }\n    this.pool = +$el.attr('pool') || 1\n    this.key = new Expression($el.attr('key'))\n  }\n  instantiate (context, container) {\n    let batch = new PIXI.ParticleContainer(null, {\n      position: true,\n      alpha: true\n    })\n    let manager = new ChildManager(this.key, this.children[0], this.pool)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: batch,\n      concerns: [manager]\n    })\n  }\n}\n\nexport default ObjectNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport Expression from '../expression'\n\nexport class IfNode extends SkinNode {\n  compile (compiler, $el) {\n    let children = compiler.compileChildren($el)\n    if (children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + children.length + ' found'\n      )\n    }\n    this.child = children[0]\n    this.key = new Expression($el.attr('key'))\n    this.value = String($el.attr('value'))\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let expr = this.key\n    let value = this.value\n    let childNode = this.child\n    let child = null\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      onData: data => {\n        if (String(expr(data)) === value) {\n          if (child === null) {\n            child = childNode.instantiate(context, object)\n          }\n          child.push(data)\n        } else {\n          if (child !== null) {\n            child.destroy()\n            child = null\n          }\n        }\n      }\n    })\n  }\n}\n\nexport default IfNode\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { expr: peg$parseexpr },\n      peg$startRuleFunction  = peg$parseexpr,\n\n      peg$c0 = \"||\",\n      peg$c1 = peg$literalExpectation(\"||\", false),\n      peg$c2 = function(first, rest) {\n            return combine(first, rest);\n          },\n      peg$c3 = \"&&\",\n      peg$c4 = peg$literalExpectation(\"&&\", false),\n      peg$c5 = \"+\",\n      peg$c6 = peg$literalExpectation(\"+\", false),\n      peg$c7 = \"-\",\n      peg$c8 = peg$literalExpectation(\"-\", false),\n      peg$c9 = \"*\",\n      peg$c10 = peg$literalExpectation(\"*\", false),\n      peg$c11 = \"/\",\n      peg$c12 = peg$literalExpectation(\"/\", false),\n      peg$c13 = \"%\",\n      peg$c14 = peg$literalExpectation(\"%\", false),\n      peg$c15 = \"(\",\n      peg$c16 = peg$literalExpectation(\"(\", false),\n      peg$c17 = \")\",\n      peg$c18 = peg$literalExpectation(\")\", false),\n      peg$c19 = function(expr) { return \"(\" + expr + \")\"; },\n      peg$c20 = \"!\",\n      peg$c21 = peg$literalExpectation(\"!\", false),\n      peg$c22 = function(val) { return \"!\" + val },\n      peg$c23 = peg$otherExpectation(\"number\"),\n      peg$c24 = function() { return text(); },\n      peg$c25 = /^[eE]/,\n      peg$c26 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c27 = /^[0-9]/,\n      peg$c28 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c29 = \".\",\n      peg$c30 = peg$literalExpectation(\".\", false),\n      peg$c31 = \"0\",\n      peg$c32 = peg$literalExpectation(\"0\", false),\n      peg$c33 = /^[1-9]/,\n      peg$c34 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c35 = /^[a-zA-Z]/,\n      peg$c36 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c37 = /^[a-zA-Z0-9_]/,\n      peg$c38 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c39 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n      peg$c40 = peg$otherExpectation(\"whitespace\"),\n      peg$c41 = /^[ \\t\\n\\r]/,\n      peg$c42 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseexpr() {\n    var s0;\n\n    s0 = peg$parselogical_or();\n\n    return s0;\n  }\n\n  function peg$parselogical_or() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parselogical_and();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c0) {\n          s5 = peg$c0;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parselogical_and();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c0) {\n            s5 = peg$c0;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parselogical_and();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselogical_and() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseadd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c3) {\n          s5 = peg$c3;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseadd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s5 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseadd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseadd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemul();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsemul();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemul();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemul() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseval();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c11;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseval();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c11;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseval();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseval() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselogical_or();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c19(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseval();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseint();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefrac();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexp();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c24();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (peg$c25.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s2 = peg$c5;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c27.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c29;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c31;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c33.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c35.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c37.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c41.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n\n    function operate(item) {\n      var operator = item[1]\n      var operand = item[3]\n      return \" \" + operator + \" \" + operand\n    }\n    function combine(first, rest) {\n      return first + rest.map(operate).join('')\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\n\nimport DisplayObject from './concerns/display-object'\nimport { parseFrame } from './lib/utils'\n\nexport class Mask {\n  constructor (frame) {\n    this._frame = frame\n  }\n  instantiate (context, subject) {\n    let mask = new PIXI.Graphics()\n    mask.beginFill()\n    mask.drawShape(this._frame)\n    mask.endFill()\n    subject.object.mask = mask\n    return new Instance({\n      context: context,\n      object: mask,\n      parent: subject.object\n    })\n  }\n}\n\nexport class GroupNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.display = DisplayObject.compile(compiler, $el)\n    let maskFrame = parseFrame($el.attr('mask') || '')\n    if (maskFrame) this.mask = new Mask(maskFrame)\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let concerns = [this.display]\n    if (this.mask) {\n      concerns.push(this.mask)\n    }\n    return new Instance({\n      context: context,\n      object: object,\n      parent: container,\n      concerns: concerns,\n      children: this.children\n    })\n  }\n}\n\nexport default GroupNode\n","import $ from 'jquery'\nimport debug from 'debug'\n\nimport GroupNode from './nodes/group'\nimport IfNode from './nodes/if'\nimport ObjectNode from './nodes/object'\nimport SkinRootNode from './nodes/skin-root'\nimport SpriteNode from './nodes/sprite'\nimport TextNode from './nodes/text'\n\nconst log = debug('scintillator:compiler')\n\nlet NODES = {\n  skin: SkinRootNode,\n  sprite: SpriteNode,\n  group: GroupNode,\n  object: ObjectNode,\n  text: TextNode,\n  if: IfNode\n}\n\n/**\n * A Compiler compiles the $xml theme file into SkinNode.\n */\nclass Compiler {\n  constructor (env) {\n    Object.assign(this, env)\n    this._defs = new Map()\n  }\n  compile ($el) {\n    let nodeName = $el[0].nodeName\n    log('compiling', $el[0])\n    let Node = Compiler.getNodeClass(nodeName)\n    if (!Node) throw new Error('Invalid node name: ' + nodeName)\n    return Node.compile(this, $el)\n  }\n  compileChildren ($el) {\n    let output = []\n    for (let child of Array.from($el.children())) {\n      let nodeName = child.nodeName\n      if (nodeName === 'defs') {\n        this.compileDefs($(child))\n      } else if (nodeName === 'use') {\n        output.push(this.getDef(child.getAttribute('def')))\n      } else {\n        let Node = Compiler.getNodeClass(nodeName)\n        if (Node) output.push(this.compile($(child)))\n      }\n    }\n    return output\n  }\n  compileDefs ($el) {\n    for (let child of Array.from($el.children())) {\n      let id = child.getAttribute('id')\n      if (!id) throw new Error('A def should have an id: ' + child.nodeName)\n      this._defs.set(id, this.compile($(child)))\n    }\n  }\n  getDef (id) {\n    let node = this._defs.get(id)\n    if (!node) throw new Error('Cannot find def: ' + id)\n    return node\n  }\n\n  static getNodeClass (nodeName) {\n    return NODES[nodeName]\n  }\n}\n\nexport default Compiler\n","import * as PIXI from 'pixi.js'\nimport $ from 'jquery'\nimport co from 'co'\nimport debug from 'debug'\nimport url from 'url'\nimport { PERCENTAGE_FORMATTER } from 'bemuse/progress/formatters'\n\nimport Compiler from './compiler'\nimport Resources from './resources'\n\nconst log = debug('scintillator:loader')\n\nexport function load (xmlPath, progress) {\n  return co(function * () {\n    log('load XML from %s', xmlPath)\n    let $xml = yield loadXml(xmlPath)\n\n    // scan all images\n    let resources = new Resources()\n    let paths = new Set()\n    for (let element of Array.from($xml.find('[image]'))) {\n      paths.add($(element).attr('image'))\n    }\n    for (let element of Array.from($xml.find('[font-src]'))) {\n      paths.add($(element).attr('font-src'))\n    }\n    for (let path of paths) {\n      let assetUrl = url.resolve(xmlPath, path)\n      resources.add(path, assetUrl)\n    }\n\n    // load all images + progress reporting\n    yield loadResources(resources, progress)\n\n    // compile the skin\n    log('compiling')\n    let skin = new Compiler({ resources }).compile($xml)\n\n    return skin\n  })\n}\n\nfunction loadXml (xmlUrl) {\n  return Promise.resolve($.ajax({ url: xmlUrl, dataType: 'xml' })).then(xml =>\n    $(xml.documentElement)\n  )\n}\n\nfunction loadResources (resources, progress) {\n  log('loading resources')\n  return new Promise(function (resolve) {\n    if (resources.urls.length === 0) return resolve()\n    let loader = new PIXI.loaders.Loader()\n    for (let url of resources.urls) {\n      loader.add(url, url)\n    }\n    loader.once('complete', function () {\n      log('resources finished loading')\n      resolve()\n    })\n    if (progress) {\n      progress.formatter = PERCENTAGE_FORMATTER\n      loader.once('complete', function () {\n        progress.report(100, 100)\n      })\n      loader.on('progress', function () {\n        progress.report(loader.progress, 100)\n      })\n    }\n    loader.load()\n  })\n}\n","import * as PIXI from 'pixi.js'\n\nfunction createRenderer (w, h) {\n  hackPIXIToForceNewBlendModes()\n\n  // For now, we are using CanvasRenderer instead of WebGLRenderer or\n  // autoDetectRenderer befcause of two reasons.\n  // 1. Current implementation has some problem with rendering\n  //    sprite batches: https://github.com/pixijs/pixi.js/issues/1910\n  // 2. It seems that Canvas performs better on some browsers, i.e. Chrome.\n  //    WebGLRenderer only performs better on Firefox from the experiment.\n  return new PIXI.CanvasRenderer(w, h, { transparent: true })\n}\n\n// HACK: Sometimes, when using the canvas renderer,\n// the blend mode is not properly set.\nfunction hackPIXIToForceNewBlendModes () {\n  PIXI.utils.canUseNewCanvasBlendModes = () => true\n}\n\nexport class Context {\n  constructor (skin) {\n    this.refs = {}\n    this._skin = skin\n    this._instance = skin.instantiate(this)\n    this._renderer = createRenderer(skin.width, skin.height)\n    this.stage = this._instance.object\n    this.view = this._renderer.view\n    this.skinData = skin.data\n    this._setupInteractivity()\n  }\n  render (data) {\n    this._instance.push(data)\n    this._renderer.render(this.stage)\n  }\n  destroy () {\n    this._instance.destroy()\n    this._instance = null\n    this._teardownInteractivity()\n  }\n  get input () {\n    return this._input.get()\n  }\n  ref (key, object) {\n    let set = this.refs[key] || (this.refs[key] = new Set())\n    set.add(object)\n  }\n  unref (key, object) {\n    let set = this.refs[key]\n    if (!set) return\n    set.delete(object)\n  }\n  _setupInteractivity () {\n    let mouse = null\n    let touches = []\n    let onMouse = e => {\n      mouse = e\n    }\n    let onUpdateMouse = e => {\n      mouse = mouse && e\n    }\n    let onNoMouse = () => {\n      mouse = null\n    }\n    let onTouch = e => {\n      touches = [].slice.call(e.touches)\n    }\n    let view = this.view\n    let width = this._skin.width\n    let height = this._skin.height\n    view.addEventListener('mousedown', onMouse, false)\n    view.addEventListener('mousemove', onUpdateMouse, false)\n    view.addEventListener('mouseup', onNoMouse, false)\n    view.addEventListener('touchstart', onTouch, false)\n    view.addEventListener('touchmove', onTouch, false)\n    view.addEventListener('touchend', onTouch, false)\n    this._teardownInteractivity = () => {\n      view.removeEventListener('mousedown', onMouse, false)\n      view.removeEventListener('mousemove', onUpdateMouse, false)\n      view.removeEventListener('mouseup', onNoMouse, false)\n      view.removeEventListener('touchstart', onTouch, false)\n      view.removeEventListener('touchmove', onTouch, false)\n      view.removeEventListener('touchend', onTouch, false)\n    }\n    this._input = {\n      get: () => {\n        let output = []\n        let rect = this.view.getBoundingClientRect()\n        if (mouse) {\n          output.push(point('mouse', mouse, rect))\n        }\n        for (let i = 0; i < touches.length; i++) {\n          let touch = touches[i]\n          output.push(point('touch' + touch.identifier, touch, rect))\n        }\n        return output\n      }\n    }\n    function point (id, p, rect) {\n      return {\n        x: (p.clientX - rect.left) / rect.width * width,\n        y: (p.clientY - rect.top) / rect.height * height,\n        id: id\n      }\n    }\n  }\n}\n\nexport default Context\n","import Callbacks from 'bemuse/utils/callbacks'\n\nexport class Instance {\n  constructor (options) {\n    this._context = options.context\n    this._object = options.object\n    this._children = options.children\n    this._bindings = []\n    this._concerns = []\n    this.onData = new Callbacks(options.onData)\n    this.onDestroy = new Callbacks(options.onDestroy)\n    if (options.bindings) {\n      for (let binding of options.bindings) {\n        this.bind(...binding)\n      }\n    }\n    if (options.concerns) {\n      for (let concern of options.concerns) {\n        this._concerns.push(concern.instantiate(this._context, this))\n      }\n    }\n    if (options.children) {\n      for (let children of options.children) {\n        this._concerns.push(children.instantiate(this._context, this._object))\n      }\n    }\n    if (options.onCreate) {\n      new Callbacks(options.onCreate).call()\n    }\n    if (options.parent) {\n      this.attachTo(options.parent)\n    }\n  }\n  bind (...pipeline) {\n    let sideEffect = onChange(pipeline.pop())\n    if (pipeline.length === 1 && pipeline[0].constant) {\n      // optimize: don't add binding when expression is constant --\n      // just do it once\n      sideEffect(pipeline[0]())\n    } else {\n      this._bindings.push(value => {\n        for (var i = 0; i < pipeline.length; i++) {\n          value = pipeline[i](value)\n        }\n        sideEffect(value)\n      })\n    }\n  }\n  attachTo (parent) {\n    this._parent = parent\n    this._parent.addChild(this._object)\n  }\n  detach () {\n    if (this._parent) {\n      this._parent.removeChild(this._object)\n      this._parent = null\n    }\n  }\n  push (value) {\n    var i\n    for (i = 0; i < this._bindings.length; i++) {\n      this._bindings[i](value)\n    }\n    for (i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].push(value)\n    }\n    this.onData.call(value)\n  }\n  destroy () {\n    this.detach()\n    for (var i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].destroy()\n    }\n    this.onDestroy.call()\n    this._concerns = null\n    this._bindings = null\n    this._parent = null\n    this._object = null\n  }\n  get object () {\n    return this._object\n  }\n  get parent () {\n    return this._parent\n  }\n}\n\nfunction onChange (f) {\n  let value\n  return function receiveNewValue (v) {\n    if (value !== v) {\n      value = v\n      f(v)\n    }\n  }\n}\n\nexport default Instance\n","/**\n * A SkinNode is an internal representation of a Skin.\n *\n * Node.compile     :: (compiler, $xml) -> Node\n *\n * To implement:\n *\n * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n */\nexport class SkinNode {\n  static compile (compiler, $el) {\n    let node = new this()\n    node.compile(compiler, $el)\n    return node\n  }\n}\n\nexport default SkinNode\n"],"sourceRoot":""}
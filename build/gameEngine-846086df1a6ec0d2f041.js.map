{"version":3,"sources":["file:///home/circleci/bemuse/src/scintillator/expression/index.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/animation.js","file:///home/circleci/bemuse/src/scintillator/expression/parser.pegjs","file:///home/circleci/bemuse/src/scintillator/context.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/base.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/instance.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/display-object.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/utils.js","file:///home/circleci/bemuse/src/scintillator/nodes/group.js","file:///home/circleci/bemuse/src/scintillator/nodes/if.js","file:///home/circleci/bemuse/src/scintillator/nodes/object.js","file:///home/circleci/bemuse/src/scintillator/nodes/skin-root.js","file:///home/circleci/bemuse/src/scintillator/nodes/sprite.js","file:///home/circleci/bemuse/src/scintillator/nodes/text.js","file:///home/circleci/bemuse/src/scintillator/compiler.js","file:///home/circleci/bemuse/src/scintillator/resources.js","file:///home/circleci/bemuse/src/scintillator/loader.js","file:///home/circleci/bemuse/src/scintillator/index.js"],"names":["debug__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","debug__WEBPACK_IMPORTED_MODULE_0___default","n","_parser_pegjs__WEBPACK_IMPORTED_MODULE_1__","_parser_pegjs__WEBPACK_IMPORTED_MODULE_1___default","log","createFunction","code","fn","eval","displayName","constant","test","Expression","text","a","parse","evaluate","f","data","key","__webpack_exports__","d","Animation","_compile","_attrs","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","keytime__WEBPACK_IMPORTED_MODULE_2__","keytime__WEBPACK_IMPORTED_MODULE_2___default","createKeytime","def","Object","assign","[object Object]","animations","timeKey","this","_timeKey","_properties","map","animation","flatten","thru","array","Set","value","_animations","_events","uniq","name","fallback","has","values","_getAnimation","hasOwnProperty","event","filter","e","maxBy","t","on","compiler","$el","animationElements","Array","from","children","el","attr","keyframes","attrs","keyframe","time","ease","isNaN","Error","_createKeyframes","push","attributes","toLowerCase","fromPairs","peg$SyntaxError","message","expected","found","location","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","i","escapedParts","parts","length","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","j","descriptions","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","expr","peg$parseexpr","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","first","rest","operate","combine","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","val","peg$c23","peg$otherExpectation","peg$c24","peg$c25","peg$c26","peg$classExpectation","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","JSON","stringify","peg$c40","peg$c41","peg$c42","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","peg$buildStructuredError","peg$parselogical_or","s0","s1","s2","s3","s4","s5","s6","s7","peg$parselogical_and","peg$parse_","substr","peg$parseadd","peg$parsemul","peg$parseval","charAt","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsenumber","peg$parseidentifier","item","createRenderer","w","h","lib","canUseNewCanvasBlendModes","transparent","Context","skin","refs","_skin","_instance","instantiate","_renderer","width","height","stage","object","view","skinData","_setupInteractivity","render","destroy","_teardownInteractivity","_input","get","add","set","delete","mouse","touches","onMouse","onUpdateMouse","onNoMouse","onTouch","call","point","id","rect","x","clientX","left","y","clientY","top","addEventListener","removeEventListener","output","getBoundingClientRect","touch","identifier","lib_base","node","compile","instance","_context","context","_object","_children","_bindings","_concerns","onData","callbacks","onDestroy","bindings","binding","bind","concerns","concern","onCreate","attachTo","pipeline","sideEffect","v","onChange","pop","_parent","addChild","removeChild","detach","properties","default","apply","obj","scale","alpha","visible","display_object","_animation","property","expression","scintillator_expression","getter","prop","blendMode","NORMAL","SCREEN","parseBlendMode","ref","subject","unref","parseFrame","m","match","group_Mask","frame","_frame","mask","beginFill","drawShape","endFill","group","compileChildren","display","maskFrame","container","nodes_if","String","childNode","ChildManager","poolSize","instances","Map","pool","initPool","unused","keys","createInstance","update","nodes_object","batch","ParticleContainer","undefined","position","manager","skin_root","nodes_sprite","url","resources","anchorX","anchorY","sprite","getTexture","anchor","_texture","scaleMode","NEAREST","base","fromImage","texture","nodes_text","font","ttf","fill","align","BitmapText","updateText","browser_default","NODES","if","compiler_Compiler","env","_defs","nodeName","Node","getNodeClass","compileDefs","jquery_default","getDef","getAttribute","scintillator_compiler","scintillator_resources","_map","src","urls","lodash_default","loader_log","load","xmlPath","progress","co_default","$xml","xmlUrl","Promise","resolve","ajax","dataType","then","xml","documentElement","loadXml","paths","element","find","path","assetUrl","url_default","loader","Loader","once","formatter","formatters","report","loadResources","getSkinUrl","displayMode","window","innerWidth","innerHeight"],"mappings":"gIAAA,IAAAA,mCAAAC,oBAAA,KAAAC,2CAAAD,oBAAAE,EAAAH,oCAAAI,2CAAAH,oBAAA,KAAAI,mDAAAJ,oBAAAE,EAAAC,4CAIA,MAAME,IAAMJ,6CAAM,2BAElB,SAASK,eAAeC,MACtB,IAAIC,GAAKC,KAAK,2BAA6BF,KAAO,OAGlD,OAFAC,GAAGE,YAAc,IAAMH,KAAO,IAC9BC,GAAGG,WAAa,aAAaC,KAAKL,MAC3BC,GAGF,SAASK,WAAWC,GACzBT,IAAI,aAAcS,GAClB,IAAIP,EAAOH,mDAAAW,EAAOC,MAAMF,GACxBT,IAAI,kBAAmBS,EAAMP,GAC7B,IACIU,EADAC,EAAIZ,eAAeC,GAYvB,OATEU,EADEC,EAAEP,SACOO,EAEA,SAASC,GAClB,OAAOD,EAAE,SAASE,GAChB,OAAOD,EAAKC,OAITT,SAAWO,EAAEP,SACfM,EAGMI,oBAAA,+CChCfrB,EAAAsB,EAAAD,EAAA,sBAAAE,IAAAvB,EAAAsB,EAAAD,EAAA,sBAAAG,IAAAxB,EAAAsB,EAAAD,EAAA,sBAAAI,IAAA,IAAAC,EAAA1B,EAAA,IAAA2B,EAAA3B,EAAAE,EAAAwB,GAAAE,EAAA5B,EAAA,IAAA6B,EAAA7B,EAAAE,EAAA0B,GAAAE,EAAA9B,EAAA,KAAA+B,EAAA/B,EAAAE,EAAA4B,GAIA,IAAIE,EAAgBC,GAAOC,OAAOC,UAAWF,GAAOd,KAAMY,IAAQE,EAAId,cAEzDI,EACXa,YAAYC,EAAYC,GACtBC,KAAKC,SAAWF,GAAW,IAC3BC,KAAKE,YAAcd,IAAEU,GAClBK,IAAIC,GAAahB,EAAAZ,EAAE2B,IAAIC,EAAUxB,KAAM,SACvCyB,UACAC,KAAKC,GAAS,IAAIC,IAAID,IACtBE,QACHT,KAAKU,YAActB,EAAAZ,EAAE2B,IAAIL,EAAYL,GACrCO,KAAKW,QAAUvB,EAAAZ,EAAEoC,KAAKxB,EAAAZ,EAAE2B,IAAIL,EAAY,OAE1CD,KAAKgB,EAAMC,GACT,OAAKd,KAAKE,YAAYa,IAAIF,GAGnBjC,IACL,IAAIoC,EAAShB,KAAKiB,cAAcrC,GAChC,OAAIoC,EAAOE,eAAeL,GACjBG,EAAOH,GAEPC,EAASlC,IAPXkC,EAWXjB,cAAcjB,GACZ,IAAIuC,EAAQ/B,IAAEY,KAAKW,SAChBS,OAAOC,GAAW,KAANA,GAAYA,KAAKzC,GAC7B0C,MAAMD,GAAKzC,EAAKyC,IAAM,GACrBE,EAAI3C,EAAKoB,KAAKC,WAAarB,EAAKuC,IAAU,GAE1CH,EADahB,KAAKU,YAAYU,OAAO5C,GAAKA,EAAEgD,KAAOL,GAC/BhB,IAAI3B,GAAKA,EAAEI,KAAKoC,OAAOO,IAC/C,OAAO5B,OAAOC,aAAcoB,GAE9BnB,eAAe4B,EAAUC,GACvB,IAAIC,EAAoBC,MAAMC,KAAKH,EAAII,SAAS,cAC5ChC,EAAaV,EAAAZ,EAAE2B,IAAIwB,EAAmBI,GAAM9C,EAASK,IAAEyC,KACvDhC,EAAU2B,EAAIM,KAAK,MAAQ,IAC/B,OAAO,IAAIhD,EAAUc,EAAYC,IAI9B,SAASd,EAASyC,GACvB,IAAIO,EAAY7C,EAAAZ,EAAE2B,IAAIyB,MAAMC,KAAKH,EAAII,SAAS,aAAc5C,GACxDgD,KACJ,IAAK,IAAIC,KAAYF,EAAW,CAC9B,IAAIG,GAAQD,EAASZ,EACjBc,EAAOF,EAASE,MAAQ,SAC5B,GAAIC,MAAMF,GAAO,MAAM,IAAIG,MAAM,2CACjC,IAAK,IAAI1D,KAAOsD,EAAU,CACxB,GAAY,MAARtD,GAAuB,SAARA,EAAgB,SACnC,IAAI4B,GAAS0B,EAAStD,IACXqD,EAAMrD,KAASqD,EAAMrD,GAAO2D,EAAiB3D,KACnDoD,UAAUQ,MAAOL,OAAM3B,QAAO4B,UAGvC,OACEb,GAAIE,EAAIM,KAAK,OAAS,GACtBpD,KAAMQ,EAAAZ,EAAEwC,OAAOkB,IAInB,SAASM,EAAiB3B,GACxB,OAASA,OAAMoB,cAGV,SAAS/C,EAAO6C,GACrB,OAAO3C,IAAE2C,EAAGW,YACTvC,IAAIxC,IAAMA,EAAEkD,KAAK8B,cAAehF,EAAE8C,QAClCmC,YACAnC,QAGU3B,EAAA,sCChEf,SAAA+D,EAAAC,EAAAC,EAAAC,EAAAC,GACAjD,KAAA8C,UACA9C,KAAA+C,WACA/C,KAAAgD,QACAhD,KAAAiD,WACAjD,KAAAa,KAAA,cAEA,mBAAA0B,MAAAW,mBACAX,MAAAW,kBAAAlD,KAAA6C,IAdA,SAAAM,EAAAC,GACA,SAAAC,IAAmBrD,KAAAsD,YAAAH,EACnBE,EAAAE,UAAAH,EAAAG,UACAJ,EAAAI,UAAA,IAAAF,EAeAG,CAAAX,EAAAN,OAEAM,EAAAY,aAAA,SAAAV,EAAAC,GACA,IAAAU,GACAC,QAAA,SAAAC,GACA,UAAAC,EAAAD,EAAArF,MAAA,KAGAuF,MAAA,SAAAF,GACA,IACAG,EADAC,EAAA,GAGA,IAAAD,EAAA,EAAqBA,EAAAH,EAAAK,MAAAC,OAA8BH,IACnDC,GAAAJ,EAAAK,MAAAF,aAAAnC,MACAuC,EAAAP,EAAAK,MAAAF,GAAA,QAAAI,EAAAP,EAAAK,MAAAF,GAAA,IACAI,EAAAP,EAAAK,MAAAF,IAGA,WAAAH,EAAAQ,SAAA,QAAAJ,EAAA,KAGAK,IAAA,SAAAT,GACA,uBAGAU,IAAA,SAAAV,GACA,sBAGAW,MAAA,SAAAX,GACA,OAAAA,EAAAY,cAIA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,WAAA,GAAAC,SAAA,IAAAC,cAGA,SAAAhB,EAAAiB,GACA,OAAAA,EACAC,QAAA,cACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBAAAL,GAAsD,aAAAD,EAAAC,KACtDK,QAAA,iCAAAL,GAAsD,YAAAD,EAAAC,KAGtD,SAAAP,EAAAW,GACA,OAAAA,EACAC,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,YACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBAAAL,GAAsD,aAAAD,EAAAC,KACtDK,QAAA,iCAAAL,GAAsD,YAAAD,EAAAC,KAGtD,SAAAM,EAAApB,GACA,OAAAF,EAAAE,EAAAqB,MAAArB,GAyCA,kBAtCA,SAAAb,GACA,IACAgB,EAAAmB,EADAC,EAAA,IAAAvD,MAAAmB,EAAAmB,QAGA,IAAAH,EAAA,EAAeA,EAAAhB,EAAAmB,OAAqBH,IACpCoB,EAAApB,GAAAiB,EAAAjC,EAAAgB,IAKA,GAFAoB,EAAAC,OAEAD,EAAAjB,OAAA,GACA,IAAAH,EAAA,EAAAmB,EAAA,EAAwBnB,EAAAoB,EAAAjB,OAAyBH,IACjDoB,EAAApB,EAAA,KAAAoB,EAAApB,KACAoB,EAAAD,GAAAC,EAAApB,GACAmB,KAGAC,EAAAjB,OAAAgB,EAGA,OAAAC,EAAAjB,QACA,OACA,OAAAiB,EAAA,GAEA,OACA,OAAAA,EAAA,UAAAA,EAAA,GAEA,QACA,OAAAA,EAAAE,MAAA,MAAAC,KAAA,MACA,QACAH,IAAAjB,OAAA,IAQAqB,CAAAxC,GAAA,QAJA,SAAAC,GACA,OAAAA,EAAA,IAAAa,EAAAb,GAAA,mBAGAwC,CAAAxC,GAAA,WAoiCAyC,EAAAC,SACAC,YAAA9C,EACApE,MAniCA,SAAAmH,EAAAC,GACAA,OAAA,IAAAA,OAEA,IA0DAC,EA1DAC,KAEAC,GAAgCC,KAAAC,IAChCC,EAAAD,GAEAE,EAAA,KACAC,EAAAC,GAAA,SACAC,EAAA,SAAAC,EAAAC,GACA,OA8/BA,SAAAD,EAAAC,GACA,OAAAD,EAAAC,EAAAtG,IAAAuG,IAAApB,KAAA,IA//BAqB,CAAAH,EAAAC,IAEAG,EAAA,KACAC,EAAAP,GAAA,SACAQ,EAAA,IACAC,EAAAT,GAAA,QACAU,EAAA,IACAC,EAAAX,GAAA,QACAY,EAAA,IACAC,EAAAb,GAAA,QACAc,EAAA,IACAC,EAAAf,GAAA,QACAgB,EAAA,IACAC,EAAAjB,GAAA,QACAkB,EAAA,IACAC,EAAAnB,GAAA,QACAoB,EAAA,IACAC,EAAArB,GAAA,QACAsB,EAAA,SAAA3B,GAAgC,UAAAA,EAAA,KAChC4B,EAAA,IACAC,EAAAxB,GAAA,QACAyB,EAAA,SAAAC,GAA+B,UAAAA,GAC/BC,EAAAC,GAAA,UACAC,EAAA,WAA4B,OAAA5J,MAC5B6J,EAAA,QACAC,EAAAC,IAAA,gBACAC,EAAA,SACAC,EAAAF,KAAA,iBACAG,EAAA,IACAC,EAAApC,GAAA,QACAqC,EAAA,IACAC,EAAAtC,GAAA,QACAuC,EAAA,SACAC,EAAAR,KAAA,iBACAS,EAAA,YACAC,EAAAV,KAAA,2BACAW,EAAA,gBACAC,EAAAZ,KAAA,yCACAa,EAAA,WAA4B,aAAAC,KAAAC,UAAA9K,MAAA,KAC5B+K,EAAApB,GAAA,cACAqB,EAAA,aACAC,EAAAlB,IAAA,2BAEAmB,EAAA,EACAC,EAAA,EACAC,IAA+BC,KAAA,EAAAC,OAAA,IAC/BC,EAAA,EACAC,MACAC,GAAA,EAIA,iBAAAnE,EAAA,CACA,KAAAA,EAAAoE,aAAAjE,GACA,UAAAzD,MAAA,mCAAAsD,EAAAoE,UAAA,MAGA9D,EAAAH,EAAAH,EAAAoE,WAGA,SAAA1L,KACA,OAAAqH,EAAAsE,UAAAR,EAAAD,GAuBA,SAAAnD,GAAA/H,EAAA4L,GACA,OAAYlF,KAAA,UAAA1G,OAAA4L,cAGZ,SAAA7B,GAAArE,EAAAG,EAAA+F,GACA,OAAYlF,KAAA,QAAAhB,QAAAG,WAAA+F,cAWZ,SAAAjC,GAAA1D,GACA,OAAYS,KAAA,QAAAT,eAGZ,SAAA4F,GAAAC,GACA,IAAAC,EAAAC,EAAAZ,EAAAU,GAEA,GAAAE,EACA,OAAAA,EAGA,IADAD,EAAAD,EAAA,GACAV,EAAAW,IACAA,IASA,IALAC,GACAX,MAFAW,EAAAZ,EAAAW,IAEAV,KACAC,OAAAU,EAAAV,QAGAS,EAAAD,GACA,KAAAzE,EAAAjB,WAAA2F,IACAC,EAAAX,OACAW,EAAAV,OAAA,GAEAU,EAAAV,SAGAS,IAIA,OADAX,EAAAU,GAAAE,EACAA,EAIA,SAAAC,GAAAC,EAAAC,GACA,IAAAC,EAAAP,GAAAK,GACAG,EAAAR,GAAAM,GAEA,OACAG,OACAC,OAAAL,EACAb,KAAAe,EAAAf,KACAC,OAAAc,EAAAd,QAEAvF,KACAwG,OAAAJ,EACAd,KAAAgB,EAAAhB,KACAC,OAAAe,EAAAf,SAKA,SAAAkB,GAAAhI,GACA0G,EAAAK,IAEAL,EAAAK,IACAA,EAAAL,EACAM,OAGAA,GAAAtH,KAAAM,IAOA,SAAAiI,GAAAjI,EAAAC,EAAAC,GACA,WAAAJ,EACAA,EAAAY,aAAAV,EAAAC,GACAD,EACAC,EACAC,GAIA,SAAAiD,KAKA,OAFA+E,KAKA,SAAAA,KACA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIA,GAFAP,EAAAzB,GACA0B,EAAAO,QACA3F,EAAA,CAmCA,IAlCAqF,KACAC,EAAA5B,GACA6B,EAAAK,QACA5F,GACAH,EAAAgG,OAAAnC,EAAA,KAAArD,GACAmF,EAAAnF,EACAqD,GAAA,IAEA8B,EAAAxF,EACA,IAAAiE,IAAsCe,GAAA1E,IAEtCkF,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAC,QACA3F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAEAsF,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACAA,EAAA5B,GACA6B,EAAAK,QACA5F,GACAH,EAAAgG,OAAAnC,EAAA,KAAArD,GACAmF,EAAAnF,EACAqD,GAAA,IAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAA1E,IAExCkF,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAC,QACA3F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAGAqF,IAAArF,GACA2D,EAAAwB,EAEAA,EADAC,EAAA5E,EAAA4E,EAAAC,KAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EAGA,SAAAQ,KACA,IAAAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIA,GAFAP,EAAAzB,GACA0B,EAAAU,QACA9F,EAAA,CAmCA,IAlCAqF,KACAC,EAAA5B,GACA6B,EAAAK,QACA5F,GACAH,EAAAgG,OAAAnC,EAAA,KAAA7C,GACA2E,EAAA3E,EACA6C,GAAA,IAEA8B,EAAAxF,EACA,IAAAiE,IAAsCe,GAAAlE,IAEtC0E,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAI,QACA9F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAEAsF,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACAA,EAAA5B,GACA6B,EAAAK,QACA5F,GACAH,EAAAgG,OAAAnC,EAAA,KAAA7C,GACA2E,EAAA3E,EACA6C,GAAA,IAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAAlE,IAExC0E,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAI,QACA9F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAGAqF,IAAArF,GACA2D,EAAAwB,EAEAA,EADAC,EAAA5E,EAAA4E,EAAAC,KAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EAGA,SAAAW,KACA,IAAAX,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIA,GAFAP,EAAAzB,GACA0B,EAAAW,QACA/F,EAAA,CA4CA,IA3CAqF,KACAC,EAAA5B,GACA6B,EAAAK,QACA5F,GACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAzE,EACA2C,MAEA8B,EAAAxF,EACA,IAAAiE,IAAsCe,GAAAhE,IAEtCwE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAvE,EACAyC,MAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAA9D,KAGxCsE,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAK,QACA/F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAEAsF,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACAA,EAAA5B,GACA6B,EAAAK,QACA5F,GACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAzE,EACA2C,MAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAAhE,IAExCwE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAvE,EACAyC,MAEA8B,EAAAxF,EACA,IAAAiE,IAA0Ce,GAAA9D,KAG1CsE,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAK,QACA/F,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAGAqF,IAAArF,GACA2D,EAAAwB,EAEAA,EADAC,EAAA5E,EAAA4E,EAAAC,KAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EAGA,SAAAY,KACA,IAAAZ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAIA,GAFAP,EAAAzB,GACA0B,EAAAY,QACAhG,EAAA,CAqDA,IApDAqF,KACAC,EAAA5B,GACA6B,EAAAK,QACA5F,GACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAArE,EACAuC,MAEA8B,EAAAxF,EACA,IAAAiE,IAAsCe,GAAA5D,IAEtCoE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAnE,EACAqC,MAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAA1D,IAExCkE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAjE,EACAmC,MAEA8B,EAAAxF,EACA,IAAAiE,IAA0Ce,GAAAxD,MAI1CgE,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAM,QACAhG,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAEAsF,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACAA,EAAA5B,GACA6B,EAAAK,QACA5F,GACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAArE,EACAuC,MAEA8B,EAAAxF,EACA,IAAAiE,IAAwCe,GAAA5D,IAExCoE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAnE,EACAqC,MAEA8B,EAAAxF,EACA,IAAAiE,IAA0Ce,GAAA1D,IAE1CkE,IAAAxF,IACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAAjE,EACAmC,MAEA8B,EAAAxF,EACA,IAAAiE,IAA4Ce,GAAAxD,MAI5CgE,IAAAxF,IACAyF,EAAAG,QACA5F,IACA0F,EAAAM,QACAhG,EAEAsF,EADAC,KAAAC,EAAAC,EAAAC,IAWAhC,EAAA4B,EACAA,EAAAtF,KAGA0D,EAAA4B,EACAA,EAAAtF,GAGAqF,IAAArF,GACA2D,EAAAwB,EAEAA,EADAC,EAAA5E,EAAA4E,EAAAC,KAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EAGA,SAAAa,KACA,IAAAb,EAAAC,EAAAC,EAAAC,EAAAE,EA+EA,OA7EAL,EAAAzB,EACA,KAAA7D,EAAAjB,WAAA8E,IACA0B,EAAA3D,EACAiC,MAEA0B,EAAApF,EACA,IAAAiE,IAAkCe,GAAAtD,IAElC0D,IAAApF,IACAqF,EAAAO,QACA5F,IACAsF,EAAAJ,QACAlF,GACA4F,OACA5F,GACA,KAAAH,EAAAjB,WAAA8E,IACA8B,EAAA7D,EACA+B,MAEA8B,EAAAxF,EACA,IAAAiE,IAA0Ce,GAAApD,IAE1C4D,IAAAxF,GACA2D,EAAAwB,EAEAA,EADAC,EAAAvD,EAAAyD,KAGA5B,EAAAyB,EACAA,EAAAnF,KAeA0D,EAAAyB,EACAA,EAAAnF,GAEAmF,IAAAnF,IACAmF,EAAAzB,EACA,KAAA7D,EAAAjB,WAAA8E,IACA0B,EAAAtD,EACA4B,MAEA0B,EAAApF,EACA,IAAAiE,IAAoCe,GAAAjD,IAEpCqD,IAAApF,IACAqF,EAAAW,QACAhG,GACA2D,EAAAwB,EAEAA,EADAC,EAAApD,EAAAqD,KAOA3B,EAAAyB,EACAA,EAAAnF,GAEAmF,IAAAnF,IACAmF,EAUA,WACA,IAAAA,EAAAC,EAAAE,EAAAC,EAoDA,OAlDAtB,KACAkB,EAAAzB,EACA,KAAA7D,EAAAjB,WAAA8E,IACA0B,EAAAnE,EACAyC,MAEA0B,EAAApF,EACA,IAAAiE,IAAkCe,GAAA9D,IAElCkE,IAAApF,IACAoF,EAAA,MAEAA,IAAApF,GAmKA,WACA,IAAAmF,EAAAC,EAAAC,EAAAC,EASA,GAPA,KAAAzF,EAAAjB,WAAA8E,IACAyB,EAAAvC,EACAc,MAEAyB,EAAAnF,EACA,IAAAiE,IAAkCe,GAAAnC,IAElCsC,IAAAnF,EASA,GARAmF,EAAAzB,EACAZ,EAAAxK,KAAAuH,EAAAoG,OAAAvC,KACA0B,EAAAvF,EAAAoG,OAAAvC,GACAA,MAEA0B,EAAApF,EACA,IAAAiE,IAAoCe,GAAAjC,IAEpCqC,IAAApF,EAAA,CASA,IARAqF,KACA7C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAsCe,GAAAvC,IAEtC6C,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACA9C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAwCe,GAAAvC,IAGxC4C,IAAArF,EAEAmF,EADAC,KAAAC,IAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAIA,OAAAmF,EArNAe,KACAlG,IACAsF,EA+GA,WACA,IAAAH,EAAAC,EAAAC,EAAAC,EAUA,GARAH,EAAAzB,EACA,KAAA7D,EAAAjB,WAAA8E,IACA0B,EAAA1C,EACAgB,MAEA0B,EAAApF,EACA,IAAAiE,IAAkCe,GAAArC,IAElCyC,IAAApF,EAAA,CASA,GARAqF,KACA7C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAoCe,GAAAvC,IAEpC6C,IAAAtF,EACA,KAAAsF,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACA9C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAwCe,GAAAvC,SAIxC4C,EAAArF,EAEAqF,IAAArF,EAEAmF,EADAC,KAAAC,IAGA3B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EA7JAgB,MACAnG,IACAsF,EAAA,MAEAA,IAAAtF,IACAuF,EAiCA,WACA,IAAAJ,EAAAC,EAAAC,EAAAC,EAAAC,EAUA,GARAJ,EAAAzB,EACArB,EAAA/J,KAAAuH,EAAAoG,OAAAvC,KACA0B,EAAAvF,EAAAoG,OAAAvC,GACAA,MAEA0B,EAAApF,EACA,IAAAiE,IAAkCe,GAAA1C,IAElC8C,IAAApF,EAoBA,GAnBA,KAAAH,EAAAjB,WAAA8E,IACA2B,EAAApE,EACAyC,MAEA2B,EAAArF,EACA,IAAAiE,IAAoCe,GAAA9D,IAEpCmE,IAAArF,IACA,KAAAH,EAAAjB,WAAA8E,IACA2B,EAAAtE,EACA2C,MAEA2B,EAAArF,EACA,IAAAiE,IAAsCe,GAAAhE,KAGtCqE,IAAArF,IACAqF,EAAA,MAEAA,IAAArF,EAAA,CASA,GARAsF,KACA9C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA6B,EAAA1F,EAAAoG,OAAAvC,GACAA,MAEA6B,EAAAvF,EACA,IAAAiE,IAAsCe,GAAAvC,IAEtC8C,IAAAvF,EACA,KAAAuF,IAAAvF,GACAsF,EAAA5I,KAAA6I,GACA/C,EAAAlK,KAAAuH,EAAAoG,OAAAvC,KACA6B,EAAA1F,EAAAoG,OAAAvC,GACAA,MAEA6B,EAAAvF,EACA,IAAAiE,IAA0Ce,GAAAvC,SAI1C6C,EAAAtF,EAEAsF,IAAAtF,EAEAmF,EADAC,KAAAC,EAAAC,IAGA5B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,OAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EAvGAiB,MACApG,IACAuF,EAAA,MAEAA,IAAAvF,GACA2D,EAAAwB,EACAC,EAAAhD,IACA+C,EAAAC,IAEA1B,EAAAyB,EACAA,EAAAnF,KAGA0D,EAAAyB,EACAA,EAAAnF,KAOA0D,EAAAyB,EACAA,EAAAnF,GAEAiE,KACAkB,IAAAnF,IACAoF,EAAApF,EACA,IAAAiE,IAAkCe,GAAA9C,IAGlCiD,EA/DAkB,MACArG,IACAmF,EAgPA,WACA,IAAAA,EAAAC,EAAAC,EAAAC,EAWA,GATAH,EAAAzB,EACA0B,KACApC,EAAA1K,KAAAuH,EAAAoG,OAAAvC,KACA2B,EAAAxF,EAAAoG,OAAAvC,GACAA,MAEA2B,EAAArF,EACA,IAAAiE,IAAkCe,GAAA/B,IAElCoC,IAAArF,EACA,KAAAqF,IAAArF,GACAoF,EAAA1I,KAAA2I,GACArC,EAAA1K,KAAAuH,EAAAoG,OAAAvC,KACA2B,EAAAxF,EAAAoG,OAAAvC,GACAA,MAEA2B,EAAArF,EACA,IAAAiE,IAAsCe,GAAA/B,SAItCmC,EAAApF,EAEA,GAAAoF,IAAApF,EAAA,CASA,IARAqF,KACAnC,EAAA5K,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAoCe,GAAA7B,IAEpCmC,IAAAtF,GACAqF,EAAA3I,KAAA4I,GACApC,EAAA5K,KAAAuH,EAAAoG,OAAAvC,KACA4B,EAAAzF,EAAAoG,OAAAvC,GACAA,MAEA4B,EAAAtF,EACA,IAAAiE,IAAsCe,GAAA7B,IAGtCkC,IAAArF,GACA2D,EAAAwB,EACAC,EAAAhC,IACA+B,EAAAC,IAEA1B,EAAAyB,EACAA,EAAAnF,QAGA0D,EAAAyB,EACAA,EAAAnF,EAGA,OAAAmF,EA1SAmB,KAKAnB,EAwSA,SAAAS,KACA,IAAAT,EAAAC,EAWA,IATAnB,KACAkB,KACA3B,EAAAlL,KAAAuH,EAAAoG,OAAAvC,KACA0B,EAAAvF,EAAAoG,OAAAvC,GACAA,MAEA0B,EAAApF,EACA,IAAAiE,IAAkCe,GAAAvB,IAElC2B,IAAApF,GACAmF,EAAAzI,KAAA0I,GACA5B,EAAAlL,KAAAuH,EAAAoG,OAAAvC,KACA0B,EAAAvF,EAAAoG,OAAAvC,GACAA,MAEA0B,EAAApF,EACA,IAAAiE,IAAoCe,GAAAvB,IASpC,OANAQ,KACAkB,IAAAnF,IACAoF,EAAApF,EACA,IAAAiE,IAAkCe,GAAAzB,IAGlC4B,EAIA,SAAAxE,GAAA4F,GAGA,UAFAA,EAAA,GAEA,IADAA,EAAA,GAUA,IAFAxG,EAAAK,OAEAJ,GAAA0D,IAAA7D,EAAA1B,OACA,OAAA4B,EAMA,MAJAA,IAAAC,GAAA0D,EAAA7D,EAAA1B,QACA6G,IAx6BY9F,KAAA,QA26BZ+F,GACAjB,GACAD,EAAAlE,EAAA1B,OAAA0B,EAAAoG,OAAAlC,GAAA,KACAA,EAAAlE,EAAA1B,OACAsG,GAAAV,IAAA,GACAU,GAAAV,6DCjqCA,SAASyC,EAAeC,EAAGC,GASzB,OAMAC,EAAA,MAAWC,0BAA4B,MAAM,GANtC,IAAID,EAAA,eAAoBF,EAAGC,GAAKG,aAAa,UASzCC,EACXhN,YAAYiN,GACV9M,KAAK+M,QACL/M,KAAKgN,MAAQF,EACb9M,KAAKiN,UAAYH,EAAKI,YAAYlN,MAClCA,KAAKmN,UAAYZ,EAAeO,EAAKM,MAAON,EAAKO,QACjDrN,KAAKsN,MAAQtN,KAAKiN,UAAUM,OAC5BvN,KAAKwN,KAAOxN,KAAKmN,UAAUK,KAC3BxN,KAAKyN,SAAWX,EAAKlO,KACrBoB,KAAK0N,sBAEP7N,OAAOjB,GACLoB,KAAKiN,UAAUxK,KAAK7D,GACpBoB,KAAKmN,UAAUQ,OAAO3N,KAAKsN,OAE7BzN,UACEG,KAAKiN,UAAUW,UACf5N,KAAKiN,UAAY,KACjBjN,KAAK6N,yBAEPjI,YACE,OAAO5F,KAAK8N,OAAOC,MAErBlO,IAAIhB,EAAK0O,IACGvN,KAAK+M,KAAKlO,KAASmB,KAAK+M,KAAKlO,GAAO,IAAI2B,MAC9CwN,IAAIT,GAEV1N,MAAMhB,EAAK0O,GACT,IAAIU,EAAMjO,KAAK+M,KAAKlO,GACfoP,GACLA,EAAIC,OAAOX,GAEb1N,sBACE,IAAIsO,EAAQ,KACRC,KACAC,EAAUhN,IACZ8M,EAAQ9M,GAENiN,EAAgBjN,IAClB8M,EAAQA,GAAS9M,GAEfkN,EAAY,KACdJ,EAAQ,MAENK,EAAUnN,IACZ+M,KAAa/I,MAAMoJ,KAAKpN,EAAE+M,UAExBZ,EAAOxN,KAAKwN,KACZJ,EAAQpN,KAAKgN,MAAMI,MACnBC,EAASrN,KAAKgN,MAAMK,OA6BxB,SAASqB,EAAMC,EAAIrE,EAAGsE,GACpB,OACEC,GAAKvE,EAAEwE,QAAUF,EAAKG,MAAQH,EAAKxB,MAASA,EAC5C4B,GAAK1E,EAAE2E,QAAUL,EAAKM,KAAON,EAAKvB,OAAUA,EAC5CsB,GAAIA,GAhCRnB,EAAK2B,iBAAiB,YAAad,GAAS,GAC5Cb,EAAK2B,iBAAiB,YAAab,GAAe,GAClDd,EAAK2B,iBAAiB,UAAWZ,GAAW,GAC5Cf,EAAK2B,iBAAiB,aAAcX,GAAS,GAC7ChB,EAAK2B,iBAAiB,YAAaX,GAAS,GAC5ChB,EAAK2B,iBAAiB,WAAYX,GAAS,GAC3CxO,KAAK6N,uBAAyB,MAC5BL,EAAK4B,oBAAoB,YAAaf,GAAS,GAC/Cb,EAAK4B,oBAAoB,YAAad,GAAe,GACrDd,EAAK4B,oBAAoB,UAAWb,GAAW,GAC/Cf,EAAK4B,oBAAoB,aAAcZ,GAAS,GAChDhB,EAAK4B,oBAAoB,YAAaZ,GAAS,GAC/ChB,EAAK4B,oBAAoB,WAAYZ,GAAS,KAEhDxO,KAAK8N,QACHC,IAAK,KACH,IAAIsB,KACAT,EAAO5O,KAAKwN,KAAK8B,wBACjBnB,GACFkB,EAAO5M,KAAKiM,EAAM,QAASP,EAAOS,IAEpC,IAAK,IAAI7K,EAAI,EAAGA,EAAIqK,EAAQlK,OAAQH,IAAK,CACvC,IAAIwL,EAAQnB,EAAQrK,GACpBsL,EAAO5M,KAAKiM,EAAM,QAAUa,EAAMC,WAAYD,EAAOX,IAEvD,OAAOS,KAaA,kFC1FA,IAAAI,QAPb5P,eAAgB4B,EAAUC,GACxB,IAAIgO,EAAO,IAAI1P,KAEf,OADA0P,EAAKC,QAAQlO,EAAUC,GAChBgO,aCmFI,IAAAE,QA9Fb/P,YAAagG,GAQX,GAPA7F,KAAK6P,SAAWhK,EAAQiK,QACxB9P,KAAK+P,QAAUlK,EAAQ0H,OACvBvN,KAAKgQ,UAAYnK,EAAQ/D,SACzB9B,KAAKiQ,aACLjQ,KAAKkQ,aACLlQ,KAAKmQ,OAAS,IAAIC,EAAA,EAAUvK,EAAQsK,QACpCnQ,KAAKqQ,UAAY,IAAID,EAAA,EAAUvK,EAAQwK,WACnCxK,EAAQyK,SACV,IAAK,IAAIC,KAAW1K,EAAQyK,SAC1BtQ,KAAKwQ,QAAQD,GAGjB,GAAI1K,EAAQ4K,SACV,IAAK,IAAIC,KAAW7K,EAAQ4K,SAC1BzQ,KAAKkQ,UAAUzN,KAAKiO,EAAQxD,YAAYlN,KAAK6P,SAAU7P,OAG3D,GAAI6F,EAAQ/D,SACV,IAAK,IAAIA,KAAY+D,EAAQ/D,SAC3B9B,KAAKkQ,UAAUzN,KAAKX,EAASoL,YAAYlN,KAAK6P,SAAU7P,KAAK+P,UAG7DlK,EAAQ8K,UACV,IAAIP,EAAA,EAAUvK,EAAQ8K,UAAUlC,OAE9B5I,EAAQzC,QACVpD,KAAK4Q,SAAS/K,EAAQzC,QAG1BvD,QAASgR,GACP,IAAIC,EAqDR,SAAmBnS,GACjB,IAAI8B,EACJ,OAAO,SAA0BsQ,GAC3BtQ,IAAUsQ,IACZtQ,EAAQsQ,EACRpS,EAAEoS,KA1DaC,CAASH,EAASI,OACX,IAApBJ,EAAS3M,QAAgB2M,EAAS,GAAGzS,SAGvC0S,EAAWD,EAAS,MAEpB7Q,KAAKiQ,UAAUxN,KAAKhC,IAClB,IAAK,IAAIsD,EAAI,EAAGA,EAAI8M,EAAS3M,OAAQH,IACnCtD,EAAQoQ,EAAS9M,GAAGtD,GAEtBqQ,EAAWrQ,KAIjBZ,SAAUuD,GACRpD,KAAKkR,QAAU9N,EACfpD,KAAKkR,QAAQC,SAASnR,KAAK+P,SAE7BlQ,SACMG,KAAKkR,UACPlR,KAAKkR,QAAQE,YAAYpR,KAAK+P,SAC9B/P,KAAKkR,QAAU,MAGnBrR,KAAMY,GACJ,IAAIsD,EACJ,IAAKA,EAAI,EAAGA,EAAI/D,KAAKiQ,UAAU/L,OAAQH,IACrC/D,KAAKiQ,UAAUlM,GAAGtD,GAEpB,IAAKsD,EAAI,EAAGA,EAAI/D,KAAKkQ,UAAUhM,OAAQH,IACrC/D,KAAKkQ,UAAUnM,GAAGtB,KAAKhC,GAEzBT,KAAKmQ,OAAO1B,KAAKhO,GAEnBZ,UACEG,KAAKqR,SACL,IAAK,IAAItN,EAAI,EAAGA,EAAI/D,KAAKkQ,UAAUhM,OAAQH,IACzC/D,KAAKkQ,UAAUnM,GAAG6J,UAEpB5N,KAAKqQ,UAAU5B,OACfzO,KAAKkQ,UAAY,KACjBlQ,KAAKiQ,UAAY,KACjBjQ,KAAKkR,QAAU,KACflR,KAAK+P,QAAU,KAEjBxC,aACE,OAAOvN,KAAK+P,QAEd3M,aACE,OAAOpD,KAAKkR,4BC1EhB,IAAII,IACAzQ,KAAM,IAAK0Q,QAAS,IAAKC,MAAO,CAACC,EAAKV,IAAOU,EAAI5C,EAAIkC,IACrDlQ,KAAM,IAAK0Q,QAAS,IAAKC,MAAO,CAACC,EAAKV,IAAOU,EAAIzC,EAAI+B,IACrDlQ,KAAM,UAAW0Q,QAAS,IAAKC,MAAO,CAACC,EAAKV,IAAOU,EAAIC,MAAM7C,EAAIkC,IACjElQ,KAAM,UAAW0Q,QAAS,IAAKC,MAAO,CAACC,EAAKV,IAAOU,EAAIC,MAAM1C,EAAI+B,IACjElQ,KAAM,QAAS0Q,QAAS,IAAKC,MAAO,CAACC,EAAKV,IAAOU,EAAIE,MAAQZ,IAC7DlQ,KAAM,QAAS2Q,MAAO,CAACC,EAAKV,IAAOU,EAAIrE,MAAQ2D,IAC/ClQ,KAAM,SAAU2Q,MAAO,CAACC,EAAKV,IAAOU,EAAIpE,OAAS0D,IACjDlQ,KAAM,UAAW2Q,MAAO,CAACC,EAAKV,IAAOU,EAAIG,QAAUb,IA8CxC,IAAAc,gBA3CoBpC,EACjC5P,QAAQ4B,EAAUC,GAChB1B,KAAK8R,WAAa1R,EAAA,EAAUuP,QAAQlO,EAAUC,GAC9C1B,KAAKiQ,aACL,IAAK,IAAI8B,KAAYT,EAAY,CAC/B,IAAItT,EAAO0D,EAAIM,KAAK+P,EAASlR,OAASkR,EAASR,QAC/C,IAAKvT,EAAM,SACX,IAAIgU,EAAa,IAAIC,EAAA,EAAWjU,GAC5BkU,EAASlS,KAAK8R,WAAWK,KAAKJ,EAASlR,KAAMmR,GACjDhS,KAAKiQ,UAAUxN,MACbyP,OAAQA,EACRV,MAAOO,EAASP,QAGpBxR,KAAKoS,UAuBT,SAAwB7T,GACtB,GAAa,WAATA,EAAmB,OAAOmO,EAAA,YAAiB2F,OAC/C,GAAa,WAAT9T,EAAmB,OAAOmO,EAAA,YAAiB4F,OAC/C,MAAM,IAAI/P,MAAM,uBAAyBhE,GA1BtBgU,CAAe7Q,EAAIM,KAAK,UAAY,UACrDhC,KAAKwS,IAAM9Q,EAAIM,KAAK,QAAU,KAEhCnC,YAAYiQ,EAAS2C,GACnB,IAAIlF,EAASkF,EAAQlF,OACjB+C,KACAD,EAAY,KAChB9C,EAAO6E,UAAYpS,KAAKoS,UACxB,IAAK,IAAIrO,EAAI,EAAGA,EAAI/D,KAAKiQ,UAAU/L,OAAQH,IAAK,CAC9C,IAAIwM,EAAUvQ,KAAKiQ,UAAUlM,GAC7BuM,EAAS7N,MAAM8N,EAAQ2B,OAAQ3B,EAAQiB,MAAMhB,KAAK,KAAMjD,KAM1D,OAJIvN,KAAKwS,MACP1C,EAAQ0C,IAAIxS,KAAKwS,IAAKjF,GACtB8C,EAAY,KAAMP,EAAQ4C,MAAM1S,KAAKwS,IAAKjF,KAErC,IAAIqC,GACTU,SAAUA,EACVD,UAAWA,MClDV,SAASsC,EAAYpU,GAC1B,IAAIqU,EAAIrU,EAAKsU,MAAM,+BACnB,OAAKD,EACE,IAAIlG,EAAA,WAAgBkG,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAKA,EAAE,IADnC,WCIJE,EACXjT,YAAYkT,GACV/S,KAAKgT,OAASD,EAEhBlT,YAAYiQ,EAAS2C,GACnB,IAAIQ,EAAO,IAAIvG,EAAA,SAKf,OAJAuG,EAAKC,YACLD,EAAKE,UAAUnT,KAAKgT,QACpBC,EAAKG,UACLX,EAAQlF,OAAO0F,KAAOA,EACf,IAAIrD,GACTE,QAASA,EACTvC,OAAQ0F,EACR7P,OAAQqP,EAAQlF,UA4BP,IAAA8F,gBAvBgB5D,EAC7B5P,QAAQ4B,EAAUC,GAChB1B,KAAK8B,SAAWL,EAAS6R,gBAAgB5R,GACzC1B,KAAKuT,QAAU1B,EAAclC,QAAQlO,EAAUC,GAC/C,IAAI8R,EAAYb,EAAWjR,EAAIM,KAAK,SAAW,IAC3CwR,IAAWxT,KAAKiT,KAAO,IAAIH,EAAKU,IAEtC3T,YAAYiQ,EAAS2D,GACnB,IAAIlG,EAAS,IAAIb,EAAA,UACb+D,GAAYzQ,KAAKuT,SAIrB,OAHIvT,KAAKiT,MACPxC,EAAShO,KAAKzC,KAAKiT,MAEd,IAAIrD,GACTE,QAASA,EACTvC,OAAQA,EACRnK,OAAQqQ,EACRhD,SAAUA,EACV3O,SAAU9B,KAAK8B,aCCN,IAAA4R,gBAvCajE,EAC1B5P,QAAQ4B,EAAUC,GAChB,IAAII,EAAWL,EAAS6R,gBAAgB5R,GACxC,GAAwB,IAApBI,EAASoC,OACX,MAAM,IAAI3B,MACR,gCAAkCT,EAASoC,OAAS,UAGxDlE,KAAKmD,MAAQrB,EAAS,GACtB9B,KAAKnB,IAAM,IAAIoT,EAAA,EAAWvQ,EAAIM,KAAK,QACnChC,KAAKS,MAAQkT,OAAOjS,EAAIM,KAAK,UAE/BnC,YAAYiQ,EAAS2D,GACnB,IAAIlG,EAAS,IAAIb,EAAA,UACbzG,EAAOjG,KAAKnB,IACZ4B,EAAQT,KAAKS,MACbmT,EAAY5T,KAAKmD,MACjBA,EAAQ,KACZ,OAAO,IAAIyM,GACTE,QAASA,EACT1M,OAAQqQ,EACRlG,OAAQA,EACR4C,OAAQvR,IACF+U,OAAO1N,EAAKrH,MAAW6B,GACX,OAAV0C,IACFA,EAAQyQ,EAAU1G,YAAY4C,EAASvC,IAEzCpK,EAAMV,KAAK7D,IAEG,OAAVuE,IACFA,EAAMyK,UACNzK,EAAQ,WC/BpB,SAAS0Q,EAAa5N,EAAM9C,EAAO2Q,GACjC,OACEjU,YAAYiQ,EAAS2C,GACnB,IAAIsB,EAAY,IAAIC,IAChBC,KAEJ,OAMA,WAEE,IADA,IAAIrE,EACK7L,EAAI,EAAGA,EAAI+P,EAAU/P,KAC5B6L,EAAWzM,EAAM+J,YAAY4C,EAAS2C,EAAQlF,SACrC8D,SACT4C,EAAKxR,KAAKmN,GAZdsE,GACO,IAAItE,GACTE,QAASA,EACTK,OAAQvR,KAYV,SAAgB2B,GACd,IACI1B,EACAyN,EACAsD,EAHAuE,EAAS,IAAI3T,IAAIuT,EAAUK,QAI1B7T,IAAOA,MACZ,IAAK,IAAIwD,EAAI,EAAGA,EAAIxD,EAAM2D,OAAQH,IAChCuI,EAAO/L,EAAMwD,GACblF,EAAMyN,EAAKzN,IACPkV,EAAUhT,IAAIlC,GAChB+Q,EAAWmE,EAAUhG,IAAIlP,IAEzB+Q,EAAWyE,IACXN,EAAU9F,IAAIpP,EAAK+Q,IAErBA,EAASnN,KAAK6J,GACd6H,EAAOjG,OAAOrP,GAEhB,IAAKA,KAAOsV,GACVvE,EAAWmE,EAAUhG,IAAIlP,IAChBwS,SACT0C,EAAU7F,OAAOrP,GACjBoV,EAAKxR,KAAKmN,GAjCV0E,CAAOrO,EAAKrH,OAoChB,SAASyV,IACP,IAAIzE,EAAWqE,EAAKhD,MAMpB,OALIrB,EACFA,EAASgB,SAAS6B,EAAQlF,QAE1BqC,EAAWzM,EAAM+J,YAAY4C,EAAS2C,EAAQlF,QAEzCqC,KAgCA,IAAA2E,gBA1BiB9E,EAC9B5P,QAAQ4B,EAAUC,GAEhB,GADA1B,KAAK8B,SAAWL,EAAS6R,gBAAgB5R,GACZ,IAAzB1B,KAAK8B,SAASoC,OAChB,MAAM,IAAI3B,MACR,gCAAkCvC,KAAK8B,SAASoC,OAAS,UAG7DlE,KAAKiU,MAAQvS,EAAIM,KAAK,SAAW,EACjChC,KAAKnB,IAAM,IAAIoT,EAAA,EAAWvQ,EAAIM,KAAK,QAErCnC,YAAYiQ,EAAS2D,GACnB,IAAIe,EAAQ,IAAI9H,EAAA,UAAe+H,uBAAkBC,GAC/CC,UAAU,EACVhD,OAAO,IAELiD,EAAU,IAAIf,EAAa7T,KAAKnB,IAAKmB,KAAK8B,SAAS,GAAI9B,KAAKiU,MAChE,OAAO,IAAIrE,GACTE,QAASA,EACT1M,OAAQqQ,EACRlG,OAAQiH,EACR/D,UAAWmE,OC/DF,IAAAC,gBAjBmBpF,EAChC5P,QAAQ4B,EAAUC,GAChB1B,KAAK8B,SAAWL,EAAS6R,gBAAgB5R,GACzC1B,KAAKoN,OAAS1L,EAAIM,KAAK,SACvBhC,KAAKqN,QAAU3L,EAAIM,KAAK,UACxBhC,KAAKpB,KAAO8C,EAAI9C,OAElBiB,YAAYiQ,GACV,IAAIxC,EAAQ,IAAIZ,EAAA,MAAW,QAC3B,OAAO,IAAIkD,GACTE,QAASA,EACTvC,OAAQD,EACRxL,SAAU9B,KAAK8B,aCmBN,IAAAgT,gBA7BiBrF,EAC9B5P,QAAQ4B,EAAUC,GAChB1B,KAAK+U,IAAMtT,EAASuT,UAAUjH,IAAIrM,EAAIM,KAAK,UAC3ChC,KAAKuT,QAAU1B,EAAclC,QAAQlO,EAAUC,GAC/C1B,KAAK+S,MAAQJ,EAAWjR,EAAIM,KAAK,UAAY,IAC7ChC,KAAKiV,SAAWvT,EAAIM,KAAK,aAAe,EACxChC,KAAKkV,SAAWxT,EAAIM,KAAK,aAAe,EAE1CnC,YAAYiQ,EAAS2D,GACnB,IAAI0B,EAAS,IAAIzI,EAAA,OAAY1M,KAAKoV,cAGlC,OAFAD,EAAOE,OAAOxG,EAAI7O,KAAKiV,QACvBE,EAAOE,OAAOrG,EAAIhP,KAAKkV,QAChB,IAAItF,GACTE,QAASA,EACTvC,OAAQ4H,EACR/R,OAAQqQ,EACRhD,UAAWzQ,KAAKuT,WAGpB1T,aACE,GAAIG,KAAKsV,SAAU,OAAOtV,KAAKsV,SAC/B,IAAIC,EAAY7I,EAAA,YAAiB8I,QAC7BC,EAAO/I,EAAA,YAAiBgJ,UAAU1V,KAAK+U,SAAKL,EAAWa,GACvDI,EAAU,IAAIjJ,EAAA,QAAa+I,EAAMzV,KAAK+S,OAE1C,OADA/S,KAAKsV,SAAWK,EACTA,ICiBI,IAAAC,gBA1CenG,EAC5B5P,QAAQ4B,EAAUC,GAChB1B,KAAK6V,KAAOnU,EAAIM,KAAK,QACrBhC,KAAKzB,KAAOmD,EAAIM,KAAK,QACrBhC,KAAKpB,KAAO,IAAIqT,EAAA,EAAWvQ,EAAIM,KAAK,SAAW,KAC/ChC,KAAKuT,QAAU1B,EAAclC,QAAQlO,EAAUC,GAC/C1B,KAAK8V,KAAOpU,EAAIM,KAAK,YACrBhC,KAAK+V,KAAOrU,EAAIM,KAAK,QACrBhC,KAAKgW,MACmB,SAAtBtU,EAAIM,KAAK,SAAsB,EAA0B,UAAtBN,EAAIM,KAAK,SAAuB,EAAI,GAE3EnC,YAAYiQ,EAAS2D,GACnB,IAAIlV,EAEFA,EADEyB,KAAK8V,IACA,IAAIpJ,EAAA,KAAU1M,KAAKzB,MACxBsX,KAAM7V,KAAK6V,KACXE,KAAM/V,KAAK+V,OAGN,IAAIrJ,EAAA,OAAYuJ,WAAWjW,KAAKzB,MAAQsX,KAAM7V,KAAK6V,OAE5D,IAAItI,EAAS,IAAIb,EAAA,UAEjB,OADAa,EAAO4D,SAAS5S,GACT,IAAIqR,GACTE,QAASA,EACT1M,OAAQqQ,EACRlG,OAAQA,EACRkD,UAAWzQ,KAAKuT,SAChBjD,WAEItQ,KAAKpB,KACLmS,IACExS,EAAKA,KAAOyB,KAAKzB,KAAKwG,QAAQ,KAAMgM,GACpCxS,EAAK2X,aACL3X,EAAKsQ,EAAItQ,EAAK6O,OAASpN,KAAKgW,aC/BxC,MAAMlY,EAAMqY,IAAM,yBAElB,IAAIC,GACFtJ,KAAM+H,EACNM,OAAQL,EACRzB,MAAOA,EACP9F,OAAQgH,EACRhW,KAAMqX,EACNS,GAAI3C,SAMA4C,EACJzW,YAAY0W,GACV5W,OAAOC,OAAOI,KAAMuW,GACpBvW,KAAKwW,MAAQ,IAAIxC,IAEnBnU,QAAQ6B,GACN,IAAI+U,EAAW/U,EAAI,GAAG+U,SACtB3Y,EAAI,YAAa4D,EAAI,IACrB,IAAIgV,EAAOJ,EAASK,aAAaF,GACjC,IAAKC,EAAM,MAAM,IAAInU,MAAM,sBAAwBkU,GACnD,OAAOC,EAAK/G,QAAQ3P,KAAM0B,GAE5B7B,gBAAgB6B,GACd,IAAI2N,KACJ,IAAK,IAAIlM,KAASvB,MAAMC,KAAKH,EAAII,YAAa,CAC5C,IAAI2U,EAAWtT,EAAMsT,SACrB,GAAiB,SAAbA,EACFzW,KAAK4W,YAAYC,IAAE1T,SACd,GAAiB,QAAbsT,EACTpH,EAAO5M,KAAKzC,KAAK8W,OAAO3T,EAAM4T,aAAa,aACtC,CACMT,EAASK,aAAaF,IACvBpH,EAAO5M,KAAKzC,KAAK2P,QAAQkH,IAAE1T,MAGzC,OAAOkM,EAETxP,YAAY6B,GACV,IAAK,IAAIyB,KAASvB,MAAMC,KAAKH,EAAII,YAAa,CAC5C,IAAI6M,EAAKxL,EAAM4T,aAAa,MAC5B,IAAKpI,EAAI,MAAM,IAAIpM,MAAM,4BAA8BY,EAAMsT,UAC7DzW,KAAKwW,MAAMvI,IAAIU,EAAI3O,KAAK2P,QAAQkH,IAAE1T,MAGtCtD,OAAO8O,GACL,IAAIe,EAAO1P,KAAKwW,MAAMzI,IAAIY,GAC1B,IAAKe,EAAM,MAAM,IAAInN,MAAM,oBAAsBoM,GACjD,OAAOe,EAGT7P,oBAAoB4W,GAClB,OAAOL,EAAMK,IAIF,IAAAO,EAAA,mBC/CA,IAAAC,QAfbpX,cACEG,KAAKkX,QAEPrX,IAAIsX,EAAKpC,GACP/U,KAAKkX,KAAKC,GAAOpC,EAEnBlV,IAAIsX,GACF,KAAMA,KAAOnX,KAAKkX,MAAO,MAAM,IAAI3U,MAAM,mBAAqB4U,GAC9D,OAAOnX,KAAKkX,KAAKC,GAEnBC,WACE,OAAOC,EAAA7Y,EAAEwC,OAAOhB,KAAKkX,QCRzB,MAAMI,EAAMnB,IAAM,uBAEX,SAASoB,EAAKC,EAASC,GAC5B,OAAOC,IAAG,YACRJ,EAAI,mBAAoBE,GACxB,IAAIG,QA2BR,SAAiBC,GACf,OAAOC,QAAQC,QAAQjB,EAAArY,EAAEuZ,MAAOhD,IAAK6C,EAAQI,SAAU,SAAUC,KAAKC,GACpErB,IAAEqB,EAAIC,kBA7BWC,CAAQZ,GAGrBxC,EAAY,IAAIiC,EAChBoB,EAAQ,IAAI7X,IAChB,IAAK,IAAI8X,KAAW1W,MAAMC,KAAK8V,EAAKY,KAAK,YACvCF,EAAMrK,IAAI6I,IAAEyB,GAAStW,KAAK,UAE5B,IAAK,IAAIsW,KAAW1W,MAAMC,KAAK8V,EAAKY,KAAK,eACvCF,EAAMrK,IAAI6I,IAAEyB,GAAStW,KAAK,aAE5B,IAAK,IAAIwW,KAAQH,EAAO,CACtB,IAAII,EAAWC,EAAAla,EAAIsZ,QAAQN,EAASgB,GACpCxD,EAAUhH,IAAIwK,EAAMC,GAUtB,aAUJ,SAAuBzD,EAAWyC,GAEhC,OADAH,EAAI,qBACG,IAAIO,QAAQ,SAASC,GAC1B,GAA8B,IAA1B9C,EAAUoC,KAAKlT,OAAc,OAAO4T,IACxC,IAAIa,EAAS,IAAIjM,EAAA,QAAakM,OAC9B,IAAK,IAAI7D,KAAOC,EAAUoC,KACxBuB,EAAO3K,IAAI+G,EAAKA,GAElB4D,EAAOE,KAAK,WAAY,WACtBvB,EAAI,8BACJQ,MAEEL,IACFA,EAASqB,UAAYC,EAAA,EACrBJ,EAAOE,KAAK,WAAY,WACtBpB,EAASuB,OAAO,IAAK,OAEvBL,EAAOnX,GAAG,WAAY,WACpBiW,EAASuB,OAAOL,EAAOlB,SAAU,QAGrCkB,EAAOpB,SArCD0B,CAAcjE,EAAWyC,GAG/BH,EAAI,aACO,IAAIN,GAAWhC,cAAarF,QAAQgI,KC/B5C,SAASuB,GAAWC,YAAEA,OAC3B,MAAoB,YAAhBA,EACK,kCAEHC,OAAOC,WAAaD,OAAOE,YACtB,gCAEA,iCAZb7b,EAAAsB,EAAAD,EAAA,+BAAAoa,IAAAzb,EAAAsB,EAAAD,EAAA,yBAAAyY,IAAA9Z,EAAAsB,EAAAD,EAAA,4BAAA+N","file":"build/gameEngine-846086df1a6ec0d2f041.js","sourcesContent":["import debug from 'debug'\n\nimport parser from './parser.pegjs'\n\nconst log = debug('scintillator:expression')\n\nfunction createFunction(code) {\n  let fn = eval('(function(get) { return ' + code + ' })') // eslint-disable-line no-eval\n  fn.displayName = '(' + code + ')'\n  fn.constant = !!/^[-0-9.]+$/.test(code)\n  return fn\n}\n\nexport function Expression(text) {\n  log('parsing %s', text)\n  let code = parser.parse(text)\n  log('parsed %s => %s', text, code)\n  let f = createFunction(code)\n  let evaluate\n  if (f.constant) {\n    evaluate = f\n  } else {\n    evaluate = function(data) {\n      return f(function(key) {\n        return data[key]\n      })\n    }\n  }\n  evaluate.constant = f.constant\n  return evaluate\n}\n\nexport default Expression\n","import _ from 'lodash'\nimport $ from 'jquery'\nimport keytime from 'keytime'\n\nlet createKeytime = def => Object.assign({}, def, { data: keytime(def.data) })\n\nexport class Animation {\n  constructor(animations, timeKey) {\n    this._timeKey = timeKey || 't'\n    this._properties = _(animations)\n      .map(animation => _.map(animation.data, 'name'))\n      .flatten()\n      .thru(array => new Set(array))\n      .value()\n    this._animations = _.map(animations, createKeytime)\n    this._events = _.uniq(_.map(animations, 'on'))\n  }\n  prop(name, fallback) {\n    if (!this._properties.has(name)) {\n      return fallback\n    }\n    return data => {\n      let values = this._getAnimation(data)\n      if (values.hasOwnProperty(name)) {\n        return values[name]\n      } else {\n        return fallback(data)\n      }\n    }\n  }\n  _getAnimation(data) {\n    let event = _(this._events)\n      .filter(e => e === '' || e in data)\n      .maxBy(e => data[e] || 0)\n    let t = data[this._timeKey] - (data[event] || 0)\n    let animations = this._animations.filter(a => a.on === event)\n    let values = animations.map(a => a.data.values(t))\n    return Object.assign({}, ...values)\n  }\n  static compile(compiler, $el) {\n    let animationElements = Array.from($el.children('animation'))\n    let animations = _.map(animationElements, el => _compile($(el)))\n    let timeKey = $el.attr('t') || 't'\n    return new Animation(animations, timeKey)\n  }\n}\n\nexport function _compile($el) {\n  let keyframes = _.map(Array.from($el.children('keyframe')), _attrs)\n  let attrs = {}\n  for (let keyframe of keyframes) {\n    let time = +keyframe.t\n    let ease = keyframe.ease || 'linear'\n    if (isNaN(time)) throw new Error('Expected keyframe to have \"t\" attribute')\n    for (let key in keyframe) {\n      if (key === 't' || key === 'ease') continue\n      let value = +keyframe[key]\n      let attr = attrs[key] || (attrs[key] = _createKeyframes(key))\n      attr.keyframes.push({ time, value, ease })\n    }\n  }\n  return {\n    on: $el.attr('on') || '',\n    data: _.values(attrs),\n  }\n}\n\nfunction _createKeyframes(name) {\n  return { name, keyframes: [] }\n}\n\nexport function _attrs(el) {\n  return _(el.attributes)\n    .map(n => [n.name.toLowerCase(), n.value])\n    .fromPairs()\n    .value()\n}\n\nexport default Animation\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { expr: peg$parseexpr },\n      peg$startRuleFunction  = peg$parseexpr,\n\n      peg$c0 = \"||\",\n      peg$c1 = peg$literalExpectation(\"||\", false),\n      peg$c2 = function(first, rest) {\n            return combine(first, rest);\n          },\n      peg$c3 = \"&&\",\n      peg$c4 = peg$literalExpectation(\"&&\", false),\n      peg$c5 = \"+\",\n      peg$c6 = peg$literalExpectation(\"+\", false),\n      peg$c7 = \"-\",\n      peg$c8 = peg$literalExpectation(\"-\", false),\n      peg$c9 = \"*\",\n      peg$c10 = peg$literalExpectation(\"*\", false),\n      peg$c11 = \"/\",\n      peg$c12 = peg$literalExpectation(\"/\", false),\n      peg$c13 = \"%\",\n      peg$c14 = peg$literalExpectation(\"%\", false),\n      peg$c15 = \"(\",\n      peg$c16 = peg$literalExpectation(\"(\", false),\n      peg$c17 = \")\",\n      peg$c18 = peg$literalExpectation(\")\", false),\n      peg$c19 = function(expr) { return \"(\" + expr + \")\"; },\n      peg$c20 = \"!\",\n      peg$c21 = peg$literalExpectation(\"!\", false),\n      peg$c22 = function(val) { return \"!\" + val },\n      peg$c23 = peg$otherExpectation(\"number\"),\n      peg$c24 = function() { return text(); },\n      peg$c25 = /^[eE]/,\n      peg$c26 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c27 = /^[0-9]/,\n      peg$c28 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c29 = \".\",\n      peg$c30 = peg$literalExpectation(\".\", false),\n      peg$c31 = \"0\",\n      peg$c32 = peg$literalExpectation(\"0\", false),\n      peg$c33 = /^[1-9]/,\n      peg$c34 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c35 = /^[a-zA-Z]/,\n      peg$c36 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c37 = /^[a-zA-Z0-9_]/,\n      peg$c38 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c39 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n      peg$c40 = peg$otherExpectation(\"whitespace\"),\n      peg$c41 = /^[ \\t\\n\\r]/,\n      peg$c42 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseexpr() {\n    var s0;\n\n    s0 = peg$parselogical_or();\n\n    return s0;\n  }\n\n  function peg$parselogical_or() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parselogical_and();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c0) {\n          s5 = peg$c0;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parselogical_and();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c0) {\n            s5 = peg$c0;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parselogical_and();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselogical_and() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseadd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c3) {\n          s5 = peg$c3;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseadd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s5 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseadd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseadd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemul();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsemul();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemul();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemul() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseval();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c11;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseval();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c11;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseval();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseval() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselogical_or();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c19(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseval();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseint();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefrac();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexp();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c24();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (peg$c25.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s2 = peg$c5;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c27.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c29;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c31;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c33.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c35.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c37.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c41.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n\n    function operate(item) {\n      var operator = item[1]\n      var operand = item[3]\n      return \" \" + operator + \" \" + operand\n    }\n    function combine(first, rest) {\n      return first + rest.map(operate).join('')\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as PIXI from 'pixi.js'\n\nfunction createRenderer(w, h) {\n  hackPIXIToForceNewBlendModes()\n\n  // For now, we are using CanvasRenderer instead of WebGLRenderer or\n  // autoDetectRenderer befcause of two reasons.\n  // 1. Current implementation has some problem with rendering\n  //    sprite batches: https://github.com/pixijs/pixi.js/issues/1910\n  // 2. It seems that Canvas performs better on some browsers, i.e. Chrome.\n  //    WebGLRenderer only performs better on Firefox from the experiment.\n  return new PIXI.CanvasRenderer(w, h, { transparent: true })\n}\n\n// HACK: Sometimes, when using the canvas renderer,\n// the blend mode is not properly set.\nfunction hackPIXIToForceNewBlendModes() {\n  PIXI.utils.canUseNewCanvasBlendModes = () => true\n}\n\nexport class Context {\n  constructor(skin) {\n    this.refs = {}\n    this._skin = skin\n    this._instance = skin.instantiate(this)\n    this._renderer = createRenderer(skin.width, skin.height)\n    this.stage = this._instance.object\n    this.view = this._renderer.view\n    this.skinData = skin.data\n    this._setupInteractivity()\n  }\n  render(data) {\n    this._instance.push(data)\n    this._renderer.render(this.stage)\n  }\n  destroy() {\n    this._instance.destroy()\n    this._instance = null\n    this._teardownInteractivity()\n  }\n  get input() {\n    return this._input.get()\n  }\n  ref(key, object) {\n    let set = this.refs[key] || (this.refs[key] = new Set())\n    set.add(object)\n  }\n  unref(key, object) {\n    let set = this.refs[key]\n    if (!set) return\n    set.delete(object)\n  }\n  _setupInteractivity() {\n    let mouse = null\n    let touches = []\n    let onMouse = e => {\n      mouse = e\n    }\n    let onUpdateMouse = e => {\n      mouse = mouse && e\n    }\n    let onNoMouse = () => {\n      mouse = null\n    }\n    let onTouch = e => {\n      touches = [].slice.call(e.touches)\n    }\n    let view = this.view\n    let width = this._skin.width\n    let height = this._skin.height\n    view.addEventListener('mousedown', onMouse, false)\n    view.addEventListener('mousemove', onUpdateMouse, false)\n    view.addEventListener('mouseup', onNoMouse, false)\n    view.addEventListener('touchstart', onTouch, false)\n    view.addEventListener('touchmove', onTouch, false)\n    view.addEventListener('touchend', onTouch, false)\n    this._teardownInteractivity = () => {\n      view.removeEventListener('mousedown', onMouse, false)\n      view.removeEventListener('mousemove', onUpdateMouse, false)\n      view.removeEventListener('mouseup', onNoMouse, false)\n      view.removeEventListener('touchstart', onTouch, false)\n      view.removeEventListener('touchmove', onTouch, false)\n      view.removeEventListener('touchend', onTouch, false)\n    }\n    this._input = {\n      get: () => {\n        let output = []\n        let rect = this.view.getBoundingClientRect()\n        if (mouse) {\n          output.push(point('mouse', mouse, rect))\n        }\n        for (let i = 0; i < touches.length; i++) {\n          let touch = touches[i]\n          output.push(point('touch' + touch.identifier, touch, rect))\n        }\n        return output\n      },\n    }\n    function point(id, p, rect) {\n      return {\n        x: ((p.clientX - rect.left) / rect.width) * width,\n        y: ((p.clientY - rect.top) / rect.height) * height,\n        id: id,\n      }\n    }\n  }\n}\n\nexport default Context\n","/**\n * A SkinNode is an internal representation of a Skin.\n *\n * Node.compile     :: (compiler, $xml) -> Node\n *\n * To implement:\n *\n * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n */\nexport class SkinNode {\n  static compile (compiler, $el) {\n    let node = new this()\n    node.compile(compiler, $el)\n    return node\n  }\n}\n\nexport default SkinNode\n","import Callbacks from 'bemuse/utils/callbacks'\n\nexport class Instance {\n  constructor (options) {\n    this._context = options.context\n    this._object = options.object\n    this._children = options.children\n    this._bindings = []\n    this._concerns = []\n    this.onData = new Callbacks(options.onData)\n    this.onDestroy = new Callbacks(options.onDestroy)\n    if (options.bindings) {\n      for (let binding of options.bindings) {\n        this.bind(...binding)\n      }\n    }\n    if (options.concerns) {\n      for (let concern of options.concerns) {\n        this._concerns.push(concern.instantiate(this._context, this))\n      }\n    }\n    if (options.children) {\n      for (let children of options.children) {\n        this._concerns.push(children.instantiate(this._context, this._object))\n      }\n    }\n    if (options.onCreate) {\n      new Callbacks(options.onCreate).call()\n    }\n    if (options.parent) {\n      this.attachTo(options.parent)\n    }\n  }\n  bind (...pipeline) {\n    let sideEffect = onChange(pipeline.pop())\n    if (pipeline.length === 1 && pipeline[0].constant) {\n      // optimize: don't add binding when expression is constant --\n      // just do it once\n      sideEffect(pipeline[0]())\n    } else {\n      this._bindings.push(value => {\n        for (var i = 0; i < pipeline.length; i++) {\n          value = pipeline[i](value)\n        }\n        sideEffect(value)\n      })\n    }\n  }\n  attachTo (parent) {\n    this._parent = parent\n    this._parent.addChild(this._object)\n  }\n  detach () {\n    if (this._parent) {\n      this._parent.removeChild(this._object)\n      this._parent = null\n    }\n  }\n  push (value) {\n    var i\n    for (i = 0; i < this._bindings.length; i++) {\n      this._bindings[i](value)\n    }\n    for (i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].push(value)\n    }\n    this.onData.call(value)\n  }\n  destroy () {\n    this.detach()\n    for (var i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].destroy()\n    }\n    this.onDestroy.call()\n    this._concerns = null\n    this._bindings = null\n    this._parent = null\n    this._object = null\n  }\n  get object () {\n    return this._object\n  }\n  get parent () {\n    return this._parent\n  }\n}\n\nfunction onChange (f) {\n  let value\n  return function receiveNewValue (v) {\n    if (value !== v) {\n      value = v\n      f(v)\n    }\n  }\n}\n\nexport default Instance\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from '../lib/base'\nimport Instance from '../lib/instance'\n\nimport Expression from '../../expression'\nimport Animation from './animation'\n\n// Numeric properties that may be interpreted as expressions.\nlet properties = [\n  { name: 'x', default: '0', apply: (obj, v) => (obj.x = v) },\n  { name: 'y', default: '0', apply: (obj, v) => (obj.y = v) },\n  { name: 'scale-x', default: '1', apply: (obj, v) => (obj.scale.x = v) },\n  { name: 'scale-y', default: '1', apply: (obj, v) => (obj.scale.y = v) },\n  { name: 'alpha', default: '1', apply: (obj, v) => (obj.alpha = v) },\n  { name: 'width', apply: (obj, v) => (obj.width = v) },\n  { name: 'height', apply: (obj, v) => (obj.height = v) },\n  { name: 'visible', apply: (obj, v) => (obj.visible = v) },\n]\n\nexport class DisplayObject extends SkinNode {\n  compile(compiler, $el) {\n    this._animation = Animation.compile(compiler, $el)\n    this._bindings = []\n    for (let property of properties) {\n      let code = $el.attr(property.name) || property.default\n      if (!code) continue\n      let expression = new Expression(code)\n      let getter = this._animation.prop(property.name, expression)\n      this._bindings.push({\n        getter: getter,\n        apply: property.apply,\n      })\n    }\n    this.blendMode = parseBlendMode($el.attr('blend') || 'normal')\n    this.ref = $el.attr('ref') || null\n  }\n  instantiate(context, subject) {\n    var object = subject.object\n    var bindings = []\n    var onDestroy = null\n    object.blendMode = this.blendMode\n    for (var i = 0; i < this._bindings.length; i++) {\n      var binding = this._bindings[i]\n      bindings.push([binding.getter, binding.apply.bind(null, object)])\n    }\n    if (this.ref) {\n      context.ref(this.ref, object)\n      onDestroy = () => context.unref(this.ref, object)\n    }\n    return new Instance({\n      bindings: bindings,\n      onDestroy: onDestroy,\n    })\n  }\n}\n\nfunction parseBlendMode(text) {\n  if (text === 'normal') return PIXI.BLEND_MODES.NORMAL\n  if (text === 'screen') return PIXI.BLEND_MODES.SCREEN\n  throw new Error('Invalid blend mode: ' + text)\n}\n\nexport default DisplayObject\n","import * as PIXI from 'pixi.js'\n\nexport function parseFrame (text) {\n  let m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/)\n  if (!m) return null\n  return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2])\n}\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\n\nimport DisplayObject from './concerns/display-object'\nimport { parseFrame } from './lib/utils'\n\nexport class Mask {\n  constructor(frame) {\n    this._frame = frame\n  }\n  instantiate(context, subject) {\n    let mask = new PIXI.Graphics()\n    mask.beginFill()\n    mask.drawShape(this._frame)\n    mask.endFill()\n    subject.object.mask = mask\n    return new Instance({\n      context: context,\n      object: mask,\n      parent: subject.object,\n    })\n  }\n}\n\nexport class GroupNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.display = DisplayObject.compile(compiler, $el)\n    let maskFrame = parseFrame($el.attr('mask') || '')\n    if (maskFrame) this.mask = new Mask(maskFrame)\n  }\n  instantiate(context, container) {\n    let object = new PIXI.Container()\n    let concerns = [this.display]\n    if (this.mask) {\n      concerns.push(this.mask)\n    }\n    return new Instance({\n      context: context,\n      object: object,\n      parent: container,\n      concerns: concerns,\n      children: this.children,\n    })\n  }\n}\n\nexport default GroupNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport Expression from '../expression'\n\nexport class IfNode extends SkinNode {\n  compile(compiler, $el) {\n    let children = compiler.compileChildren($el)\n    if (children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + children.length + ' found'\n      )\n    }\n    this.child = children[0]\n    this.key = new Expression($el.attr('key'))\n    this.value = String($el.attr('value'))\n  }\n  instantiate(context, container) {\n    let object = new PIXI.Container()\n    let expr = this.key\n    let value = this.value\n    let childNode = this.child\n    let child = null\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      onData: data => {\n        if (String(expr(data)) === value) {\n          if (child === null) {\n            child = childNode.instantiate(context, object)\n          }\n          child.push(data)\n        } else {\n          if (child !== null) {\n            child.destroy()\n            child = null\n          }\n        }\n      },\n    })\n  }\n}\n\nexport default IfNode\n","import * as PIXI from 'pixi.js'\n\nimport Expression from '../expression'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nfunction ChildManager(expr, child, poolSize) {\n  return {\n    instantiate(context, subject) {\n      let instances = new Map()\n      let pool = []\n      initPool()\n      return new Instance({\n        context: context,\n        onData: data => {\n          update(expr(data))\n        },\n      })\n      function initPool() {\n        var instance\n        for (var i = 0; i < poolSize; i++) {\n          instance = child.instantiate(context, subject.object)\n          instance.detach()\n          pool.push(instance)\n        }\n      }\n      function update(array) {\n        var unused = new Set(instances.keys())\n        var key\n        var item\n        var instance\n        if (!array) array = []\n        for (var i = 0; i < array.length; i++) {\n          item = array[i]\n          key = item.key\n          if (instances.has(key)) {\n            instance = instances.get(key)\n          } else {\n            instance = createInstance()\n            instances.set(key, instance)\n          }\n          instance.push(item)\n          unused.delete(key)\n        }\n        for (key of unused) {\n          instance = instances.get(key)\n          instance.detach()\n          instances.delete(key)\n          pool.push(instance)\n        }\n      }\n      function createInstance() {\n        var instance = pool.pop()\n        if (instance) {\n          instance.attachTo(subject.object)\n        } else {\n          instance = child.instantiate(context, subject.object)\n        }\n        return instance\n      }\n    },\n  }\n}\n\nexport class ObjectNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    if (this.children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + this.children.length + ' given'\n      )\n    }\n    this.pool = +$el.attr('pool') || 1\n    this.key = new Expression($el.attr('key'))\n  }\n  instantiate(context, container) {\n    let batch = new PIXI.particles.ParticleContainer(undefined, {\n      position: true,\n      alpha: true,\n    })\n    let manager = new ChildManager(this.key, this.children[0], this.pool)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: batch,\n      concerns: [manager],\n    })\n  }\n}\n\nexport default ObjectNode\n","import * as PIXI from 'pixi.js'\n\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nexport class SkinRootNode extends SkinNode {\n  compile(compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.width = +$el.attr('width')\n    this.height = +$el.attr('height')\n    this.data = $el.data()\n  }\n  instantiate(context) {\n    let stage = new PIXI.Stage(0x090807)\n    return new Instance({\n      context: context,\n      object: stage,\n      children: this.children,\n    })\n  }\n}\n\nexport default SkinRootNode\n","import * as PIXI from 'pixi.js'\n\nimport DisplayObject from './concerns/display-object'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\nimport { parseFrame } from './lib/utils'\n\nexport class SpriteNode extends SkinNode {\n  compile(compiler, $el) {\n    this.url = compiler.resources.get($el.attr('image'))\n    this.display = DisplayObject.compile(compiler, $el)\n    this.frame = parseFrame($el.attr('frame') || '')\n    this.anchorX = +$el.attr('anchor-x') || 0\n    this.anchorY = +$el.attr('anchor-y') || 0\n  }\n  instantiate(context, container) {\n    let sprite = new PIXI.Sprite(this.getTexture())\n    sprite.anchor.x = this.anchorX\n    sprite.anchor.y = this.anchorY\n    return new Instance({\n      context: context,\n      object: sprite,\n      parent: container,\n      concerns: [this.display],\n    })\n  }\n  getTexture() {\n    if (this._texture) return this._texture\n    let scaleMode = PIXI.SCALE_MODES.NEAREST\n    let base = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode)\n    let texture = new PIXI.Texture(base, this.frame)\n    this._texture = texture\n    return texture\n  }\n}\n\nexport default SpriteNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport DisplayObject from './concerns/display-object'\nimport Expression from '../expression'\n\nexport class TextNode extends SkinNode {\n  compile(compiler, $el) {\n    this.font = $el.attr('font')\n    this.text = $el.attr('text')\n    this.data = new Expression($el.attr('data') || '0')\n    this.display = DisplayObject.compile(compiler, $el)\n    this.ttf = !$el.attr('font-src')\n    this.fill = $el.attr('fill')\n    this.align =\n      $el.attr('align') === 'left' ? 0 : $el.attr('align') === 'right' ? 1 : 0.5\n  }\n  instantiate(context, container) {\n    let text\n    if (this.ttf) {\n      text = new PIXI.Text(this.text, {\n        font: this.font,\n        fill: this.fill,\n      })\n    } else {\n      text = new PIXI.extras.BitmapText(this.text, { font: this.font })\n    }\n    let object = new PIXI.Container()\n    object.addChild(text)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      concerns: [this.display],\n      bindings: [\n        [\n          this.data,\n          v => {\n            text.text = this.text.replace('%s', v)\n            text.updateText()\n            text.x = text.width * -this.align\n          },\n        ],\n      ],\n    })\n  }\n}\n\nexport default TextNode\n","import $ from 'jquery'\nimport debug from 'debug'\n\nimport GroupNode from './nodes/group'\nimport IfNode from './nodes/if'\nimport ObjectNode from './nodes/object'\nimport SkinRootNode from './nodes/skin-root'\nimport SpriteNode from './nodes/sprite'\nimport TextNode from './nodes/text'\n\nconst log = debug('scintillator:compiler')\n\nlet NODES = {\n  skin: SkinRootNode,\n  sprite: SpriteNode,\n  group: GroupNode,\n  object: ObjectNode,\n  text: TextNode,\n  if: IfNode,\n}\n\n/**\n * A Compiler compiles the $xml theme file into SkinNode.\n */\nclass Compiler {\n  constructor(env) {\n    Object.assign(this, env)\n    this._defs = new Map()\n  }\n  compile($el) {\n    let nodeName = $el[0].nodeName\n    log('compiling', $el[0])\n    let Node = Compiler.getNodeClass(nodeName)\n    if (!Node) throw new Error('Invalid node name: ' + nodeName)\n    return Node.compile(this, $el)\n  }\n  compileChildren($el) {\n    let output = []\n    for (let child of Array.from($el.children())) {\n      let nodeName = child.nodeName\n      if (nodeName === 'defs') {\n        this.compileDefs($(child))\n      } else if (nodeName === 'use') {\n        output.push(this.getDef(child.getAttribute('def')))\n      } else {\n        let Node = Compiler.getNodeClass(nodeName)\n        if (Node) output.push(this.compile($(child)))\n      }\n    }\n    return output\n  }\n  compileDefs($el) {\n    for (let child of Array.from($el.children())) {\n      let id = child.getAttribute('id')\n      if (!id) throw new Error('A def should have an id: ' + child.nodeName)\n      this._defs.set(id, this.compile($(child)))\n    }\n  }\n  getDef(id) {\n    let node = this._defs.get(id)\n    if (!node) throw new Error('Cannot find def: ' + id)\n    return node\n  }\n\n  static getNodeClass(nodeName) {\n    return NODES[nodeName]\n  }\n}\n\nexport default Compiler\n","import _ from 'lodash'\n\n/**\n * The resources class contains a mapping from an image \"src\" to the resolved\n * image \"url.\"\n */\nexport class Resources {\n  constructor() {\n    this._map = {}\n  }\n  add(src, url) {\n    this._map[src] = url\n  }\n  get(src) {\n    if (!(src in this._map)) throw new Error('Not registered: ' + src)\n    return this._map[src]\n  }\n  get urls() {\n    return _.values(this._map)\n  }\n}\n\nexport default Resources\n","import * as PIXI from 'pixi.js'\nimport $ from 'jquery'\nimport co from 'co'\nimport debug from 'debug'\nimport url from 'url'\nimport { PERCENTAGE_FORMATTER } from 'bemuse/progress/formatters'\n\nimport Compiler from './compiler'\nimport Resources from './resources'\n\nconst log = debug('scintillator:loader')\n\nexport function load(xmlPath, progress) {\n  return co(function*() {\n    log('load XML from %s', xmlPath)\n    let $xml = yield loadXml(xmlPath)\n\n    // scan all images\n    let resources = new Resources()\n    let paths = new Set()\n    for (let element of Array.from($xml.find('[image]'))) {\n      paths.add($(element).attr('image'))\n    }\n    for (let element of Array.from($xml.find('[font-src]'))) {\n      paths.add($(element).attr('font-src'))\n    }\n    for (let path of paths) {\n      let assetUrl = url.resolve(xmlPath, path)\n      resources.add(path, assetUrl)\n    }\n\n    // load all images + progress reporting\n    yield loadResources(resources, progress)\n\n    // compile the skin\n    log('compiling')\n    let skin = new Compiler({ resources }).compile($xml)\n\n    return skin\n  })\n}\n\nfunction loadXml(xmlUrl) {\n  return Promise.resolve($.ajax({ url: xmlUrl, dataType: 'xml' })).then(xml =>\n    $(xml.documentElement)\n  )\n}\n\nfunction loadResources(resources, progress) {\n  log('loading resources')\n  return new Promise(function(resolve) {\n    if (resources.urls.length === 0) return resolve()\n    let loader = new PIXI.loaders.Loader()\n    for (let url of resources.urls) {\n      loader.add(url, url)\n    }\n    loader.once('complete', function() {\n      log('resources finished loading')\n      resolve()\n    })\n    if (progress) {\n      progress.formatter = PERCENTAGE_FORMATTER\n      loader.once('complete', function() {\n        progress.report(100, 100)\n      })\n      loader.on('progress', function() {\n        progress.report(loader.progress, 100)\n      })\n    }\n    loader.load()\n  })\n}\n","import { Context } from './context'\nimport { load } from './loader'\n\nexport { load, Context }\n\nexport function getSkinUrl({ displayMode } = {}) {\n  if (displayMode === 'touch3d') {\n    return '/skins/default/skin_touch3d.xml'\n  } else {\n    if (window.innerWidth < window.innerHeight) {\n      return '/skins/default/skin_touch.xml'\n    } else {\n      return '/skins/default/skin_screen.xml'\n    }\n  }\n}\n"],"sourceRoot":""}
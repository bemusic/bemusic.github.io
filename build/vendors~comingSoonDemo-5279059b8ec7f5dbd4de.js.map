{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/node_modules/throat/index.js","file:///home/circleci/bemuse/node_modules/audio-context/index.js","file:///home/circleci/bemuse/node_modules/bytes/index.js","file:///home/circleci/bemuse/node_modules/buffer/index.js","file:///home/circleci/bemuse/node_modules/base64-js/index.js","file:///home/circleci/bemuse/node_modules/ieee754/index.js","file:///home/circleci/bemuse/node_modules/buffer/node_modules/isarray/index.js","file:///home/circleci/bemuse/node_modules/webpack/buildin/module.js"],"names":["Delayed","resolve","fn","self","args","this","module","exports","PromiseArgument","Promise","throat","size","queue","run","result","apply","then","release","push","length","next","shift","temp","i","arguments","Error","cache","options","window","OfflineContext","OfflineAudioContext","webkitOfflineAudioContext","Context","AudioContext","webkitAudioContext","sampleRate","offline","channels","ctx","err","value","parse","format","formatThousandsRegExp","formatDecimalsRegExp","map","b","kb","mb","gb","tb","parseRegExp","Number","isFinite","mag","Math","abs","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","Boolean","unit","toLowerCase","str","toFixed","replace","val","isNaN","floatValue","results","exec","parseFloat","parseInt","floor","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","prototype","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","type","data","fromObject","assertSize","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","log","LN2","webpackPolyfill","deprecate","paths","children","enumerable","get","l"],"mappings":"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","file":"build/vendors~comingSoonDemo-5279059b8ec7f5dbd4de.js","sourcesContent":["'use strict'\n\nmodule.exports = function (PromiseArgument) {\n  var Promise;\n  function throat(size, fn) {\n    var queue = []\n    function run(fn, self, args) {\n      if (size) {\n        size--\n        var result = new Promise(function (resolve) {\n          resolve(fn.apply(self, args))\n        })\n        result.then(release, release)\n        return result\n      } else {\n        return new Promise(function (resolve) {\n          queue.push(new Delayed(resolve, fn, self, args))\n        })\n      }\n    }\n    function release() {\n      size++\n      if (queue.length) {\n        var next = queue.shift()\n        next.resolve(run(next.fn, next.self, next.args))\n      }\n    }\n    if (typeof size === 'function' && typeof fn === 'number') {\n      var temp = fn;\n      fn = size;\n      size = temp;\n    }\n    if (typeof fn === 'function') {\n      return function () {\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args)\n      }\n    } else {\n      return function (fn) {\n        var args = [];\n        for (var i = 1; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args)\n      }\n    }\n  }\n  if (typeof arguments[0] === 'number' || typeof arguments[1] === 'number') {\n    Promise = module.exports.Promise;\n    if (typeof Promise !== 'function') {\n      throw new Error('You must provide a Promise polyfill for this library to work in older environments');\n    }\n    return throat(arguments[0], arguments[1]);\n  } else {\n    Promise = PromiseArgument;\n    return throat;\n  }\n}\n\n/* istanbul ignore next */\nif (typeof Promise === 'function') {\n  module.exports.Promise = Promise;\n}\n\nfunction Delayed(resolve, fn, self, args) {\n  this.resolve = resolve\n  this.fn = fn\n  this.self = self || null\n  this.args = args\n}\n","'use strict'\r\n\r\nvar cache = {}\r\n\r\nmodule.exports = function getContext (options) {\r\n\tif (typeof window === 'undefined') return null\r\n\t\r\n\tvar OfflineContext = window.OfflineAudioContext || window.webkitOfflineAudioContext\r\n\tvar Context = window.AudioContext || window.webkitAudioContext\r\n\t\r\n\tif (!Context) return null\r\n\r\n\tif (typeof options === 'number') {\r\n\t\toptions = {sampleRate: options}\r\n\t}\r\n\r\n\tvar sampleRate = options && options.sampleRate\r\n\r\n\r\n\tif (options && options.offline) {\r\n\t\tif (!OfflineContext) return null\r\n\r\n\t\treturn new OfflineContext(options.channels || 2, options.length, sampleRate || 44100)\r\n\t}\r\n\r\n\r\n\t//cache by sampleRate, rather strong guess\r\n\tvar ctx = cache[sampleRate]\r\n\r\n\tif (ctx) return ctx\r\n\r\n\t//several versions of firefox have issues with the\r\n\t//constructor argument\r\n\t//see: https://bugzilla.mozilla.org/show_bug.cgi?id=1361475\r\n\ttry {\r\n\t\tctx = new Context(options)\r\n\t}\r\n\tcatch (err) {\r\n\t\tctx = new Context()\r\n\t}\r\n\tcache[ctx.sampleRate] = cache[sampleRate] = ctx\r\n\r\n\treturn ctx\r\n}\r\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: ((1 << 30) * 1024)\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}
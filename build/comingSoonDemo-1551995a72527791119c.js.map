{"version":3,"file":"build/comingSoonDemo-1551995a72527791119c.js","mappings":"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","sources":["file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/bytes@3.1.2/node_modules/bytes/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/coming-soon/demo/style.scss","file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/delay@5.0.0/node_modules/delay/index.js","file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/libarchive.js@1.3.0/node_modules/libarchive.js/src/compressed-file.js","file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/libarchive.js@1.3.0/node_modules/libarchive.js/src/libarchive.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/coming-soon/demo/template.jade","file:///home/runner/work/bemuse/bemuse/common/temp/node_modules/.pnpm/throat@2.0.2/node_modules/throat/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/audio-context/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/coming-soon/demo/style.scss?[contenthash]","file:///home/runner/work/bemuse/bemuse/bemuse/src/coming-soon/demo/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/Progress.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/formatters.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/index.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/progress/utils.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/addUnprefixed.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/resource-logging.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/unarchiver.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/custom-song-resources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/resources/dnd-resources.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/sampling-master/index.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/sampling-master/ogg.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/callbacks.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/download.js","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/observable.ts","file:///home/runner/work/bemuse/bemuse/bemuse/src/utils/read-blob.js"],"sourcesContent":["/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../common/temp/node_modules/.pnpm/css-loader@6.7.3_webpack@5.75.0/node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../common/temp/node_modules/.pnpm/css-loader@6.7.3_webpack@5.75.0/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  transition: 0.5s opacity;\\n}\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n.jukebox button {\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./coming-soon/demo/style.scss\"],\"names\":[],\"mappings\":\"AACE;EACE,eAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,oCAAA;AAAJ;AAGE;EACE,kBAAA;EACA,QAAA;EACA,SAAA;EACA,gCAAA;EACA,yBAAA;EACA,mBAAA;EACA,aAAA;AADJ;AAIE;EACE,mBAAA;EACA,YAAA;EACA,yBAAA;EACA,gBAAA;EACA,aAAA;EACA,WAAA;EACA,cAAA;AAFJ;AAGI;EACE,eAAA;EACA,UAAA;EACA,wBAAA;AADN;AAGI;EACE,cAAA;EACA,UAAA;AADN;AAKE;EACE,gBAAA;EACA,gDAAA;AAHJ;AAME;EACE,gBAAA;AAJJ;AAOE;EACE,cAAA;EACA,kBAAA;EACA,mBAAA;AALJ;AAQE;EACE,cAAA;EACA,sBAAA;EACA,WAAA;EACA,mBAAA;EACA,WAAA;EACA,eAAA;EACA,yBAAA;EACA,YAAA;EACA,mCAAA;EACA,gBAAA;AANJ\",\"sourcesContent\":[\".jukebox {\\n  &--overlay {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    background: rgba(#8b8685, 0.5);\\n  }\\n\\n  &--inner {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    border: 2px solid #8b8685;\\n    background: #252423;\\n    padding: 12px;\\n  }\\n\\n  &--sampler {\\n    background: #090807;\\n    padding: 9px;\\n    border: 1px solid #8b8685;\\n    margin-top: 10px;\\n    height: 192px;\\n    width: 40em;\\n    overflow: auto;\\n    span {\\n      font-size: 12px;\\n      opacity: 1;\\n      transition: 0.5s opacity;\\n    }\\n    span.is-off {\\n      color: #8b8685;\\n      opacity: 0;\\n    }\\n  }\\n\\n  h1 {\\n    margin: 0 0 20px;\\n    font: 30px Helvetica Neue, Helvetica, sans-serif;\\n  }\\n\\n  p {\\n    margin: 10px 0 0;\\n  }\\n\\n  & &--status {\\n    color: #8b8685;\\n    font-style: italic;\\n    margin-bottom: 20px;\\n  }\\n\\n  button {\\n    display: block;\\n    box-sizing: border-box;\\n    width: 100%;\\n    background: #090807;\\n    color: #7f3;\\n    cursor: pointer;\\n    border: 1px solid #8b8685;\\n    padding: 8px;\\n    font: bold 15px verdana, sans-serif;\\n    margin-top: 18px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","\r\n/**\r\n * Represents compressed file before extraction\r\n */\r\nexport class CompressedFile{\r\n\r\n    constructor(name,size,path,archiveRef){\r\n        this._name = name;\r\n        this._size = size;\r\n        this._path = path;\r\n        this._archiveRef = archiveRef;\r\n    }\r\n\r\n    /**\r\n     * file name\r\n     */\r\n    get name(){\r\n        return this._name;\r\n    }\r\n    /**\r\n     * file size\r\n     */\r\n    get size(){\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * Extract file from archive\r\n     * @returns {Promise<File>} extracted file\r\n     */\r\n    extract(){\r\n        return this._archiveRef.extractSingleFile(this._path);\r\n    }\r\n\r\n}","import { CompressedFile } from \"./compressed-file.js\";\r\n\r\n\r\nexport class Archive{\r\n\r\n    /**\r\n     * Initialize libarchivejs\r\n     * @param {Object} options \r\n     */\r\n    static init(options = {}){\r\n        Archive._options = {\r\n            workerUrl: '../dist/worker-bundle.js',\r\n            ...options\r\n        };\r\n        return Archive._options;\r\n    }\r\n\r\n    /**\r\n     * Creates new archive instance from browser native File object\r\n     * @param {File} file\r\n     * @param {object} options\r\n     * @returns {Archive}\r\n     */\r\n    static open(file, options = null){\r\n        options =   options || \r\n                    Archive._options || \r\n                    Archive.init() && console.warn('Automatically initializing using options: ', Archive._options);\r\n        const arch = new Archive(file,options);\r\n        return arch.open();\r\n    }\r\n\r\n    /**\r\n     * Create new archive\r\n     * @param {File} file \r\n     * @param {Object} options \r\n     */\r\n    constructor(file,options){\r\n        this._worker = new Worker(options.workerUrl);\r\n        this._worker.addEventListener('message', this._workerMsg.bind(this));\r\n        this._callbacks = [];\r\n        this._content = {};\r\n        this._processed = 0;\r\n        this._file = file;\r\n    }\r\n\r\n    /**\r\n     * Prepares file for reading\r\n     * @returns {Promise<Archive>} archive instance\r\n     */\r\n    async open(){\r\n        await this._postMessage({type: 'HELLO'},(resolve,reject,msg) => {\r\n            if( msg.type === 'READY' ){\r\n                resolve();\r\n            }\r\n        });\r\n        return await this._postMessage({type: 'OPEN', file: this._file}, (resolve,reject,msg) => {\r\n            if(msg.type === 'OPENED'){\r\n                resolve(this);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * detect if archive has encrypted data\r\n     * @returns {boolean|null} null if could not be determined\r\n     */\r\n    hasEncryptedData(){\r\n        return this._postMessage({type: 'CHECK_ENCRYPTION'}, \r\n            (resolve,reject,msg) => {\r\n                if( msg.type === 'ENCRYPTION_STATUS' ){\r\n                    resolve(msg.status);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * set password to be used when reading archive\r\n     */\r\n    usePassword(archivePassword){\r\n        return this._postMessage({type: 'SET_PASSPHRASE', passphrase: archivePassword},\r\n            (resolve,reject,msg) => {\r\n                if( msg.type === 'PASSPHRASE_STATUS' ){\r\n                    resolve(msg.status);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns object containing directory structure and file information \r\n     * @returns {Promise<object>}\r\n     */\r\n    getFilesObject(){\r\n        if( this._processed > 0 ){\r\n            return Promise.resolve().then( () => this._content );\r\n        }\r\n        return this._postMessage({type: 'LIST_FILES'}, (resolve,reject,msg) => {\r\n            if( msg.type === 'ENTRY' ){\r\n                const entry = msg.entry;\r\n                const [ target, prop ] = this._getProp(this._content,entry.path);\r\n                if( entry.type === 'FILE' ){\r\n                    target[prop] = new CompressedFile(entry.fileName,entry.size,entry.path,this);                    \r\n                }\r\n                return true;\r\n            }else if( msg.type === 'END' ){\r\n                this._processed = 1;\r\n                resolve(this._cloneContent(this._content));\r\n            }\r\n        });\r\n    }\r\n\r\n    getFilesArray(){\r\n        return this.getFilesObject().then( (obj) => {\r\n            return this._objectToArray(obj);\r\n        });\r\n    }\r\n\r\n    extractSingleFile(target){\r\n        return this._postMessage({type: 'EXTRACT_SINGLE_FILE', target: target}, \r\n            (resolve,reject,msg) => {\r\n                if( msg.type === 'FILE' ){\r\n                    const file = new File([msg.entry.fileData], msg.entry.fileName, {\r\n                        type: 'application/octet-stream'\r\n                    });\r\n                    resolve(file);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns object containing directory structure and extracted File objects \r\n     * @param {Function} extractCallback\r\n     * \r\n     */\r\n    extractFiles(extractCallback){\r\n        if( this._processed > 1 ){\r\n            return Promise.resolve().then( () => this._content );\r\n        }\r\n        return this._postMessage({type: 'EXTRACT_FILES'}, (resolve,reject,msg) => {\r\n            if( msg.type === 'ENTRY' ){\r\n                const [ target, prop ] = this._getProp(this._content,msg.entry.path);\r\n                if( msg.entry.type === 'FILE' ){\r\n                    target[prop] = new File([msg.entry.fileData], msg.entry.fileName, {\r\n                        type: 'application/octet-stream'\r\n                    });\r\n                    if (extractCallback !== undefined) {\r\n                        setTimeout(extractCallback.bind(null,{\r\n                            file: target[prop],\r\n                            path: msg.entry.path,\r\n                        }));\r\n                    }\r\n                }\r\n                return true;\r\n            }else if( msg.type === 'END' ){\r\n                this._processed = 2;\r\n                this._worker.terminate();\r\n                resolve(this._cloneContent(this._content));\r\n            }\r\n        });\r\n    }\r\n\r\n    _cloneContent(obj){\r\n        if( obj instanceof File || obj instanceof CompressedFile || obj === null ) return obj;\r\n        const o = {};\r\n        for( const prop of Object.keys(obj) ){\r\n            o[prop] = this._cloneContent(obj[prop]);\r\n        }\r\n        return o;\r\n    }\r\n\r\n    _objectToArray(obj,path = ''){\r\n        const files = [];\r\n        for( const key of Object.keys(obj) ){\r\n            if( obj[key] instanceof File || obj[key] instanceof CompressedFile || obj[key] === null ){\r\n                files.push({\r\n                    file: obj[key] || key,\r\n                    path: path\r\n                });\r\n            }else{\r\n                files.push( ...this._objectToArray(obj[key],`${path}${key}/`) );\r\n            }\r\n        }\r\n        return files;\r\n    }\r\n\r\n    _getProp(obj,path){\r\n        const parts = path.split('/');\r\n        if( parts[parts.length -1] === '' ) parts.pop();\r\n        let cur = obj, prev = null;\r\n        for( const part of parts ){\r\n            cur[part] = cur[part] || {};\r\n            prev = cur;\r\n            cur = cur[part];\r\n        }\r\n        return [ prev, parts[parts.length-1] ];\r\n    }\r\n\r\n    _postMessage(msg,callback){\r\n        this._worker.postMessage(msg);\r\n        return new Promise((resolve,reject) => {\r\n            this._callbacks.push( this._msgHandler.bind(this,callback,resolve,reject) );\r\n        });\r\n    }\r\n\r\n    _msgHandler(callback,resolve,reject,msg){\r\n        if( msg.type === 'BUSY' ){\r\n            reject('worker is busy');\r\n        }else if( msg.type === 'ERROR' ){\r\n            reject(msg.error);\r\n        }else{\r\n            return callback(resolve,reject,msg);\r\n        }\r\n    }\r\n\r\n    _workerMsg({data: msg}){\r\n        const callback = this._callbacks[this._callbacks.length -1];\r\n        const next = callback(msg);\r\n        if( !next ){\r\n            this._callbacks.pop();\r\n        }\r\n    }\r\n\r\n}","var pug = require(\"!../../../../common/temp/node_modules/.pnpm/pug@2.0.4/node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv class=\\\"jukebox\\\"\\u003E\\u003Cdiv class=\\\"jukebox--overlay\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"jukebox--inner\\\"\\u003E\\u003Ch1\\u003EBMS Jukebox\\u003C\\u002Fh1\\u003E\\u003Cp class=\\\"jukebox--status js-log\\\"\\u003EWaiting for BMS file...\\u003C\\u002Fp\\u003E\\u003Cp\\u003EGoogle Chrome: Drag a BMS folder into this box.\\u003C\\u002Fp\\u003E\\u003Cp\\u003EFirefox, Safari: Select all files (BMS+sounds) and drag into this box.\\u003C\\u002Fp\\u003E\\u003Cbutton class=\\\"js-play\\\"\\u003EClick Here to Play\\u003C\\u002Fbutton\\u003E\\u003Cdiv class=\\\"js-sampler jukebox--sampler\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","'use strict'\n\nmodule.exports = function (PromiseArgument) {\n  var Promise;\n  function throat(size, fn) {\n    var queue = []\n    function run(fn, self, args) {\n      if (size) {\n        size--\n        var result = new Promise(function (resolve) {\n          resolve(fn.apply(self, args))\n        })\n        result.then(release, release)\n        return result\n      } else {\n        return new Promise(function (resolve) {\n          queue.push(new Delayed(resolve, fn, self, args))\n        })\n      }\n    }\n    function release() {\n      size++\n      if (queue.length) {\n        var next = queue.shift()\n        next.resolve(run(next.fn, next.self, next.args))\n      }\n    }\n    if (typeof size === 'function' && typeof fn === 'number') {\n      var temp = fn;\n      fn = size;\n      size = temp;\n    }\n    if (typeof fn === 'function') {\n      return function () {\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args)\n      }\n    } else {\n      return function (fn) {\n        var args = [];\n        for (var i = 1; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args)\n      }\n    }\n  }\n  if (typeof arguments[0] === 'number' || typeof arguments[1] === 'number') {\n    Promise = module.exports.Promise;\n    if (typeof Promise !== 'function') {\n      throw new Error('You must provide a Promise polyfill for this library to work in older environments');\n    }\n    return throat(arguments[0], arguments[1]);\n  } else {\n    Promise = PromiseArgument;\n    return throat;\n  }\n}\n\n/* istanbul ignore next */\nif (typeof Promise === 'function') {\n  module.exports.Promise = Promise;\n}\n\nfunction Delayed(resolve, fn, self, args) {\n  this.resolve = resolve\n  this.fn = fn\n  this.self = self || null\n  this.args = args\n}\n","export default new AudioContext({\n  latencyHint: 'interactive',\n})\n","\n      import API from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../common/temp/node_modules/.pnpm/style-loader@3.3.1_webpack@5.75.0/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../common/temp/node_modules/.pnpm/css-loader@6.7.3_webpack@5.75.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../common/temp/node_modules/.pnpm/postcss-loader@7.0.2_webpack@5.75.0/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!../../../../common/temp/node_modules/.pnpm/sass-loader@13.2.0_sass@1.57.1+webpack@5.75.0/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[5].use[3]!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../common/temp/node_modules/.pnpm/css-loader@6.7.3_webpack@5.75.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].use[1]!../../../../common/temp/node_modules/.pnpm/postcss-loader@7.0.2_webpack@5.75.0/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].use[2]!../../../../common/temp/node_modules/.pnpm/sass-loader@13.2.0_sass@1.57.1+webpack@5.75.0/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[5].use[3]!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import './style.scss'\n\nimport $ from 'jquery'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport ctx from 'bemuse/audio-context'\nimport { Compiler, Notes, Reader, SongInfo, Timing } from 'bms'\n\nimport template from './template.jade'\n\nexport function main(element) {\n  $(element).text('Technical Demo!').on('click', handler)\n\n  function handler() {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui() {\n    const el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', (e) => {\n      e.preventDefault()\n      const dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nasync function go(loader, element) {\n  const master = new SamplingMaster(ctx)\n  const $log = element.find('.js-log')\n  const $play = element.find('.js-play').hide()\n  const $sampler = element.find('.js-sampler')\n\n  log('Loading file list')\n  const list = await loader.fileList\n  const bmsFile = list.filter((f) => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n  log('Loading ' + bmsFile)\n\n  const loadedFile = await loader.file(bmsFile)\n  const arraybuffer = await loadedFile.read()\n  const buffer = Buffer.from(new Uint8Array(arraybuffer))\n  const text = await Reader.readAsync(buffer)\n  const chart = Compiler.compile(text).chart\n  const timing = Timing.fromBMSChart(chart)\n  const notes = Notes.fromBMSChart(chart)\n  const info = SongInfo.fromBMSChart(chart)\n  $('<pre wrap></pre>').text(JSON.stringify(info, null, 2)).appendTo($sampler)\n  log('Loading samples')\n  const loadedSamples = await loadSamples(notes, chart)\n  log('Click the button to play!')\n  await waitForPlay()\n  void (function () {\n    master.unmute()\n    for (const note of notes.all()) {\n      setTimeout(() => {\n        const sample = loadedSamples[note.keysound]\n        if (!sample) {\n          console.log('warn: unknown sample ' + note.keysound)\n          return\n        }\n        const span = $('<span></span>')\n          .text('[' + note.keysound + '] ')\n          .appendTo($sampler)\n        const instance = sample.play()\n        $sampler[0].scrollTop = $sampler[0].scrollHeight\n        instance.onstop = function () {\n          span.addClass('is-off')\n        }\n      }, timing.beatToSeconds(note.beat) * 1000)\n    }\n    return false\n  })()\n\n  function waitForPlay() {\n    return new Promise(function (resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log(t) {\n    $log.text(t)\n  }\n\n  function loadSamples(_notes, _chart) {\n    const samples = {}\n    const promises = []\n    let completed = 0\n\n    for (const note of _notes.all()) {\n      const keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(async () => {\n          try {\n            const blob = await loadKeysound(\n              _chart.headers.get('wav' + keysound)\n            )\n            const sample = await master.sample(blob)\n            samples[keysound] = sample\n            log('[loaded ' + ++completed + '/' + promises.length + ' samples]')\n          } catch (e) {\n            console.error('Unable to load ' + keysound + ': ' + e)\n          }\n        })\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound(name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.m4a')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.flac')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then((file) => file.read())\n  }\n}\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","import bytes from 'bytes'\n\nconst wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport const BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport const PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport const EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport async function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): Promise<T> {\n  if (!progress) return promise\n  const data = await Promise.resolve(promise)\n  if (hasByteLength(data)) {\n    progress.formatter = BYTES_FORMATTER\n    progress.report(data.byteLength, data.byteLength)\n  } else {\n    progress.report(1, 1)\n  }\n  return data\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return async function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    const ret = await f.apply(this, args)\n    progress.report(++current, total)\n    return ret\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  const queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","export function addUnprefixed(\n  prefix: string,\n  name: string,\n  callback: (path: string) => void\n) {\n  if (name.match(/\\.(?:bms|bme|bml|bmson)/i)) {\n    callback(name)\n    return\n  }\n  const parts = (prefix + name).split('/')\n  for (let i = 0; i < parts.length; i++) {\n    callback(parts.slice(i).join('/'))\n  }\n}\n","import { LoggingFunction } from './types'\n\nexport default class ResourceLogging {\n  private buffer: string[] | null = []\n  private loggingFunction: LoggingFunction = (text) => {\n    if (this.buffer) this.buffer.push(text)\n  }\n\n  public log: LoggingFunction = (text) => {\n    this.loggingFunction(text)\n  }\n\n  setLoggingFunction = (fn: LoggingFunction) => {\n    this.loggingFunction = fn\n    if (this.buffer) {\n      this.buffer.forEach((text) => fn(text))\n      this.buffer = null\n    }\n  }\n}\n","import { Archive } from 'libarchive.js/main.js'\nimport { addUnprefixed } from './addUnprefixed'\nimport { FileEntry } from './types'\n\nArchive.init({\n  workerUrl: '/vendor/libarchive.js-1.3.0/dist/worker-bundle.js',\n})\n\nexport async function unarchive(file: File): Promise<FileEntry[]> {\n  const out: FileEntry[] = []\n  const archive = await Archive.open(file)\n  const extracted = await archive.extractFiles()\n  const traverse = (tree: any, prefix = '') => {\n    for (const key of Object.keys(tree)) {\n      if (tree[key] instanceof File) {\n        addUnprefixed(prefix, key, (name) => {\n          out.push({ name, file: tree[key] })\n        })\n      } else if (tree[key] && typeof tree[key] === 'object') {\n        traverse(tree[key], prefix + key + '/')\n      }\n    }\n  }\n  traverse(extracted)\n  return out\n}\n","import * as ProgressUtils from 'bemuse/progress/utils'\nimport {\n  FileEntry,\n  LoggingFunction,\n  IResource,\n  ICustomSongResources,\n} from './types'\nimport ResourceLogging from './resource-logging'\nimport { unarchive } from './unarchiver'\nimport readBlob from 'bemuse/utils/read-blob'\nimport Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\n\nexport const ARCHIVE_REGEXP = /\\.(?:zip|rar|7z|tar(?:\\.(?:gz|bz2))?)/i\n\n// http://nekokan.dyndns.info/tool/DropboxReplacer/index.html\nconst DROPBOX_REGEXP =\n  /https?:\\/\\/(?:(?:www|dl)\\.dropbox\\.com|dl\\.dropboxusercontent\\.com)\\/(sh?)\\/([^?]*)(.*)?$/\n\n/**\n * A resource provider for custom songs.\n * It may retrieve the files from, e.g., a drag and drop event or an `?archive` flag.\n */\nexport interface CustomResourceProvider {\n  getFiles(loggingFunction: LoggingFunction): PromiseLike<FileEntry[]>\n}\n\n/**\n * An IResources for songs provided by a CustomResourceProvider.\n */\nexport class CustomSongResources implements ICustomSongResources {\n  private _logging = new ResourceLogging()\n  private _files: PromiseLike<FileEntry[]>\n  public setLoggingFunction = this._logging.setLoggingFunction\n\n  constructor(provider: CustomResourceProvider) {\n    this._files = Promise.resolve(provider.getFiles(this._logging.log)).then(\n      (files) => unarchiveIfNeeded(files, this._logging.log)\n    )\n  }\n\n  file(name: string) {\n    return this._files.then(function (files) {\n      for (const file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n\n  get fileList(): Promise<string[]> {\n    return Promise.resolve(this._files).then((a) => a.map((f) => f.name))\n  }\n}\n\nexport class FileResource implements IResource {\n  constructor(private _file: File) {}\n  read(progress: Progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n\n  resolveUrl() {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n\n  get name() {\n    return this._file.name\n  }\n}\n\n/**\n * If only 1 FileEntry is present and it is an archive file, extract it.\n */\nexport async function unarchiveIfNeeded(\n  files: FileEntry[],\n  log: LoggingFunction\n): Promise<FileEntry[]> {\n  if (files.length !== 1) return files\n  const fileEntry = files[0]\n  if (!fileEntry.name.match(ARCHIVE_REGEXP)) {\n    return files\n  }\n  log('Archive file detected! Now unarchiving…')\n  return unarchive(fileEntry.file)\n}\n\n/**\n * Downloads a URL as a FileEntry.\n */\nexport async function downloadFileEntryFromURL(\n  url: string,\n  log: LoggingFunction\n): Promise<FileEntry> {\n  const name = url\n    .replace(/[?#].*/, '')\n    .split('/')\n    .pop()!\n\n  // Try Dropbox URL replacement\n  const match = url.match(DROPBOX_REGEXP)\n  if (match) {\n    url = `https://dl.dropboxusercontent.com/${match[1]}/${match[2]}`\n  }\n\n  const progress = new Progress()\n  let lastTime = 0\n  progress.watch(() => {\n    if (Date.now() < lastTime + 5e3) return\n    log(`Downloading: ${progress}`)\n    lastTime = Date.now()\n  })\n  const blob = await download(url).as('blob', progress)\n  return { name, file: blob }\n}\n","import {\n  ARCHIVE_REGEXP,\n  CustomSongResources,\n  downloadFileEntryFromURL,\n} from './custom-song-resources'\nimport { FileEntry, ICustomSongResources, LoggingFunction } from './types'\n\nimport { addUnprefixed } from './addUnprefixed'\n\n// TODO [#634]: Remove the `DndResources` class and have users of this class create a `CustomSongResources` directly.\n//\n// The original implementation of DndResources class has been extracted\n// into a CustomSongResources superclass in commit cc6a6e70586487ef476890f5a7911837186a7a32,\n// so that part of its logic can be re-used in other contexts, such as in commit ba9e15bab72fec17a144e40433cb3a4ffd31db5b.\n//\n// Now this `DndResources` class is really dumb and we want to prefer composition over inheritance.\n// This class should be removed.\nexport class DndResources\n  extends CustomSongResources\n  implements ICustomSongResources\n{\n  constructor(event: DragEvent) {\n    super({\n      getFiles: (log) => getFilesFromEvent(event, log),\n    })\n  }\n}\n\nexport default DndResources\n\nasync function getFilesFromEvent(\n  event: DragEvent,\n  log: LoggingFunction\n): Promise<FileEntry[]> {\n  const out: FileEntry[] = []\n  const dataTransfer = event.dataTransfer\n  if (!dataTransfer) {\n    throw new Error('Expect event.dataTransfer to be present')\n  }\n  if (dataTransfer.types.indexOf('text/uri-list') > -1) {\n    const url = dataTransfer\n      .getData('text/uri-list')\n      .split(/\\r\\n|\\r|\\n/)\n      .filter((t) => t && !t.startsWith('#'))[0]\n    if (ARCHIVE_REGEXP.test(url && url.replace(/[?#].*/, ''))) {\n      log('Link to archive file detected. Trying to download')\n      return [await downloadFileEntryFromURL(url, log)]\n    }\n  } else if (dataTransfer.items) {\n    for (const item of Array.from(dataTransfer.items)) {\n      await readItem(item)\n    }\n  } else if (dataTransfer.files) {\n    for (const file of Array.from(dataTransfer.files)) {\n      addFile(file)\n    }\n  }\n  return out\n\n  async function readItem(item: DataTransferItem) {\n    const entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n    if (entry) {\n      await readEntry(entry)\n    } else {\n      const file = item.getAsFile && item.getAsFile()\n      if (file) addFile(file)\n    }\n  }\n\n  function readEntry(entry: any, prefix = '') {\n    if (entry.isFile) {\n      return readFile(entry, prefix)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry, prefix)\n    }\n  }\n\n  async function readFile(entry: any, prefix = '') {\n    const file = await new Promise<File>((resolve, reject) => {\n      entry.file(resolve, reject)\n    })\n    addFile(file, prefix)\n    return file\n  }\n\n  async function readDirectory(dir: any, prefix = '') {\n    const entries: any[] = []\n    const reader = dir.createReader()\n    const readMore = () =>\n      new Promise<any>((resolve, reject) => {\n        reader.readEntries(resolve, reject)\n      })\n    for (;;) {\n      const results = await readMore()\n      if (!results || results.length === 0) break\n      entries.push(...Array.from(results))\n    }\n    for (const entry of entries) {\n      await readEntry(entry, prefix + dir.name + '/')\n    }\n  }\n\n  function addFile(file: File, prefix = '') {\n    if (file) {\n      addUnprefixed(prefix, file.name, (name) => {\n        out.push({ name, file })\n      })\n    }\n  }\n}\n","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\nimport { decodeOGG } from './ogg'\n\nexport const FADE_LENGTH = 0.001\n\nconst dummyAudioTag = document.createElement('audio')\n// Checks whether an audio format is supported.\nexport function canPlay(type) {\n  // We have a Vorbis audio decoder!\n  if (type === 'audio/ogg; codecs=\"vorbis\"') return true\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\nconst needsVorbisDecoder = !dummyAudioTag.canPlayType(\n  'audio/ogg; codecs=\"vorbis\"'\n)\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor(audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute() {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext() {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination() {\n    return this._destination\n  }\n\n  // The current time\n  // See: https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-currenttime\n  get currentTime() {\n    return this._audioContext.currentTime\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy() {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (const sample of this._samples) sample.destroy()\n    for (const instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode(blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then((arrayBuffer) =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample(blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then((audioBuffer) => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      const sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group(options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer(blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio(arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      if (needsVorbisDecoder && arrayBuffer.byteLength > 4) {\n        const view = new Uint8Array(arrayBuffer, 0, 4)\n        if (\n          view[0] === 0x4f &&\n          view[1] === 0x67 &&\n          view[2] === 0x67 &&\n          view[3] === 0x53\n        ) {\n          return resolve(decodeOGG(this.audioContext, arrayBuffer))\n        }\n      }\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess(audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure(e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying(instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying(instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nexport class SoundGroup {\n  constructor(samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination() {\n    return this._gain\n  }\n\n  destroy() {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nexport class Sample {\n  constructor(samplingMaster, /** @type {AudioBuffer} */ audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play(delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy() {\n    this._master = null\n    this._buffer = null\n  }\n\n  get duration() {\n    return this._buffer.duration\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nexport class PlayInstance {\n  constructor(samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    const context = samplingMaster.audioContext\n    const source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    const gain = context.createGain()\n    source.connect(gain)\n    const destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    const startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    const startOffset = options.start || 0\n    const fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      const duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop() {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad() {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy() {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio(ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  const gain = ctx.createGain()\n  const osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  resumeContext(ctx).catch((e) => {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  })\n}\n\nasync function resumeContext(ctx) {\n  return ctx.resume()\n}\n","import throat from 'throat'\n\ntype OGGDecodeEvent = {\n  data?: Float32Array[]\n  sampleRate: number\n  error?: any\n  eof?: boolean\n}\n\ntype OGGDecoder = {\n  decode(arrayBuffer: ArrayBuffer, callback: (e: OGGDecodeEvent) => void): void\n}\n\nlet decoderPromise: Promise<OGGDecoder>\n\nconst limit = throat(1)\n\nfunction getDecoder() {\n  if (!decoderPromise) {\n    decoderPromise = import(\n      // @ts-ignore\n      /* webpackChunkName: 'stbvorbis' */ './vendor/stbvorbis/stbvorbis-e6da5fe-NDEBUG.js?raw'\n    )\n      .then((ns) => ns.default)\n      .then((src) => {\n        // eslint-disable-next-line no-eval\n        return (0, eval)(src + 'stbvorbis')\n      })\n  }\n  return decoderPromise\n}\n\n/**\n * Decodes an OGG file using stbvorbis.js.\n */\nexport async function decodeOGG(\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  const stbvorbis = await getDecoder()\n  return limit(() => doDecodeOGG(stbvorbis, audioContext, arrayBuffer))\n}\n\nfunction doDecodeOGG(\n  stbvorbis: OGGDecoder,\n  audioContext: AudioContext,\n  arrayBuffer: ArrayBuffer\n) {\n  return new Promise<AudioBuffer>((resolve, reject) => {\n    const buffers: Float32Array[][] = []\n    let totalLength = 0\n    let sampleRate: number\n    stbvorbis.decode(arrayBuffer, function (e) {\n      if (e.data) {\n        sampleRate = e.sampleRate\n        buffers.push(e.data)\n        totalLength += e.data[0].length\n      }\n      if (e.error) {\n        const error =\n          e.error instanceof Error ? e.error : `stbvorbis.js Error: ${e.error}`\n        reject(error)\n      }\n      if (e.eof) {\n        resolve(createBuffer(audioContext, buffers, totalLength, sampleRate))\n      }\n    })\n  })\n}\n\nasync function createBuffer(\n  audioContext: AudioContext,\n  decodedChunks: Float32Array[][],\n  length: number,\n  sampleRate: number\n) {\n  if (!length) throw new Error(`stbvorbis.js Error: No length`)\n  if (!sampleRate) throw new Error(`stbvorbis.js Error: No sample rate`)\n  const numberOfChannels = decodedChunks[0].length\n  const audioBuffer = audioContext.createBuffer(\n    numberOfChannels,\n    length,\n    sampleRate\n  )\n  const channels: ChannelDataWriter[] = Array(audioBuffer.numberOfChannels)\n    .fill(null)\n    .map((_, ch) => new ChannelDataWriter(audioBuffer.getChannelData(ch)))\n  for (const chunk of decodedChunks) {\n    chunk.forEach((audioSamples, channelIndex) => {\n      channels[channelIndex].write(audioSamples)\n    })\n  }\n  return audioBuffer\n}\n\nclass ChannelDataWriter {\n  private offset = 0\n  constructor(private data: Float32Array) {}\n  write(audioSamples: Float32Array) {\n    // iOS Safari does not support `buf.copyToChannel(a, ch, track[ch])`, so we had to copy audio data sample-by-sample.\n    const { offset, data } = this\n    for (let i = 0; i < audioSamples.length; i++) {\n      data[i + offset] = audioSamples[i]\n    }\n    this.offset += audioSamples.length\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (let i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    const callbacks = this._callbacks\n    for (const id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    const id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import delay from 'delay'\nimport { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await delay(waitMs)\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          const xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        const reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n"],"names":["module","exports","value","options","parse","format","formatThousandsRegExp","formatDecimalsRegExp","map","b","kb","mb","gb","tb","Math","pow","pb","parseRegExp","Number","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","undefined","fixedDecimals","Boolean","unit","toLowerCase","str","toFixed","replace","split","s","i","join","val","isNaN","floatValue","results","exec","parseFloat","parseInt","floor","___CSS_LOADER_EXPORT___","push","id","createAbortError","error","Error","name","createDelay","clearTimeout","defaultClear","setTimeout","set","willResolve","ms","signal","aborted","Promise","reject","timeoutId","settle","rejectFn","clear","signalListener","delayPromise","resolve","removeEventListener","addEventListener","once","createWithTimers","clearAndSet","delay","range","minimum","maximum","random","randomInteger","CompressedFile","constructor","size","path","archiveRef","this","_name","_size","_path","_archiveRef","extract","extractSingleFile","Archive","static","_options","workerUrl","file","init","console","warn","open","_worker","Worker","_workerMsg","bind","_callbacks","_content","_processed","_file","async","_postMessage","type","msg","hasEncryptedData","status","usePassword","archivePassword","passphrase","getFilesObject","then","entry","target","prop","_getProp","fileName","_cloneContent","getFilesArray","obj","_objectToArray","File","fileData","extractFiles","extractCallback","terminate","o","Object","keys","files","key","parts","length","pop","cur","prev","part","callback","postMessage","_msgHandler","data","locals","pug_html","Delayed","fn","self","args","PromiseArgument","throat","queue","run","result","apply","release","next","shift","temp","arguments","AudioContext","latencyHint","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","main","element","text","on","handler","el","appendTo","find","hide","e","preventDefault","loader","master","$log","$play","$sampler","log","bmsFile","fileList","filter","f","match","loadedFile","arraybuffer","read","buffer","Buffer","from","Uint8Array","Reader","chart","Compiler","timing","Timing","notes","Notes","info","SongInfo","JSON","stringify","loadedSamples","loadSamples","waitForPlay","show","t","_notes","_chart","samples","promises","completed","note","all","keysound","blob","loadKeysound","headers","get","sample","catch","unmute","span","instance","play","scrollTop","scrollHeight","onstop","addClass","beatToSeconds","beat","go","originalEvent","ui","off","Progress","current","total","_observable","report","extra","notify","watch","progress","toString","formatter","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","EXTRA_FORMATTER","fixed","loaded","atomic","promise","byteLength","hasByteLength","wrapPromise","ret","to","simultaneous","unsubscribe","update","add","addUnprefixed","prefix","slice","ResourceLogging","loggingFunction","setLoggingFunction","forEach","ARCHIVE_REGEXP","DROPBOX_REGEXP","CustomSongResources","provider","_logging","_files","getFiles","fileEntry","out","archive","extracted","traverse","tree","unarchive","unarchiveIfNeeded","FileResource","a","as","resolveUrl","URL","createObjectURL","downloadFileEntryFromURL","url","lastTime","Date","now","download","DndResources","event","super","dataTransfer","types","indexOf","getData","startsWith","items","item","Array","readItem","addFile","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","readDirectory","dir","entries","reader","createReader","readMore","readEntries","getFilesFromEvent","FADE_LENGTH","dummyAudioTag","document","createElement","needsVorbisDecoder","canPlayType","SoundGroup","samplingMaster","volume","_master","_gain","audioContext","createGain","gain","connect","destination","destroy","disconnect","Sample","audioBuffer","_buffer","PlayInstance","duration","context","source","createBufferSource","onended","stop","node","group","_source","TEST_node","startTime","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","bad","playbackRate","unmuteAudio","ctx","osc","createOscillator","frequency","resume","resumeContext","_audioContext","_samples","_groups","_instances","Set","_destination","_destroyed","decode","blobOrArrayBuffer","_coerceToArrayBuffer","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","numberOfChannels","ArrayBuffer","view","decodeAudioData","delete","decoderPromise","limit","decodeOGG","stbvorbis","ns","default","src","eval","buffers","sampleRate","totalLength","eof","decodedChunks","createBuffer","channels","fill","_","ch","ChannelDataWriter","getChannelData","chunk","audioSamples","channelIndex","write","doDecodeOGG","offset","_nextId","call","callbacks","getRetryDelay","shouldGiveUp","xh","XMLHttpRequest","responseType","onload","response","onerror","onprogress","send","waitMs","_value","FileReader","readAsArrayBuffer","readAsText"],"sourceRoot":""}
{"version":3,"sources":["file:///home/circleci/bemuse/bemuse/src/music-previewer/MusicSelectPreviewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection/getPreviewResourceUrl.ts","file:///home/circleci/bemuse/bemuse/src/progress/index.ts","file:///home/circleci/bemuse/bemuse/src/utils/main-element.js","file:///home/circleci/bemuse/bemuse/src/progress/Progress.ts","file:///home/circleci/bemuse/bemuse/src/utils/observable.ts","file:///home/circleci/bemuse/bemuse/src/utils/callbacks.ts","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/MusicTable.js","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/CollectionViewer.jsx","file:///home/circleci/bemuse/bemuse/src/music-collection-viewer/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/isChartPlayable.js","file:///home/circleci/bemuse/bemuse/src/music-collection/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getPlayableCharts.js","file:///home/circleci/bemuse/bemuse/src/music-collection/groupSongsIntoCategories.js","file:///home/circleci/bemuse/bemuse/src/music-collection/preprocessCollection.js","file:///home/circleci/bemuse/bemuse/src/music-collection/sortSongs.js","file:///home/circleci/bemuse/bemuse/src/resources/bemuse-package.ts","file:///home/circleci/bemuse/bemuse/src/resources/resolveRelativeResource.ts","file:///home/circleci/bemuse/bemuse/src/music-previewer/index.js","file:///home/circleci/bemuse/bemuse/src/music-collection/getSongResources.ts","file:///home/circleci/bemuse/bemuse/src/progress/formatters.js","file:///home/circleci/bemuse/bemuse/src/progress/utils.ts","file:///home/circleci/bemuse/bemuse/src/utils/read-blob.js","file:///home/circleci/bemuse/bemuse/src/music-previewer/default.ogg","file:///home/circleci/bemuse/bemuse/src/music-previewer/go.ogg","file:///home/circleci/bemuse/bemuse/src/resources/url.ts","file:///home/circleci/bemuse/bemuse/src/utils/download.js"],"names":["MusicSelectPreviewer","Component","this","props","url","addEventListener","handleMessage","removeEventListener","nextProps","data","type","propTypes","string","getPreviewResourceUrl","song","serverUrl","tutorial","baseResources","file","preview_url","resolveUrl","document","querySelector","Progress","current","undefined","total","_observable","extra","notify","f","watch","formatter","progress","value","_callbacks","_value","call","add","init","_nextId","length","i","args","callbacks","id","callback","sorters","ingame","songs","groupSongsIntoCategories","sortSongs","added","title","reverse","sortBy","getAdded","initial","renderSongWarnings","problems","report","message","keys","push","unreleased","readme","replaygain","artist_url","song_url","youtube_url","long_url","bms_url","exclusive","bmssearch_id","charts","filter","chart","getPlayableCharts","info","subtitles","validateSong","map","problem","index","key","style","fontFamily","marginRight","padding","fontSize","background","super","state","sort","initialSort","Object","previewUrl","previewEnabled","borderSpacing","colSpan","renderSorter","renderPreview","renderRows","out","onClick","setState","button","s","categories","category","prompt","color","textAlign","genre","console","log","alert","inspect","artist","text","renderMessage","renderTable","e","object","query","server","status","then","result","catch","preprocessCollection","main","OFFICIAL_SERVER_URL","load","fetch","global","indexUrl","getServerIndexFileUrl","response","json","Array","isArray","dir","replace","path","Error","endsWith","orderBy","difficulty","level","grouping","criteria","custom","Date","now","parse","groups","group","input","output","chart_names","name","min","bpm","toLowerCase","BemusePackageFileResource","resources","ref","getBlob","blob","as","URL","createObjectURL","Ref","spec","_basePromise","base","_promise","loadPayload","getPayload","slice","buffer","array","Uint8Array","metadataLength","options","all","_getMetadata","once","_base","_metadataFilename","read","Blob","JSON","_getRefs","refs","_getFileMap","metadata","files","Map","set","location","href","fallback","_fallback","_fallbackPattern","fallbackPattern","metadataFilename","simultaneous","resourcePromise","resource","nextProgress","arrayBuffer","get","test","start","end","resolveRelativeResources","includes","split","parts","dirName","shift","DirectoryResources","filename","instance","getInstance","enabled","currentUrl","backgroundLoaded","backgroundPlayed","instances","Audio","preload","loop","oncanplaythrough","update","goSound","createElement","src","volume","backgroundFader","createFader","target","pause","fadeTo","destroy","playing","loaded","play","stop","warn","currentTime","songUrl","audio","played","fader","onended","createInstance","createMusicPreviewer","enable","disable","go","preview","initialVolume","onTargetReached","volumeChanged","targetVolume","currentSpeed","requested","elapsed","getCurrentVolume","Math","max","currentVolume","requestAnimationFrame","speed","getSongResources","assetResources","bemusepackUrl","assetsBase","wrapAssetResources","bemusepack_url","wrap","BYTES_FORMATTER","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER","fixed","atomic","promise","Promise","resolve","tap","byteLength","hasByteLength","wrapPromise","apply","bind","from","to","queue","unsubscribe","reject","reader","FileReader","onload","onerror","readAsArrayBuffer","readAsText","module","exports","URLResource","URLResources","part","encodeURIComponent","join","getRetryDelay","random","shouldGiveUp","xh","XMLHttpRequest","open","responseType","onprogress","send","error","waitMs","setTimeout"],"mappings":"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","file":"build/music-919cd4dddb0531993398.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as MusicPreviewer from './'\n\nMusicPreviewer.preload()\n\nexport default class MusicSelectPreviewer extends React.Component {\n  static propTypes = {\n    url: PropTypes.string,\n  }\n  componentDidMount() {\n    MusicPreviewer.enable()\n    MusicPreviewer.preview(this.props.url)\n    addEventListener('message', this.handleMessage)\n  }\n  componentWillUnmount() {\n    MusicPreviewer.disable()\n    removeEventListener('message', this.handleMessage)\n  }\n  componentWillReceiveProps(nextProps) {\n    MusicPreviewer.preview(nextProps.url)\n  }\n  render() {\n    return null\n  }\n  handleMessage({ data }) {\n    if (data.type === 'calibration-started') {\n      MusicPreviewer.disable()\n    } else if (data.type === 'calibration-closed') {\n      MusicPreviewer.enable()\n    }\n  }\n}\n","import { Song } from 'bemuse/collection-model/types'\nimport { getSongResources } from './getSongResources'\n\nexport default async function getPreviewResourceUrl(\n  song: Song,\n  serverUrl: string\n) {\n  if (!song) return null\n  if (song.tutorial) return null\n  const { baseResources } = getSongResources(song, serverUrl)\n  const file = await baseResources.file(\n    song.preview_url || '_bemuse_preview.mp3'\n  )\n  return file.resolveUrl()\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport { Progress } from './Progress'\nexport default Progress\n","export default document.querySelector('#scene-root')\n","import Observable from 'bemuse/utils/observable'\n\ninterface IProgressFormatter {\n  (progress: Progress): string\n}\n\n/**\n * The Progress class represents the progress of an asynchronous operation.\n * It is inspired by C#'s IProgress interface.\n *\n * See: http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx\n */\nexport class Progress {\n  /** The current progress (out of `Progress#total`). */\n  public current: number | undefined = undefined\n  /** Total progress value */\n  public total: number | undefined = undefined\n  /** Some arbitrary information associated with this Progress. */\n  public extra: any\n  /**\n   * The formatter of this progress. This formatter will be used to compute\n   * the text representation of this progress (`Progress#toString`).\n   */\n  public formatter?: IProgressFormatter\n  private _observable = new Observable<void>()\n  /**\n   * Updates the progress.\n   */\n  report(current: number, total: number, extra?: any) {\n    this.current = current\n    this.total = total\n    this.extra = extra\n    this._observable.notify()\n  }\n  /**\n   * Attaches a progress listener function to this progress.\n   * The function `f` will be called immediately and synchronously upon watching,\n   * and will be called when the progress value is updated.\n   * @param f\n   * @returns a function that, when called, unsubscribes this listener.\n   */\n  watch(f: (progress: Progress) => void) {\n    f(this)\n    return this._observable.watch(() => f(this))\n  }\n  /**\n   * The current progress as a fraction (out of 1).\n   */\n  get progress() {\n    if (this.total && this.current !== undefined && this.current !== null) {\n      return this.current / this.total\n    } else {\n      return null\n    }\n  }\n  /**\n   * Returns a string representation of this progress instance.\n   * This method is used for displaying the progress as a text.\n   */\n  toString() {\n    if (this.formatter !== undefined) {\n      return this.formatter(this)\n    } else if (this.progress !== null) {\n      return this.current + ' / ' + this.total\n    } else {\n      return ''\n    }\n  }\n}\n","// !! avoid external dependencies since this is used in boot script!\n\nimport Callbacks from 'bemuse/utils/callbacks'\n\nexport class Observable<T> {\n  private _callbacks = new Callbacks<[T]>()\n  private _value?: T\n  constructor(value?: T) {\n    this._value = value\n  }\n  get value() {\n    return this._value\n  }\n  set value(value) {\n    this._value = value\n    this.notify(value!)\n  }\n  notify(value: T) {\n    this._callbacks.call(value)\n  }\n  watch(f: (value: T) => void) {\n    if (this._value !== undefined) f(this._value)\n    return this._callbacks.add(f)\n  }\n}\n\nexport default Observable\n","// !! avoid external dependencies since this is used in boot script!\n\ntype CallbackEffect<T extends any[]> = (...args: T) => void\n\n/**\n * A utility class to hold a collection of callbacks.\n */\nexport class Callbacks<T extends any[]> {\n  private _callbacks: { [id: number]: CallbackEffect<T> } = {}\n  private _nextId = 1\n  constructor(init?: CallbackEffect<T>[] | CallbackEffect<T>) {\n    if (typeof init === 'function') {\n      this.add(init)\n    } else if (typeof init === 'object' && init && init.length) {\n      for (var i = 0; i < init.length; i++) this.add(init[i])\n    }\n  }\n\n  /**\n   * Calls all the callbacks.\n   */\n  call(...args: T) {\n    var callbacks = this._callbacks\n    for (var id in callbacks) {\n      callbacks[id](...args)\n    }\n  }\n\n  /**\n   * Adds a `callback` Function to this Callbacks collection.\n   * Returns a function that, when invoked, removes the inserted `callback` from the collection.\n   */\n  add(callback: CallbackEffect<T>) {\n    var id = this._nextId++\n    this._callbacks[id] = callback\n    return () => delete this._callbacks[id]\n  }\n}\n\nexport default Callbacks\n","import _ from 'lodash'\nimport MusicSelectPreviewer from 'bemuse/music-previewer/MusicSelectPreviewer'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport getPlayableCharts from 'bemuse/music-collection/getPlayableCharts'\nimport groupSongsIntoCategories from 'bemuse/music-collection/groupSongsIntoCategories'\nimport sortSongs from 'bemuse/music-collection/sortSongs'\nimport getPreviewResourceUrl from 'bemuse/music-collection/getPreviewResourceUrl'\n\nconst sorters = {\n  ingame: (songs) => groupSongsIntoCategories(sortSongs(songs)),\n  added: (songs) => [\n    {\n      title: 'Sorted by added date',\n      songs: _.reverse(_.sortBy(songs, getAdded)),\n    },\n  ],\n}\n\nconst getAdded = (song) =>\n  song.added || (song.initial ? '0000-00-00' : '9999-99-99')\n\nfunction validateSong(song) {\n  const problems = []\n  const report = (message, ...keys) => problems.push({ keys, message })\n  if (song.unreleased) {\n    report('Not released', 'unreleased')\n  }\n  if (!song.readme) {\n    report('No README file found', 'README.md')\n  }\n  if (!song.replaygain) {\n    report('No replay gain', 'replaygain')\n  }\n  if (!song.artist_url) {\n    report('No artist URL', 'artist_url')\n  }\n  if (!song.added && !song.initial) {\n    report('No added date', 'added')\n  }\n  if (!song.song_url && !song.youtube_url && !song.long_url) {\n    report('No song/YouTube/long URL', 'song_url', 'long_url', 'youtube_url')\n  }\n  if (!song.bms_url && !song.exclusive) {\n    report('No download URL', 'bms_url')\n  }\n  if (!song.bmssearch_id && !song.exclusive) {\n    report('No BMS search ID', 'bmssearch_id')\n  }\n  if (!song.charts.filter((chart) => chart.keys === '5K').length) {\n    report('No 5-key charts', '5key')\n  }\n  for (const chart of getPlayableCharts(song.charts)) {\n    if (!chart.info.subtitles.length) {\n      report('Missing subtitle', 'chart_names ' + chart.file)\n    }\n  }\n  return problems\n}\n\nfunction renderSongWarnings(song) {\n  const problems = validateSong(song)\n  if (!problems.length) return null\n  return (\n    <div>\n      {problems.map((problem, index) => (\n        <div key={index}>\n          {problem.keys.map((key) => (\n            <code\n              key={key}\n              style={{\n                fontFamily: 'Ubuntu Mono',\n                marginRight: '2',\n                padding: 3,\n                fontSize: '0.8em',\n                background: '#755',\n              }}\n            >\n              {key}\n            </code>\n          ))}\n          {problem.message}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport class MusicTable extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    url: PropTypes.string,\n    initialSort: PropTypes.string,\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      sort: this.props.initialSort || Object.keys(sorters)[0],\n      previewUrl: null,\n      previewEnabled: false,\n    }\n  }\n  renderTable() {\n    return (\n      <table style={{ borderSpacing: 4 }}>\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              {this.renderSorter()}\n              {' · '}\n              {this.renderPreview()}\n            </th>\n          </tr>\n          <tr>\n            <th>id</th>\n            <th>song</th>\n            <th>warnings</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    )\n  }\n  renderSorter() {\n    const out = []\n    for (const key of Object.keys(sorters)) {\n      out.push(\n        <button\n          key={key}\n          onClick={() => {\n            this.setState({ sort: key })\n          }}\n        >\n          {key}\n        </button>\n      )\n    }\n    return (\n      <span>\n        <strong>Sort by:</strong> {out}\n      </span>\n    )\n  }\n  renderPreview() {\n    const button = (\n      <button\n        onClick={() => {\n          this.setState((s) => ({ previewEnabled: !s.previewEnabled }))\n        }}\n      >\n        {this.state.previewEnabled ? 'disable' : 'enable'}\n      </button>\n    )\n    return (\n      <span>\n        <strong>Music preview:</strong> {button}\n        {this.state.previewEnabled && (\n          <MusicSelectPreviewer url={this.state.previewUrl} />\n        )}\n      </span>\n    )\n  }\n  renderRows() {\n    const categories = sorters[this.state.sort](this.props.data.songs)\n    const out = []\n    for (const category of categories) {\n      out.push(\n        <tr key={category.title}>\n          <th colSpan={4}>{category.title}</th>\n        </tr>\n      )\n      for (const song of category.songs) {\n        out.push(\n          <tr key={song.id}>\n            <td>\n              <strong\n                onClick={() => {\n                  prompt('', `vim '${song.id}/README.md'`)\n                }}\n              >\n                <code style={{ fontFamily: 'Ubuntu Mono' }}>{song.id}</code>\n              </strong>\n              <br />\n              <span style={{ color: '#8b8685' }}>{song.added}</span>\n            </td>\n            <td style={{ textAlign: 'center', background: '#353433' }}>\n              <span\n                style={{ color: '#8b8685' }}\n                onClick={async () => {\n                  const previewUrl = await getPreviewResourceUrl(\n                    song,\n                    this.props.url\n                  )\n                  this.setState({ previewUrl })\n                }}\n              >\n                {song.genre}\n              </span>\n              <br />\n              <strong\n                onClick={() => {\n                  console.log(song)\n                  alert(require('util').inspect(song))\n                }}\n              >\n                {song.title}\n              </strong>\n              <br />\n              {song.artist}\n            </td>\n            <td>{renderSongWarnings(song)}</td>\n          </tr>\n        )\n      }\n    }\n    return out\n  }\n  renderMessage(text) {\n    return <div style={{ textAlign: 'center' }}>{text}</div>\n  }\n  render() {\n    if (!this.props.data) return this.renderMessage('No data')\n    try {\n      return this.renderTable()\n    } catch (e) {\n      return this.renderMessage(`Error: ${e}`)\n    }\n  }\n}\n\nexport default MusicTable\n","import React from 'react'\nimport preprocessCollection from 'bemuse/music-collection/preprocessCollection'\nimport query from 'bemuse/utils/query'\nimport { OFFICIAL_SERVER_URL, load } from 'bemuse/music-collection'\n\nimport MusicTable from './MusicTable'\n\nexport class CollectionViewer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: query.server || OFFICIAL_SERVER_URL,\n      status: 'Loading',\n    }\n  }\n  componentDidMount() {\n    load(this.state.url)\n      .then((result) => {\n        this.setState({ status: 'Load completed', data: result })\n      })\n      .catch((e) => {\n        this.setState({ status: 'Load error: ' + e })\n      })\n  }\n  render() {\n    return (\n      <div>\n        <header style={{ textAlign: 'center' }}>\n          <h1>Bemuse collection viewer</h1>\n          <div>\n            {this.state.url}\n            <br />\n            {this.state.status}\n          </div>\n        </header>\n        <div style={{ padding: 20 }}>\n          <MusicTable\n            data={this.state.data && preprocessCollection(this.state.data)}\n            url={this.state.url}\n            initialSort={query.sort}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CollectionViewer\n","import * as MusicPreviewer from 'bemuse/music-previewer'\nimport MAIN from 'bemuse/utils/main-element'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport CollectionViewer from './CollectionViewer'\n\nexport function main() {\n  MusicPreviewer.preload()\n  render(<CollectionViewer />, MAIN)\n}\n","export function isChartPlayable(chart) {\n  return chart.keys === '7K' || chart.keys === '5K'\n}\n\nexport default isChartPlayable\n","export const OFFICIAL_SERVER_URL = 'https://music4.bemuse.ninja/server'\n\nexport async function load(serverUrl, { fetch = global.fetch } = {}) {\n  const indexUrl = getServerIndexFileUrl(serverUrl)\n  const data = await fetch(indexUrl).then((response) => response.json())\n\n  if (Array.isArray(data.songs)) {\n    return data\n  } else if (Array.isArray(data.charts)) {\n    // Single-song server\n    const dir = indexUrl.replace(/[^/]*$/, '')\n    return { songs: [{ ...data, id: 'song', path: dir }] }\n  } else {\n    throw new Error(\n      `Invalid server file at ${indexUrl}: Does not contain \"songs\" array.`\n    )\n  }\n}\n\nexport function getServerIndexFileUrl(serverUrl) {\n  if (serverUrl.endsWith('/bemuse-song.json')) {\n    return serverUrl\n  }\n  return serverUrl.replace(/\\/(?:index\\.json)?$/, '') + '/index.json'\n}\n","import _ from 'lodash'\n\nimport isChartPlayable from './isChartPlayable'\n\nexport function getPlayableCharts(charts) {\n  return _(charts)\n    .filter(isChartPlayable)\n    .orderBy([\n      (chart) => (chart.info.difficulty >= 5 ? 1 : 0),\n      (chart) => chart.keys,\n      (chart) => chart.info.level,\n    ])\n    .value()\n}\n\nexport default getPlayableCharts\n","import _ from 'lodash'\n\nconst grouping = [\n  { title: 'Custom Song', criteria: (song) => song.custom },\n  { title: 'Tutorial', criteria: (song) => song.tutorial },\n  { title: 'Unreleased', criteria: (song) => song.unreleased },\n  {\n    title: 'Recently Added Songs',\n    criteria: (song) =>\n      song.added && Date.now() - Date.parse(song.added) < 60 * 86400000,\n    sort: (song) => song.added,\n    reverse: true,\n  },\n  { title: '☆', criteria: () => true },\n]\n\nexport function groupSongsIntoCategories(songs) {\n  let groups = grouping.map((group) => ({\n    input: group,\n    output: { title: group.title, songs: [] },\n  }))\n  for (let song of songs) {\n    for (let { input, output } of groups) {\n      if (input.criteria(song)) {\n        output.songs.push(song)\n        break\n      }\n    }\n  }\n  for (let { input, output } of groups) {\n    if (input.sort) {\n      output.songs = _.orderBy(\n        output.songs,\n        [input.sort],\n        [input.reverse ? 'desc' : 'asc']\n      )\n    } else if (input.reverse) {\n      output.songs.reverse()\n    }\n  }\n  return _(groups)\n    .map('output')\n    .filter((group) => group.songs.length > 0)\n    .value()\n}\n\nexport default groupSongsIntoCategories\n","import u from 'updeep'\n\nexport const preprocessCollection = u({\n  songs: u.map(preprocessSong),\n})\n\nfunction preprocessSong(song) {\n  if (song.chart_names) {\n    song = u(\n      {\n        charts: u.map((chart) => {\n          const name = song.chart_names[chart.file]\n          if (!name) return chart\n          return u(\n            {\n              info: {\n                subtitles: (subtitles) => [...subtitles, name],\n              },\n            },\n            chart\n          )\n        }),\n      },\n      song\n    )\n  }\n  return song\n}\n\nexport default preprocessCollection\n","import _ from 'lodash'\nimport isChartPlayable from './isChartPlayable'\n\nexport function sortSongs(songs) {\n  return _.orderBy(songs, [\n    (song) => {\n      return _(song.charts)\n        .filter(isChartPlayable)\n        .filter((chart) => chart.info.difficulty < 5)\n        .filter((chart) => chart.info.level > 0)\n        .map((chart) => chart.info.level)\n        .min()\n    },\n    (song) => song.bpm,\n    (song) => song.title.toLowerCase(),\n  ])\n}\n\nexport default sortSongs\n","import Progress from 'bemuse/progress'\nimport * as ProgressUtils from 'bemuse/progress/utils'\nimport readBlob from 'bemuse/utils/read-blob'\nimport _ from 'lodash'\nimport throat from 'throat'\nimport { IResource, IResources } from './types'\nimport { URLResources } from './url'\n\ntype MetadataFileJSON = {\n  files: BemusePackFileEntry[]\n  refs: BemusePackRefEntry[]\n}\ntype BemusePackRefEntry = { path: string; hash: string }\ntype BemusePackFileEntry = { name: string; ref: BemusePackContentRef }\ntype BemusePackContentRef = [number, number, number]\n\nexport class BemusePackageResources implements IResources {\n  private _base: IResources\n  private _fallback: IResources | undefined\n  private _fallbackPattern: RegExp | undefined\n  private _metadataFilename: string\n  public loadPayload: (\n    resourcePromise: PromiseLike<IResource>\n  ) => PromiseLike<Blob>\n\n  public progress = {\n    all: new Progress(),\n    current: new Progress(),\n  }\n\n  constructor(\n    base: string | IResources,\n    options: {\n      metadataFilename?: string\n      fallback?: string | IResources\n      fallbackPattern?: RegExp\n    } = {}\n  ) {\n    if (typeof base === 'string') {\n      base = new URLResources(new URL(base, location.href))\n    }\n\n    const fallback =\n      typeof options.fallback === 'string'\n        ? new URLResources(new URL(options.fallback, location.href))\n        : options.fallback\n\n    this._base = base\n    this._fallback = fallback\n    this._fallbackPattern = options.fallbackPattern\n    this._metadataFilename = options.metadataFilename || 'metadata.json'\n\n    let simultaneous = ProgressUtils.simultaneous(this.progress.current)\n    let nextProgress = () => {\n      let progress = new Progress()\n      simultaneous.add(progress)\n      return progress\n    }\n    this.loadPayload = ProgressUtils.wrapPromise(\n      this.progress.all,\n      throat(2, (resourcePromise) =>\n        resourcePromise\n          .then((resource) => resource.read(nextProgress()))\n          .then((arrayBuffer) => new Blob([arrayBuffer]))\n          .then(getPayload)\n      )\n    )\n  }\n\n  private _getMetadata = _.once(async () => {\n    const file = await this._base.file(this._metadataFilename)\n    const data = await file.read()\n    const text = await new Blob([data]).text()\n    return JSON.parse(text) as MetadataFileJSON\n  })\n  private _getRefs = _.once(async () => {\n    const metadata = await this._getMetadata()\n    return metadata.refs.map((spec) => new Ref(this, spec))\n  })\n  private _getFileMap = _.once(async () => {\n    const metadata = await this._getMetadata()\n    let files = new Map<string, BemusePackFileEntry>()\n    for (let file of metadata.files) {\n      files.set(file.name.toLowerCase(), file)\n    }\n    return files\n  })\n\n  get base() {\n    return this._base\n  }\n  async file(name: string): Promise<IResource> {\n    const fileMap = await this._getFileMap()\n    let file = fileMap.get(name.toLowerCase())\n    if (file) {\n      return new BemusePackageFileResource(this, file.ref, file.name)\n    } else if (\n      this._fallback &&\n      this._fallbackPattern &&\n      this._fallbackPattern.test(name)\n    ) {\n      return this._fallback.file(name)\n    } else {\n      throw new Error('Unable to find: ' + name)\n    }\n  }\n  async getBlob([index, start, end]: [number, number, number]) {\n    const refs = await this._getRefs()\n    const ref = refs[index]\n    const payload = await ref.load()\n    return payload.slice(start, end)\n  }\n}\n\nclass BemusePackageFileResource implements IResource {\n  constructor(\n    private resources: BemusePackageResources,\n    private ref: BemusePackContentRef,\n    public readonly name: string\n  ) {}\n  read(progress: Progress): PromiseLike<ArrayBuffer> {\n    return ProgressUtils.atomic(\n      progress,\n      this.resources\n        .getBlob(this.ref)\n        .then((blob) => readBlob(blob).as('arraybuffer'))\n    )\n  }\n  async resolveUrl() {\n    const blob = await this.resources.getBlob(this.ref)\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass Ref {\n  private _basePromise: PromiseLike<IResource>\n  private _promise: PromiseLike<Blob> | undefined\n  constructor(\n    private resources: BemusePackageResources,\n    spec: BemusePackRefEntry\n  ) {\n    this._basePromise = resources.base.file(spec.path)\n  }\n  load() {\n    return (\n      this._promise ||\n      (this._promise = this.resources.loadPayload(this._basePromise))\n    )\n  }\n}\n\nexport default BemusePackageResources\n\nasync function getPayload(blob: Blob) {\n  const magic = await readBlob(blob.slice(0, 10)).as('text')\n  if (magic !== 'BEMUSEPACK') {\n    throw new Error('Invalid magic number')\n  }\n  const buffer = await readBlob(blob.slice(10, 14)).as('arraybuffer')\n  let array = new Uint8Array(buffer)\n  let length = array[0] + (array[1] << 8) + (array[2] << 16) + (array[3] << 24)\n  const metadataLength = length\n  return blob.slice(14 + metadataLength)\n}\n","import { IResources } from './types'\nimport { URLResources } from './url'\n\nexport function resolveRelativeResources(\n  base: IResources,\n  url: string\n): [IResources, string] {\n  // Absolute URL\n  if (url.includes('://')) {\n    return [new URLResources(new URL(url)), url.split('/').slice(-1)[0]]\n  }\n\n  const parts = url.split('/')\n  let current = base\n  while (parts.length > 1) {\n    const dirName = parts.shift()!\n    current = new DirectoryResources(current, dirName)\n  }\n  return [current, parts[0]]\n}\n\nexport class DirectoryResources implements IResources {\n  constructor(private base: IResources, private dirName: string) {}\n\n  async file(filename: string) {\n    return this.base.file(`${this.dirName}/${filename}`)\n  }\n}\n","let instance = null\n\nfunction getInstance() {\n  return instance || (instance = createMusicPreviewer())\n}\n\nexport function preload() {\n  getInstance()\n}\n\nexport function enable() {\n  return getInstance().enable()\n}\n\nexport function disable() {\n  return getInstance().disable()\n}\n\nexport function go() {\n  return getInstance().go()\n}\n\nexport function preview(url) {\n  return getInstance().preview(url)\n}\n\nfunction createFader(audio, initialVolume, onTargetReached) {\n  let targetVolume = 0\n  let currentSpeed = 0\n  let requested = false\n  let volumeChanged\n  audio.volume = initialVolume\n\n  function elapsed() {\n    return (Date.now() - volumeChanged) / 1000\n  }\n\n  function getCurrentVolume() {\n    if (targetVolume > initialVolume) {\n      return Math.min(targetVolume, initialVolume + elapsed() * currentSpeed)\n    }\n    if (targetVolume < initialVolume) {\n      return Math.max(targetVolume, initialVolume - elapsed() * currentSpeed)\n    }\n    return targetVolume\n  }\n\n  function update() {\n    requested = false\n    const currentVolume = getCurrentVolume()\n    audio.volume = currentVolume\n    if (currentVolume === targetVolume) {\n      if (onTargetReached) onTargetReached(targetVolume)\n    } else {\n      if (!requested) {\n        requested = true\n        requestAnimationFrame(update)\n      }\n    }\n  }\n\n  return {\n    fadeTo(target, speed) {\n      if (targetVolume !== target || speed !== currentSpeed) {\n        initialVolume = getCurrentVolume()\n        targetVolume = target\n        currentSpeed = speed\n        volumeChanged = Date.now()\n        update()\n      }\n    },\n  }\n}\n\nfunction createMusicPreviewer() {\n  let enabled = false\n  let currentUrl = null\n  let backgroundLoaded = false\n  let backgroundPlayed = false\n  const instances = {}\n\n  const background = new Audio(require('./default.ogg'))\n  background.preload = 'auto'\n  background.loop = true\n  background.oncanplaythrough = () => {\n    backgroundLoaded = true\n    update()\n  }\n  background.load()\n\n  const goSound = document.createElement('audio')\n  goSound.src = require('./go.ogg')\n  goSound.volume = 0.5\n  goSound.load()\n\n  const backgroundFader = createFader(background, 0.5, (target) => {\n    if (target === 0 && backgroundPlayed) {\n      backgroundPlayed = false\n      background.pause()\n    }\n  })\n\n  function update() {\n    if (!enabled) {\n      if (backgroundPlayed) {\n        backgroundFader.fadeTo(0, 100)\n        backgroundPlayed = false\n        background.pause()\n      }\n      for (const key of Object.keys(instances)) {\n        const instance = instances[key]\n        instance.destroy()\n      }\n      return\n    }\n    let playing = null\n    for (const key of Object.keys(instances)) {\n      const instance = instances[key]\n      if (key === currentUrl) {\n        if (instance.loaded) {\n          instance.play()\n          playing = instance\n        }\n      } else {\n        instance.stop()\n      }\n    }\n    if (playing) {\n      backgroundFader.fadeTo(0, 1)\n    } else {\n      backgroundFader.fadeTo(0.4, 0.5)\n      if (backgroundLoaded && !backgroundPlayed) {\n        backgroundPlayed = true\n        try {\n          background.play()\n        } catch (e) {\n          console.warn('Cannot play background music')\n        }\n      }\n    }\n  }\n\n  const musicPreviewer = {\n    enable() {\n      if (enabled) return\n      enabled = true\n      update()\n    },\n    disable() {\n      if (!enabled) return\n      enabled = false\n      update()\n    },\n    go() {\n      if (!enabled) return\n      goSound.currentTime = 0\n      try {\n        goSound.play()\n      } catch (e) {\n        console.warn('Cannot play go sound.')\n      }\n    },\n    preview(songUrl) {\n      if (currentUrl === songUrl) return\n      currentUrl = songUrl\n      if (songUrl && !instances[songUrl]) {\n        instances[songUrl] = createInstance(songUrl)\n      }\n      update()\n    },\n  }\n\n  function createInstance(songUrl) {\n    const audio = document.createElement('audio')\n    audio.src = songUrl\n    let played = false\n\n    const fader = createFader(audio, 1, (target) => {\n      if (target === 0) {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      }\n    })\n\n    const instance = {\n      loaded: false,\n      play() {\n        if (!played) {\n          try {\n            audio.play()\n            played = true\n          } catch (e) {\n            console.warn('Cannot play', audio.src)\n          }\n        }\n        fader.fadeTo(1, 2)\n      },\n      stop() {\n        fader.fadeTo(0, 4)\n      },\n      destroy() {\n        audio.pause()\n        delete instances[songUrl]\n        update()\n      },\n    }\n\n    audio.oncanplaythrough = () => {\n      instance.loaded = true\n      update()\n    }\n    audio.onended = () => {\n      delete instances[songUrl]\n      update()\n    }\n    audio.load()\n\n    return instance\n  }\n\n  return musicPreviewer\n}\n","import BemusePackageResources from 'bemuse/resources/bemuse-package'\nimport { resolveRelativeResources } from 'bemuse/resources/resolveRelativeResource'\nimport { IResources } from 'bemuse/resources/types'\nimport { URLResources } from 'bemuse/resources/url'\nimport { Song } from 'bemuse/collection-model/types'\n\nexport function getSongResources(\n  song: Song,\n  serverUrl: string\n): {\n  /** The base resources for loading chart files, song previews. */\n  baseResources: IResources\n\n  /** The resources for loading sound file assets. */\n  assetResources: IResources\n} {\n  const baseResources =\n    song.resources ||\n    new URLResources(\n      new URL(song.path.replace(/\\/?$/, '/'), serverUrl.replace(/\\/?$/, '/'))\n    )\n  const assetResources = wrapAssetResources(baseResources, song.bemusepack_url)\n  return { baseResources, assetResources }\n}\n\nfunction wrapAssetResources(\n  base: IResources,\n  bemusepackUrl: string | null | undefined\n): IResources {\n  if (bemusepackUrl === null) {\n    return base\n  }\n  if (bemusepackUrl === undefined) {\n    bemusepackUrl = 'assets/metadata.json'\n  }\n  const [assetsBase, metadataFilename] = resolveRelativeResources(\n    base,\n    bemusepackUrl\n  )\n  return new BemusePackageResources(assetsBase, {\n    metadataFilename: metadataFilename,\n    fallback: base,\n    fallbackPattern: /\\.(?:png|jpg|webm|mp4|m4v)/,\n  })\n}\n","import bytes from 'bytes'\n\nlet wrap = (f) => (progress) => progress.progress !== null ? f(progress) : ''\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  (progress) => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  (progress) => ((progress.current / progress.total) * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap((progress) => progress.extra + '')\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\nimport { Progress } from './Progress'\n\n/**\n * Returns a callback that, when called,\n * update the progress with increasing `current` value,\n * out of a fixed `total`.\n */\nexport function fixed(total: number, progress: Progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return (extra: any) => progress.report(++loaded, total, extra)\n}\n\n/**\n * Updates the progress with the result of an atomic operation.\n */\nexport function atomic<T>(\n  progress: Progress,\n  promise: PromiseLike<T>\n): PromiseLike<T> {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap((data) => {\n    if (hasByteLength(data)) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\nfunction hasByteLength(data: any): data is { byteLength: number } {\n  return data && data.byteLength\n}\n\n/**\n * Wraps an async function that may be called multiple times.\n * Each call adds to the total, and each async resolution adds to current.\n */\nexport function wrapPromise<A extends any[], R>(\n  progress: Progress,\n  f: (...args: A) => PromiseLike<R>\n): (...args: A) => PromiseLike<R> {\n  let current = 0\n  let total = 0\n  return function (this: any, ...args: A) {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, args)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind(from: Progress, to: Progress) {\n  return from.watch(() => to.report(from.current!, from.total!, from.extra))\n}\n\n/**\n * Updates the `target` with progress data from multiple sources.\n */\nexport function simultaneous(target: Progress) {\n  let queue: Progress[] = []\n  let current: Progress | undefined\n  let unsubscribe: (() => void) | null = null\n  function update() {\n    if (current) {\n      target.report(current.current!, current.total!, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress! >= 1)) {\n      bind(queue.shift()!)\n    }\n  }\n  function bind(progress: Progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add(progress: Progress) {\n      queue.push(progress)\n      update()\n    },\n  }\n}\n","export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob(blob) {\n  return {\n    as(type) {\n      return new Promise(function (resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    },\n  }\n}\n","module.exports = __webpack_public_path__ + \"build/354b30433269481d2f132496a0d13f64.ogg\";","module.exports = __webpack_public_path__ + \"build/38fbcad5f2b14ca6ffc359446f7ec455.ogg\";","import Progress from 'bemuse/progress'\nimport download from 'bemuse/utils/download'\nimport { basename } from 'path'\nimport { IResource, IResources } from './types'\n\nexport class URLResource implements IResource {\n  constructor(private url: string) {}\n  read(progress: Progress) {\n    return download(this.url).as('arraybuffer', progress)\n  }\n  async resolveUrl() {\n    return Promise.resolve(this.url)\n  }\n  get name() {\n    return basename(this.url)\n  }\n}\n\nexport class URLResources implements IResources {\n  constructor(public base: URL) {}\n  async file(name: string): Promise<IResource> {\n    const path = name\n      .split('/')\n      .map((part) => encodeURIComponent(part))\n      .join('/')\n    return new URLResource(new URL(path, this.base).href)\n  }\n}\n\nexport default URLResource\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\n// Downloads the file from the URL.\n// The download will not actually be started unless the ``as()`` method\n// is called.\n//\n// .. js:function:: as(type)\n//\n//    Initiates the download as ``type``. The ``type`` is a string such as\n//    \"arraybuffer\" or \"blob\".\nexport function download(\n  url,\n  { getRetryDelay = () => 1000 + Math.random() * 4000 } = {}\n) {\n  return {\n    async as(type, progress) {\n      let shouldGiveUp = false\n      for (let i = 1; ; i++) {\n        try {\n          return await attempt()\n        } catch (error) {\n          console.error(`Unable to download ${url} [attempt ${i}]`, error)\n          if (i >= 3 || shouldGiveUp) throw error\n          const waitMs = getRetryDelay()\n          await new Promise((resolve) => setTimeout(resolve, waitMs))\n        }\n      }\n      function attempt() {\n        return new Promise((resolve, reject) => {\n          var xh = new XMLHttpRequest()\n          xh.open('GET', url, true)\n          xh.responseType = type\n          xh.onload = () => {\n            if (+xh.status === 200) {\n              resolve(xh.response)\n            } else {\n              if (+xh.status === 403 || +xh.status === 404) {\n                shouldGiveUp = true\n              }\n              reject(new Error(`Unable to download ${url}: HTTP ${xh.status}`))\n            }\n          }\n          xh.onerror = () => reject(new Error(`Unable to download ${url}`))\n          if (progress) {\n            progress.formatter = BYTES_FORMATTER\n            xh.onprogress = (e) => progress.report(e.loaded, e.total)\n          }\n          xh.send(null)\n        })\n      }\n    },\n  }\n}\n\nexport default download\n"],"sourceRoot":""}
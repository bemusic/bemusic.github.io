{"version":3,"sources":["file:///home/ubuntu/bemuse/src/utils/read-blob.js","file:///home/ubuntu/bemuse/src/progress/utils.js","file:///home/ubuntu/bemuse/src/sampling-master/index.js","file:///home/ubuntu/bemuse/src/coming-soon/demo/template.jade","file:///home/ubuntu/bemuse/src/coming-soon/demo/style.scss","file:///home/ubuntu/bemuse/src/coming-soon/demo/style.scss?d4ff","file:///home/ubuntu/bemuse/src/coming-soon/demo/index.js","file:///home/ubuntu/bemuse/src/audio-context/index.js","file:///home/ubuntu/bemuse/src/resources/dnd-resources.js","file:///home/ubuntu/bemuse/src/progress/formatters.js"],"names":["readBlob","blob","as","type","Promise","resolve","reject","reader","FileReader","onload","result","onerror","Error","readAsArrayBuffer","readAsText","fixed","total","progress","loaded","report","extra","atomic","promise","tap","data","byteLength","formatter","_formatters","BYTES_FORMATTER","wrapPromise","f","current","apply","this","arguments","bind","from","to","watch","simultaneous","target","queue","unsubscribe","update","length","shift","add","push","__webpack_require__","canPlay","dummyAudioTag","canPlayType","unmuteAudio","FADE_LENGTH","document","createElement","SamplingMaster","audioContext","_classCallCheck","_audioContext","_samples","_groups","_instances","Set","_destination","destination","_destroyed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","destroy","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","blobOrArrayBuffer","_this","_coerceToArrayBuffer","then","arrayBuffer","_decodeAudio","blobOrArrayBufferOrAudioBuffer","_this2","numberOfChannels","decode","audioBuffer","sample","Sample","options","group","SoundGroup","ArrayBuffer","_readBlob2","default","_this3","decodeAudioData","e","instance","delete","samplingMaster","volume","_master","_gain","createGain","gain","connect","disconnect","_buffer","delay","PlayInstance","buffer","_this4","context","source","createBufferSource","onended","stop","node","_source","TEST_node","startTime","Math","max","currentTime","startOffset","start","fadeIn","fadeOutAt","setValueAtTime","end","duration","linearRampToValueAtTime","_startPlaying","_stoppedPlaying","onstop","playbackRate","random","pow","ctx","_audioContext2","osc","createOscillator","frequency","resume","console","error","module","exports","locals","buf","join","i","content","hmr","transform","insertInto","main","element","ui","el","_jquery2","_template2","appendTo","find","hide","on","preventDefault","dndLoader","_dndResources2","originalEvent","go","text","handler","off","loader","master","_samplingMaster2","$log","$play","$sampler","waitForPlay","show","log","t","loadSamples","notes","chart","samples","promises","completed","_loop2","note","keysound","loadKeysound","headers","get","catch","all","name","file","replace","read","_co2","regeneratorRuntime","mark","_callee","list","bmsFile","arraybuffer","timing","info","wrap","_callee$","_context","prev","fileList","sent","filter","match","Buffer","Uint8Array","promisify","_reader2","readAsync","_compiler2","compile","_timing2","fromBMSChart","_notes2","_songInfo2","JSON","stringify","unmute","_loop","setTimeout","span","play","scrollTop","scrollHeight","addClass","beatToSeconds","beat","latencyHint","ProgressUtils","DndResources","event","_files","out","item","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","dataTransfer","items","Array","readItem","t0","finish","files","addFile","t1","abrupt","_callee2","entry","_context2","webkitGetAsEntry","readEntry","getAsFile","isFile","readFile","isDirectory","dir","_callee3","entries","readMore","results","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_context3","createReader","readEntries","_toConsumableArray","getFilesFromEvent","toLowerCase","FileResource","map","_file","URL","createObjectURL","_bytes","_bytes2","PERCENTAGE_FORMATTER","toFixed","EXTRA_FORMATTER"],"mappings":"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","file":"comingSoonDemo-9720546481607ef6b110.js","sourcesContent":["export default readBlob\n\n// Reads the blob as a specified type. The blob will not actually be read\n// unless the ``as()`` method is called.\n//\n// .. js:function:: as(type)\n//\n//    Starts reading the blob as ``type``. The ``type`` is a String such as\n//    \"arraybuffer\" or \"text\".\nexport function readBlob (blob) {\n  return {\n    as (type) {\n      return new Promise(function (resolve, reject) {\n        let reader = new FileReader()\n        reader.onload = function () {\n          resolve(reader.result)\n        }\n        reader.onerror = function () {\n          reject(new Error('Unable to read from Blob'))\n        }\n        switch (type) {\n          case 'arraybuffer':\n            reader.readAsArrayBuffer(blob)\n            break\n          case 'text':\n            reader.readAsText(blob)\n            break\n        }\n      })\n    }\n  }\n}\n","import { BYTES_FORMATTER } from 'bemuse/progress/formatters'\n\nexport function fixed (total, progress) {\n  if (!progress) return () => {}\n  let loaded = 0\n  progress.report(0, total)\n  return extra => progress.report(++loaded, total, extra)\n}\n\n// Reports the progress as an atomic operation.\nexport function atomic (progress, promise) {\n  if (!progress) return promise\n  return Promise.resolve(promise).tap(data => {\n    if (data && data.byteLength) {\n      progress.formatter = BYTES_FORMATTER\n      progress.report(data.byteLength, data.byteLength)\n    } else {\n      progress.report(1, 1)\n    }\n  })\n}\n\nexport function wrapPromise (progress, f) {\n  let current = 0\n  let total = 0\n  return function () {\n    progress.report(current, ++total)\n    return Promise.resolve(f.apply(this, arguments)).tap(() =>\n      progress.report(++current, total)\n    )\n  }\n}\n\nexport function bind (from, to) {\n  return from.watch(() => to.report(from.current, from.total, from.extra))\n}\n\nexport function simultaneous (target) {\n  let queue = []\n  let current\n  let unsubscribe\n  function update () {\n    if (current) {\n      target.report(current.current, current.total, current.extra)\n    }\n    if (queue.length > 0 && (!current || current.progress >= 1)) {\n      bind(queue.shift())\n    }\n  }\n  function bind (progress) {\n    if (current === progress) {\n      return\n    }\n    if (unsubscribe) {\n      unsubscribe()\n      unsubscribe = null\n    }\n    current = progress\n    if (current) {\n      unsubscribe = current.watch(update)\n    }\n  }\n  return {\n    add (progress) {\n      queue.push(progress)\n      update()\n    }\n  }\n}\n","import defaultAudioContext from 'bemuse/audio-context'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport const FADE_LENGTH = 0.001\n\nlet dummyAudioTag = document.createElement('audio')\n\n// Checks whether an audio format is supported.\nexport function canPlay (type) {\n  return dummyAudioTag.canPlayType(type) === 'probably'\n}\n\n// The sampling master is a wrapper class around Web Audio API\n// that takes care of:\n//\n// - Decoding audio from an ArrayBuffer or Blob (resulting in a \"Sample\").\n// - Playing the `Sample` and managing its lifecycle.\nexport class SamplingMaster {\n  constructor (audioContext) {\n    this._audioContext = audioContext || defaultAudioContext\n    this._samples = []\n    this._groups = []\n    this._instances = new Set()\n    this._destination = this._audioContext.destination\n  }\n\n  // Connects a dummy node to the audio, thereby unmuting the audio system on\n  // iOS devices (which keeps the audio muted until a user interacts with the\n  // page).\n  unmute () {\n    unmuteAudio(this._audioContext)\n  }\n\n  // The underlying AudioContext.\n  get audioContext () {\n    return this._audioContext\n  }\n\n  // The audio destination.\n  get destination () {\n    return this._destination\n  }\n\n  // Destroys this SamplingMaster, make it unusable.\n  destroy () {\n    if (this._destroyed) return\n    this._destroyed = true\n    for (let sample of this._samples) sample.destroy()\n    for (let instance of this._instances) instance.destroy()\n    this._samples = null\n    this._instances = null\n  }\n\n  // Decodes the audio data from a Blob or an ArrayBuffer.\n  // Returns an AudioBuffer which can be re-used in other sampling masters.\n  decode (blobOrArrayBuffer) {\n    return this._coerceToArrayBuffer(blobOrArrayBuffer).then(arrayBuffer =>\n      this._decodeAudio(arrayBuffer)\n    )\n  }\n\n  // Creates a `Sample` from a Blob or an ArrayBuffer or an AudioBuffer.\n  sample (blobOrArrayBufferOrAudioBuffer) {\n    const audioBufferPromise = (() => {\n      if (blobOrArrayBufferOrAudioBuffer.numberOfChannels) {\n        return Promise.resolve(blobOrArrayBufferOrAudioBuffer)\n      } else {\n        return this.decode(blobOrArrayBufferOrAudioBuffer)\n      }\n    })()\n    return audioBufferPromise.then(audioBuffer => {\n      if (this._destroyed) throw new Error('SamplingMaster already destroyed!')\n      var sample = new Sample(this, audioBuffer)\n      this._samples.push(sample)\n      return sample\n    })\n  }\n\n  group (options) {\n    const group = new SoundGroup(this, options)\n    this._groups.push(group)\n    return group\n  }\n\n  _coerceToArrayBuffer (blobOrArrayBuffer) {\n    if (blobOrArrayBuffer instanceof ArrayBuffer) {\n      return Promise.resolve(blobOrArrayBuffer)\n    } else {\n      return readBlob(blobOrArrayBuffer).as('arraybuffer')\n    }\n  }\n\n  _decodeAudio (arrayBuffer) {\n    return new Promise((resolve, reject) => {\n      this.audioContext.decodeAudioData(\n        arrayBuffer,\n        function decodeAudioDataSuccess (audioBuffer) {\n          resolve(audioBuffer)\n        },\n        function decodeAudioDataFailure (e) {\n          reject(new Error('Unable to decode audio: ' + e))\n        }\n      )\n    })\n  }\n\n  _startPlaying (instance) {\n    this._instances.add(instance)\n  }\n\n  _stoppedPlaying (instance) {\n    this._instances.delete(instance)\n  }\n}\n\n// Sound group\nclass SoundGroup {\n  constructor (samplingMaster, { volume } = {}) {\n    this._master = samplingMaster\n    this._gain = this._master.audioContext.createGain()\n    if (volume != null) this._gain.gain.value = volume\n    this._gain.connect(this._master.destination)\n  }\n\n  get destination () {\n    return this._gain\n  }\n\n  destroy () {\n    this._gain.disconnect()\n    this._gain = null\n  }\n}\n\n// The Sample is created by and belongs to the `SamplingMaster`.\n//\n// You don't invoke this constructor directly; it is invoked by\n// `SamplingMaster#create`.\nclass Sample {\n  constructor (samplingMaster, audioBuffer) {\n    this._master = samplingMaster\n    this._buffer = audioBuffer\n  }\n\n  // Plays the sample and returns the new PlayInstance.\n  play (delay, options) {\n    return new PlayInstance(this._master, this._buffer, delay, options)\n  }\n\n  // Destroys this sample, thereby making it unusable.\n  destroy () {\n    this._master = null\n    this._buffer = null\n  }\n}\n\n// When a `Sample` is played, a PlayInstance is created.\n// A PlayInstance may not be reused; after the sound finishes playing,\n// you have to invoke `Sample#play` again.\n//\n// You don't invoke this constructor directly; it is invoked by `Sample#play`.\nclass PlayInstance {\n  constructor (samplingMaster, buffer, delay, options = {}) {\n    delay = delay || 0\n    this._master = samplingMaster\n\n    // Connect all the stuff...\n    let context = samplingMaster.audioContext\n    let source = context.createBufferSource()\n    source.buffer = buffer\n    source.onended = () => this.stop()\n    let gain = context.createGain()\n    source.connect(gain)\n    let destination =\n      options.node ||\n      (options.group && options.group.destination) ||\n      samplingMaster.destination\n    gain.connect(destination)\n    this._source = source\n    this._gain = this.TEST_node = gain\n\n    // Start the sound.\n    let startTime = !delay ? 0 : Math.max(0, context.currentTime + delay)\n    let startOffset = options.start || 0\n    let fadeIn = startOffset > 0\n    let fadeOutAt = false\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, 0)\n    }\n    if (options.end !== undefined) {\n      let duration = Math.max(options.end - startOffset, 0)\n      source.start(startTime, startOffset, duration + FADE_LENGTH)\n      fadeOutAt = context.currentTime + delay + duration\n    } else {\n      source.start(startTime, startOffset)\n    }\n    if (fadeIn) {\n      gain.gain.setValueAtTime(0, context.currentTime + delay)\n      gain.gain.linearRampToValueAtTime(\n        1,\n        context.currentTime + delay + FADE_LENGTH\n      )\n    }\n    if (fadeOutAt !== false) {\n      gain.gain.setValueAtTime(1, fadeOutAt)\n      gain.gain.linearRampToValueAtTime(0, fadeOutAt + FADE_LENGTH)\n    }\n    this._master._startPlaying(this)\n  }\n\n  // Stops the sample and disconnects the underlying Web Audio nodes.\n  stop () {\n    if (!this._source) return\n    this._source.stop(0)\n    this._source.disconnect()\n    this._gain.disconnect()\n    this._source = null\n    this._gain = null\n    this._master._stoppedPlaying(this)\n    if (this.onstop) this.onstop()\n  }\n\n  // Makes this PlayInstance sound off-pitch, as a result of badly hitting\n  // a note.\n  bad () {\n    if (!this._source) return\n    this._source.playbackRate.value =\n      Math.random() < 0.5 ? Math.pow(2, 1 / 24) : Math.pow(2, -1 / 24)\n  }\n\n  // Destroys this PlayInstance.\n  destroy () {\n    this.stop()\n  }\n}\n\nexport default SamplingMaster\n\n/**\n * Enables Web Audio on iOS. By default, on iOS, audio is disabled.\n * This function must be called before audio will start working. It must be\n * called as a response to some user interaction (e.g. touchstart).\n *\n * Also, there’s now Chrome autoplay policy taking effect.\n * https://developers.google.com/web/updates/2017/09/autoplay-policy-changes\n *\n * @param {AudioContext} ctx The AudioContext to be unmuted.\n */\nexport function unmuteAudio (ctx = defaultAudioContext) {\n  // Perform some strange magic to unmute the audio on iOS devices.\n  // This code doesn’t make sense at all, you know.\n  let gain = ctx.createGain()\n  let osc = ctx.createOscillator()\n  osc.frequency.value = 440\n  osc.start(ctx.currentTime + 0.1)\n  osc.stop(ctx.currentTime + 0.1)\n  gain.connect(ctx.destination)\n  gain.disconnect()\n\n  try {\n    ctx.resume()\n  } catch (e) {\n    console.error('[sampling-master] Cannot resume AudioContext', e)\n  }\n}\n","var jade = require(\"/home/ubuntu/bemuse/node_modules/jade/lib/runtime.js\");\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div class=\\\"jukebox\\\"><div class=\\\"jukebox--overlay\\\"></div><div class=\\\"jukebox--inner\\\"><h1>BMS Jukebox</h1><p class=\\\"jukebox--status js-log\\\">Waiting for BMS file...</p><p>Google Chrome: Drag a BMS folder into this box.</p><p>Firefox, Safari: Select all files (BMS+sounds) and drag into this box.</p><button class=\\\"js-play\\\">Click Here to Play</button><div class=\\\"js-sampler jukebox--sampler\\\"></div></div></div>\");;return buf.join(\"\");\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jukebox--overlay {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background: rgba(139, 134, 133, 0.5);\\n}\\n\\n.jukebox--inner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border: 2px solid #8b8685;\\n  background: #252423;\\n  padding: 12px;\\n}\\n\\n.jukebox--sampler {\\n  background: #090807;\\n  padding: 9px;\\n  border: 1px solid #8b8685;\\n  margin-top: 10px;\\n  height: 192px;\\n  width: 40em;\\n  overflow: auto;\\n}\\n\\n.jukebox--sampler span {\\n  font-size: 12px;\\n  opacity: 1;\\n  -webkit-transition: 0.5s opacity;\\n  transition: 0.5s opacity;\\n}\\n\\n.jukebox--sampler span.is-off {\\n  color: #8b8685;\\n  opacity: 0;\\n}\\n\\n.jukebox h1 {\\n  margin: 0 0 20px;\\n  font: 30px Helvetica Neue, Helvetica, sans-serif;\\n}\\n\\n.jukebox p {\\n  margin: 10px 0 0;\\n}\\n\\n.jukebox .jukebox--status {\\n  color: #8b8685;\\n  font-style: italic;\\n  margin-bottom: 20px;\\n}\\n\\n.jukebox button {\\n  display: block;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  width: 100%;\\n  background: #090807;\\n  color: #7f3;\\n  cursor: pointer;\\n  border: 1px solid #8b8685;\\n  padding: 8px;\\n  font: bold 15px verdana, sans-serif;\\n  margin-top: 18px;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--9-1!../../../node_modules/postcss-loader/lib/index.js??postcss!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './style.scss'\n\nimport $ from 'jquery'\nimport Compiler from 'bms/compiler'\nimport DndResources from 'bemuse/resources/dnd-resources'\nimport Notes from 'bms/notes'\nimport Reader from 'bms/reader'\nimport SamplingMaster from 'bemuse/sampling-master'\nimport SongInfo from 'bms/song-info'\nimport Timing from 'bms/timing'\nimport co from 'co'\nimport ctx from 'bemuse/audio-context'\n\nimport template from './template.jade'\n\nexport function main (element) {\n  $(element)\n    .text('Technical Demo!')\n    .on('click', handler)\n\n  function handler () {\n    ui()\n    $(element).off('click', handler)\n    $(element).hide()\n    return false\n  }\n\n  function ui () {\n    var el = $(template()).appendTo('body')\n    el.find('.js-play').hide()\n    el.on('dragover', () => false).on('drop', e => {\n      e.preventDefault()\n      let dndLoader = new DndResources(e.originalEvent)\n      go(dndLoader, el)\n      return false\n    })\n  }\n}\n\nfunction go (loader, element) {\n  let master = new SamplingMaster(ctx)\n  let $log = element.find('.js-log')\n  let $play = element.find('.js-play').hide()\n  let $sampler = element.find('.js-sampler')\n\n  co(function * () {\n    log('Loading file list')\n    let list = yield loader.fileList\n    let bmsFile = list.filter(f => f.match(/\\.(?:bms|bme|bml|pms)$/i))[0]\n    log('Loading ' + bmsFile)\n\n    let arraybuffer = yield (yield loader.file(bmsFile)).read()\n    let buffer = Buffer.from(new Uint8Array(arraybuffer))\n    let text = yield Promise.promisify(Reader.readAsync)(buffer)\n    let chart = Compiler.compile(text).chart\n    var timing = Timing.fromBMSChart(chart)\n    var notes = Notes.fromBMSChart(chart)\n    var info = SongInfo.fromBMSChart(chart)\n    $('<pre wrap></pre>')\n      .text(JSON.stringify(info, null, 2))\n      .appendTo($sampler)\n    log('Loading samples')\n    var samples = yield loadSamples(notes, chart)\n    log('Click the button to play!')\n    yield waitForPlay()\n    void (function () {\n      master.unmute()\n      for (let note of notes.all()) {\n        setTimeout(() => {\n          let sample = samples[note.keysound]\n          if (!sample) {\n            console.log('warn: unknown sample ' + note.keysound)\n            return\n          }\n          let span = $('<span></span>')\n            .text('[' + note.keysound + '] ')\n            .appendTo($sampler)\n          let instance = sample.play()\n          $sampler[0].scrollTop = $sampler[0].scrollHeight\n          instance.onstop = function () {\n            span.addClass('is-off')\n          }\n        }, timing.beatToSeconds(note.beat) * 1000)\n      }\n      return false\n    })()\n  }).done()\n\n  function waitForPlay () {\n    return new Promise(function (resolve) {\n      $play.show()\n      $play.on('click', () => {\n        resolve()\n        $play.hide()\n      })\n    })\n  }\n\n  function log (t) {\n    $log.text(t)\n  }\n\n  function loadSamples (notes, chart) {\n    var samples = {}\n    var promises = []\n    let completed = 0\n\n    for (let note of notes.all()) {\n      let keysound = note.keysound\n      if (!(keysound in samples)) {\n        samples[keysound] = null\n        promises.push(\n          loadKeysound(chart.headers.get('wav' + keysound))\n            .then(blob => master.sample(blob))\n            .then(sample => (samples[keysound] = sample))\n            .catch(e => console.error('Unable to load ' + keysound + ': ' + e))\n            .tap(() =>\n              log(\n                '[loaded ' + ++completed + '/' + promises.length + ' samples]'\n              )\n            )\n        )\n      }\n    }\n\n    return Promise.all(promises).then(() => samples)\n  }\n\n  function loadKeysound (name) {\n    if (typeof name !== 'string') return Promise.reject(new Error('Empty name'))\n    return loader\n      .file(name)\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.ogg')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.mp3')))\n      .catch(() => loader.file(name.replace(/\\.\\w+$/, '.wav')))\n      .then(file => file.read())\n  }\n}\n","import createAudioContext from 'audio-context'\n\nexport default createAudioContext({\n  latencyHint: 'interaction'\n})\n","import * as ProgressUtils from 'bemuse/progress/utils'\n\nimport co from 'co'\nimport readBlob from 'bemuse/utils/read-blob'\n\nexport class DndResources {\n  constructor (event) {\n    this._files = getFilesFromEvent(event)\n  }\n  file (name) {\n    return this._files.then(function (files) {\n      for (let file of files) {\n        if (file.name.toLowerCase() === name.toLowerCase()) {\n          return new FileResource(file.file)\n        }\n      }\n      throw new Error('unable to find ' + name)\n    })\n  }\n  get fileList () {\n    return Promise.resolve(this._files.map(f => f.name))\n  }\n}\n\nexport class FileResource {\n  constructor (file) {\n    this._file = file\n  }\n  read (progress) {\n    return ProgressUtils.atomic(\n      progress,\n      readBlob(this._file).as('arraybuffer')\n    )\n  }\n  resolveUrl () {\n    return Promise.resolve(URL.createObjectURL(this._file))\n  }\n  get name () {\n    return this._file.name\n  }\n}\n\nexport default DndResources\n\nfunction getFilesFromEvent (event) {\n  let out = []\n\n  return co(function * () {\n    if (event.dataTransfer.items) {\n      for (let item of Array.from(event.dataTransfer.items)) {\n        yield readItem(item)\n      }\n    } else if (event.dataTransfer.files) {\n      for (let file of Array.from(event.dataTransfer.files)) {\n        addFile(file)\n      }\n    }\n    return out\n  })\n\n  function readItem (item) {\n    return co(function * () {\n      let entry = item.webkitGetAsEntry && item.webkitGetAsEntry()\n      if (entry) {\n        yield readEntry(entry, '')\n      } else {\n        let file = item.getAsFile && item.getAsFile()\n        addFile(file)\n      }\n    })\n  }\n\n  function readEntry (entry) {\n    if (entry.isFile) {\n      return readFile(entry)\n    } else if (entry.isDirectory) {\n      return readDirectory(entry)\n    }\n  }\n\n  function readFile (entry) {\n    return new Promise((resolve, reject) => {\n      entry.file(resolve, reject)\n    }).tap(file => {\n      addFile(file)\n    })\n  }\n\n  function readDirectory (dir) {\n    return co(function * () {\n      let entries = []\n      let reader = dir.createReader()\n      let readMore = () =>\n        new Promise((resolve, reject) => {\n          reader.readEntries(resolve, reject)\n        })\n      for (;;) {\n        let results = yield readMore()\n        if (!results || results.length === 0) break\n        entries.push(...Array.from(results))\n      }\n      for (let entry of entries) {\n        yield readEntry(entry)\n      }\n    })\n  }\n\n  function addFile (file) {\n    if (file) {\n      out.push({ name: file.name, file })\n    }\n  }\n}\n","import bytes from 'bytes'\n\nlet wrap = f => progress => (progress.progress !== null ? f(progress) : '')\n\n// Formats the `Progress` as bytes (e.g. 1.23mb of 1.31mb).\nexport let BYTES_FORMATTER = wrap(\n  progress => bytes(progress.current) + ' / ' + bytes(progress.total)\n)\n\n// Formats the `Progress` as percentage.\nexport let PERCENTAGE_FORMATTER = wrap(\n  progress => (progress.current / progress.total * 100).toFixed(1) + '%'\n)\n\n// Formats the `Progress` simply by using the value of `Progress#extra`.\nexport let EXTRA_FORMATTER = wrap(progress => progress.extra + '')\n"],"sourceRoot":""}
{"version":3,"sources":["file:///home/circleci/bemuse/src/scintillator/expression/index.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/animation.js","file:///home/circleci/bemuse/src/scintillator/expression/parser.pegjs","file:///home/circleci/bemuse/src/scintillator/context.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/base.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/instance.js","file:///home/circleci/bemuse/src/scintillator/nodes/concerns/display-object.js","file:///home/circleci/bemuse/src/scintillator/nodes/lib/utils.js","file:///home/circleci/bemuse/src/scintillator/nodes/group.js","file:///home/circleci/bemuse/src/scintillator/nodes/if.js","file:///home/circleci/bemuse/src/scintillator/nodes/object.js","file:///home/circleci/bemuse/src/scintillator/nodes/skin-root.js","file:///home/circleci/bemuse/src/scintillator/nodes/sprite.js","file:///home/circleci/bemuse/src/scintillator/nodes/text.js","file:///home/circleci/bemuse/src/scintillator/compiler.js","file:///home/circleci/bemuse/src/scintillator/resources.js","file:///home/circleci/bemuse/src/scintillator/loader.js","file:///home/circleci/bemuse/src/scintillator/index.js"],"names":["log","debug__WEBPACK_IMPORTED_MODULE_0___default","createFunction","code","fn","eval","displayName","constant","test","Expression","text","_parser_pegjs__WEBPACK_IMPORTED_MODULE_1___default","a","parse","f","evaluate","data","key","__webpack_exports__","createKeytime","def","Object","assign","keytime__WEBPACK_IMPORTED_MODULE_2___default","Animation","animations","timeKey","_classCallCheck","this","_timeKey","_properties","lodash__WEBPACK_IMPORTED_MODULE_0___default","map","animation","flatten","thru","array","Set","value","_animations","_events","uniq","_createClass","name","fallback","_this","has","values","_getAnimation","hasOwnProperty","event","filter","e","maxBy","t","on","apply","concat","_toConsumableArray","compiler","$el","animationElements","Array","from","children","el","_compile","jquery__WEBPACK_IMPORTED_MODULE_1___default","attr","keyframes","_attrs","attrs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","keyframe","time","ease","isNaN","Error","push","err","return","attributes","n","toLowerCase","fromPairs","peg$SyntaxError","message","expected","found","location","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","i","escapedParts","parts","length","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","expr","peg$parseexpr","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","first","rest","operate","combine","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","val","peg$c23","peg$otherExpectation","peg$c24","peg$c25","peg$c26","peg$classExpectation","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","JSON","stringify","peg$c40","peg$c41","peg$c42","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","peg$buildStructuredError","peg$parselogical_or","s0","s1","s2","s3","s4","s5","s6","s7","peg$parselogical_and","peg$parse_","substr","peg$parseadd","peg$parsemul","peg$parseval","charAt","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsenumber","peg$parseidentifier","item","createRenderer","w","h","pixi_min","canUseNewCanvasBlendModes","transparent","Context","skin","refs","_skin","_instance","instantiate","_renderer","width","height","stage","object","view","skinData","_setupInteractivity","render","destroy","_teardownInteractivity","add","set","delete","mouse","touches","onMouse","onUpdateMouse","onNoMouse","onTouch","call","point","id","rect","x","clientX","left","y","clientY","top","addEventListener","removeEventListener","_input","get","output","getBoundingClientRect","touch","identifier","lib_base","SkinNode","base_classCallCheck","base_createClass","node","compile","instance","Instance","instance_classCallCheck","_context","context","_object","_children","_bindings","_concerns","onData","callbacks","onDestroy","bindings","binding","bind","concerns","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","concern","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onCreate","attachTo","instance_createClass","_len","arguments","pipeline","_key","sideEffect","pop","v","_parent","addChild","removeChild","detach","properties","default","obj","scale","alpha","visible","display_object","_SkinNode","DisplayObject","display_object_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","display_object_createClass","_animation","property","expression","scintillator_expression","getter","prop","blendMode","NORMAL","SCREEN","parseBlendMode","ref","subject","_this2","unref","parseFrame","m","match","group_Mask","Mask","frame","group_classCallCheck","_frame","group_createClass","mask","beginFill","drawShape","endFill","group","GroupNode","group_possibleConstructorReturn","group_inherits","compileChildren","display","maskFrame","container","nodes_if","IfNode","if_classCallCheck","if_possibleConstructorReturn","if_inherits","if_createClass","String","childNode","ChildManager","poolSize","instances","Map","pool","initPool","unused","keys","createInstance","update","nodes_object","ObjectNode","object_classCallCheck","object_possibleConstructorReturn","object_inherits","object_createClass","batch","position","manager","skin_root","SkinRootNode","skin_root_classCallCheck","skin_root_possibleConstructorReturn","skin_root_inherits","skin_root_createClass","nodes_sprite","SpriteNode","sprite_classCallCheck","sprite_possibleConstructorReturn","sprite_inherits","sprite_createClass","url","resources","anchorX","anchorY","sprite","getTexture","anchor","_texture","scaleMode","NEAREST","base","fromImage","texture","nodes_text","TextNode","text_classCallCheck","text_possibleConstructorReturn","text_inherits","text_createClass","font","ttf","fill","align","BitmapText","updateText","browser_default","NODES","if","scintillator_compiler","Compiler","env","compiler_classCallCheck","_defs","nodeName","Node","getNodeClass","compileDefs","jquery_default","getDef","getAttribute","scintillator_resources","Resources","resources_classCallCheck","_map","resources_createClass","src","lodash_default","loader_log","load","xmlPath","progress","co_default","co","_callee","$xml","paths","element","_element","path","assetUrl","regeneratorRuntime","wrap","prev","xmlUrl","Promise","resolve","ajax","dataType","then","xml","documentElement","sent","find","t0","finish","t1","url_default","t2","loadResources","abrupt","stop","urls","loader","Loader","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","once","formatter","formatters","report","getSkinUrl","displayMode","window","innerWidth","innerHeight"],"mappings":"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","file":"gameEngine~playground~test-1d7058f980c21943ddba.js","sourcesContent":["import debug from 'debug'\n\nimport parser from './parser.pegjs'\n\nconst log = debug('scintillator:expression')\n\nfunction createFunction (code) {\n  let fn = eval('(function(get) { return ' + code + ' })') // eslint-disable-line no-eval\n  fn.displayName = '(' + code + ')'\n  fn.constant = !!/^[-0-9.]+$/.test(code)\n  return fn\n}\n\nexport function Expression (text) {\n  log('parsing %s', text)\n  let code = parser.parse(text)\n  log('parsed %s => %s', text, code)\n  let f = createFunction(code)\n  let evaluate\n  if (f.constant) {\n    evaluate = f\n  } else {\n    evaluate = function (data) {\n      return f(function (key) {\n        return data[key]\n      })\n    }\n  }\n  evaluate.constant = f.constant\n  return evaluate\n}\n\nexport default Expression\n","import _ from 'lodash'\nimport $ from 'jquery'\nimport keytime from 'keytime'\n\nlet createKeytime = def => Object.assign({}, def, { data: keytime(def.data) })\n\nexport class Animation {\n  constructor (animations, timeKey) {\n    this._timeKey = timeKey || 't'\n    this._properties = _(animations)\n      .map(animation => _.map(animation.data, 'name'))\n      .flatten()\n      .thru(array => new Set(array))\n      .value()\n    this._animations = _.map(animations, createKeytime)\n    this._events = _.uniq(_.map(animations, 'on'))\n  }\n  prop (name, fallback) {\n    if (!this._properties.has(name)) {\n      return fallback\n    }\n    return data => {\n      let values = this._getAnimation(data)\n      if (values.hasOwnProperty(name)) {\n        return values[name]\n      } else {\n        return fallback(data)\n      }\n    }\n  }\n  _getAnimation (data) {\n    let event = _(this._events)\n      .filter(e => e === '' || e in data)\n      .maxBy(e => data[e] || 0)\n    let t = data[this._timeKey] - (data[event] || 0)\n    let animations = this._animations.filter(a => a.on === event)\n    let values = animations.map(a => a.data.values(t))\n    return Object.assign({}, ...values)\n  }\n  static compile (compiler, $el) {\n    let animationElements = Array.from($el.children('animation'))\n    let animations = _.map(animationElements, el => _compile($(el)))\n    let timeKey = $el.attr('t') || 't'\n    return new Animation(animations, timeKey)\n  }\n}\n\nexport function _compile ($el) {\n  let keyframes = _.map(Array.from($el.children('keyframe')), _attrs)\n  let attrs = {}\n  for (let keyframe of keyframes) {\n    let time = +keyframe.t\n    let ease = keyframe.ease || 'linear'\n    if (isNaN(time)) throw new Error('Expected keyframe to have \"t\" attribute')\n    for (let key in keyframe) {\n      if (key === 't' || key === 'ease') continue\n      let value = +keyframe[key]\n      let attr = attrs[key] || (attrs[key] = _createKeyframes(key))\n      attr.keyframes.push({ time, value, ease })\n    }\n  }\n  return {\n    on: $el.attr('on') || '',\n    data: _.values(attrs)\n  }\n}\n\nfunction _createKeyframes (name) {\n  return { name, keyframes: [] }\n}\n\nexport function _attrs (el) {\n  return _(el.attributes)\n    .map(n => [n.name.toLowerCase(), n.value])\n    .fromPairs()\n    .value()\n}\n\nexport default Animation\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { expr: peg$parseexpr },\n      peg$startRuleFunction  = peg$parseexpr,\n\n      peg$c0 = \"||\",\n      peg$c1 = peg$literalExpectation(\"||\", false),\n      peg$c2 = function(first, rest) {\n            return combine(first, rest);\n          },\n      peg$c3 = \"&&\",\n      peg$c4 = peg$literalExpectation(\"&&\", false),\n      peg$c5 = \"+\",\n      peg$c6 = peg$literalExpectation(\"+\", false),\n      peg$c7 = \"-\",\n      peg$c8 = peg$literalExpectation(\"-\", false),\n      peg$c9 = \"*\",\n      peg$c10 = peg$literalExpectation(\"*\", false),\n      peg$c11 = \"/\",\n      peg$c12 = peg$literalExpectation(\"/\", false),\n      peg$c13 = \"%\",\n      peg$c14 = peg$literalExpectation(\"%\", false),\n      peg$c15 = \"(\",\n      peg$c16 = peg$literalExpectation(\"(\", false),\n      peg$c17 = \")\",\n      peg$c18 = peg$literalExpectation(\")\", false),\n      peg$c19 = function(expr) { return \"(\" + expr + \")\"; },\n      peg$c20 = \"!\",\n      peg$c21 = peg$literalExpectation(\"!\", false),\n      peg$c22 = function(val) { return \"!\" + val },\n      peg$c23 = peg$otherExpectation(\"number\"),\n      peg$c24 = function() { return text(); },\n      peg$c25 = /^[eE]/,\n      peg$c26 = peg$classExpectation([\"e\", \"E\"], false, false),\n      peg$c27 = /^[0-9]/,\n      peg$c28 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c29 = \".\",\n      peg$c30 = peg$literalExpectation(\".\", false),\n      peg$c31 = \"0\",\n      peg$c32 = peg$literalExpectation(\"0\", false),\n      peg$c33 = /^[1-9]/,\n      peg$c34 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c35 = /^[a-zA-Z]/,\n      peg$c36 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c37 = /^[a-zA-Z0-9_]/,\n      peg$c38 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c39 = function() { return \"get(\" + JSON.stringify(text()) + \")\" },\n      peg$c40 = peg$otherExpectation(\"whitespace\"),\n      peg$c41 = /^[ \\t\\n\\r]/,\n      peg$c42 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseexpr() {\n    var s0;\n\n    s0 = peg$parselogical_or();\n\n    return s0;\n  }\n\n  function peg$parselogical_or() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parselogical_and();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c0) {\n          s5 = peg$c0;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parselogical_and();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c0) {\n            s5 = peg$c0;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parselogical_and();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parselogical_and() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseadd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c3) {\n          s5 = peg$c3;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseadd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s5 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseadd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseadd() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemul();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsemul();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemul();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemul() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseval();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c11;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseval();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c11;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s5 = peg$c13;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c14); }\n              }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseval();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseval() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parselogical_or();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c19(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c20;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseval();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseint();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsefrac();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexp();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c24();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (peg$c25.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s2 = peg$c5;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c27.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c29;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c31;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c33.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c35.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c37.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c41.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n\n    function operate(item) {\n      var operator = item[1]\n      var operand = item[3]\n      return \" \" + operator + \" \" + operand\n    }\n    function combine(first, rest) {\n      return first + rest.map(operate).join('')\n    }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as PIXI from 'pixi.js'\n\nfunction createRenderer (w, h) {\n  hackPIXIToForceNewBlendModes()\n\n  // For now, we are using CanvasRenderer instead of WebGLRenderer or\n  // autoDetectRenderer befcause of two reasons.\n  // 1. Current implementation has some problem with rendering\n  //    sprite batches: https://github.com/pixijs/pixi.js/issues/1910\n  // 2. It seems that Canvas performs better on some browsers, i.e. Chrome.\n  //    WebGLRenderer only performs better on Firefox from the experiment.\n  return new PIXI.CanvasRenderer(w, h, { transparent: true })\n}\n\n// HACK: Sometimes, when using the canvas renderer,\n// the blend mode is not properly set.\nfunction hackPIXIToForceNewBlendModes () {\n  PIXI.utils.canUseNewCanvasBlendModes = () => true\n}\n\nexport class Context {\n  constructor (skin) {\n    this.refs = {}\n    this._skin = skin\n    this._instance = skin.instantiate(this)\n    this._renderer = createRenderer(skin.width, skin.height)\n    this.stage = this._instance.object\n    this.view = this._renderer.view\n    this.skinData = skin.data\n    this._setupInteractivity()\n  }\n  render (data) {\n    this._instance.push(data)\n    this._renderer.render(this.stage)\n  }\n  destroy () {\n    this._instance.destroy()\n    this._instance = null\n    this._teardownInteractivity()\n  }\n  get input () {\n    return this._input.get()\n  }\n  ref (key, object) {\n    let set = this.refs[key] || (this.refs[key] = new Set())\n    set.add(object)\n  }\n  unref (key, object) {\n    let set = this.refs[key]\n    if (!set) return\n    set.delete(object)\n  }\n  _setupInteractivity () {\n    let mouse = null\n    let touches = []\n    let onMouse = e => {\n      mouse = e\n    }\n    let onUpdateMouse = e => {\n      mouse = mouse && e\n    }\n    let onNoMouse = () => {\n      mouse = null\n    }\n    let onTouch = e => {\n      touches = [].slice.call(e.touches)\n    }\n    let view = this.view\n    let width = this._skin.width\n    let height = this._skin.height\n    view.addEventListener('mousedown', onMouse, false)\n    view.addEventListener('mousemove', onUpdateMouse, false)\n    view.addEventListener('mouseup', onNoMouse, false)\n    view.addEventListener('touchstart', onTouch, false)\n    view.addEventListener('touchmove', onTouch, false)\n    view.addEventListener('touchend', onTouch, false)\n    this._teardownInteractivity = () => {\n      view.removeEventListener('mousedown', onMouse, false)\n      view.removeEventListener('mousemove', onUpdateMouse, false)\n      view.removeEventListener('mouseup', onNoMouse, false)\n      view.removeEventListener('touchstart', onTouch, false)\n      view.removeEventListener('touchmove', onTouch, false)\n      view.removeEventListener('touchend', onTouch, false)\n    }\n    this._input = {\n      get: () => {\n        let output = []\n        let rect = this.view.getBoundingClientRect()\n        if (mouse) {\n          output.push(point('mouse', mouse, rect))\n        }\n        for (let i = 0; i < touches.length; i++) {\n          let touch = touches[i]\n          output.push(point('touch' + touch.identifier, touch, rect))\n        }\n        return output\n      }\n    }\n    function point (id, p, rect) {\n      return {\n        x: (p.clientX - rect.left) / rect.width * width,\n        y: (p.clientY - rect.top) / rect.height * height,\n        id: id\n      }\n    }\n  }\n}\n\nexport default Context\n","/**\n * A SkinNode is an internal representation of a Skin.\n *\n * Node.compile     :: (compiler, $xml) -> Node\n *\n * To implement:\n *\n * Node#compile     :: (compiler, $xml) -> undefined (side-effect)\n * Node#instantiate :: (instantiator)   -> PIXI.DisplayObject\n */\nexport class SkinNode {\n  static compile (compiler, $el) {\n    let node = new this()\n    node.compile(compiler, $el)\n    return node\n  }\n}\n\nexport default SkinNode\n","import Callbacks from 'bemuse/utils/callbacks'\n\nexport class Instance {\n  constructor (options) {\n    this._context = options.context\n    this._object = options.object\n    this._children = options.children\n    this._bindings = []\n    this._concerns = []\n    this.onData = new Callbacks(options.onData)\n    this.onDestroy = new Callbacks(options.onDestroy)\n    if (options.bindings) {\n      for (let binding of options.bindings) {\n        this.bind(...binding)\n      }\n    }\n    if (options.concerns) {\n      for (let concern of options.concerns) {\n        this._concerns.push(concern.instantiate(this._context, this))\n      }\n    }\n    if (options.children) {\n      for (let children of options.children) {\n        this._concerns.push(children.instantiate(this._context, this._object))\n      }\n    }\n    if (options.onCreate) {\n      new Callbacks(options.onCreate).call()\n    }\n    if (options.parent) {\n      this.attachTo(options.parent)\n    }\n  }\n  bind (...pipeline) {\n    let sideEffect = onChange(pipeline.pop())\n    if (pipeline.length === 1 && pipeline[0].constant) {\n      // optimize: don't add binding when expression is constant --\n      // just do it once\n      sideEffect(pipeline[0]())\n    } else {\n      this._bindings.push(value => {\n        for (var i = 0; i < pipeline.length; i++) {\n          value = pipeline[i](value)\n        }\n        sideEffect(value)\n      })\n    }\n  }\n  attachTo (parent) {\n    this._parent = parent\n    this._parent.addChild(this._object)\n  }\n  detach () {\n    if (this._parent) {\n      this._parent.removeChild(this._object)\n      this._parent = null\n    }\n  }\n  push (value) {\n    var i\n    for (i = 0; i < this._bindings.length; i++) {\n      this._bindings[i](value)\n    }\n    for (i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].push(value)\n    }\n    this.onData.call(value)\n  }\n  destroy () {\n    this.detach()\n    for (var i = 0; i < this._concerns.length; i++) {\n      this._concerns[i].destroy()\n    }\n    this.onDestroy.call()\n    this._concerns = null\n    this._bindings = null\n    this._parent = null\n    this._object = null\n  }\n  get object () {\n    return this._object\n  }\n  get parent () {\n    return this._parent\n  }\n}\n\nfunction onChange (f) {\n  let value\n  return function receiveNewValue (v) {\n    if (value !== v) {\n      value = v\n      f(v)\n    }\n  }\n}\n\nexport default Instance\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from '../lib/base'\nimport Instance from '../lib/instance'\n\nimport Expression from '../../expression'\nimport Animation from './animation'\n\n// Numeric properties that may be interpreted as expressions.\nlet properties = [\n  { name: 'x', default: '0', apply: (obj, v) => (obj.x = v) },\n  { name: 'y', default: '0', apply: (obj, v) => (obj.y = v) },\n  { name: 'scale-x', default: '1', apply: (obj, v) => (obj.scale.x = v) },\n  { name: 'scale-y', default: '1', apply: (obj, v) => (obj.scale.y = v) },\n  { name: 'alpha', default: '1', apply: (obj, v) => (obj.alpha = v) },\n  { name: 'width', apply: (obj, v) => (obj.width = v) },\n  { name: 'height', apply: (obj, v) => (obj.height = v) },\n  { name: 'visible', apply: (obj, v) => (obj.visible = v) }\n]\n\nexport class DisplayObject extends SkinNode {\n  compile (compiler, $el) {\n    this._animation = Animation.compile(compiler, $el)\n    this._bindings = []\n    for (let property of properties) {\n      let code = $el.attr(property.name) || property.default\n      if (!code) continue\n      let expression = new Expression(code)\n      let getter = this._animation.prop(property.name, expression)\n      this._bindings.push({\n        getter: getter,\n        apply: property.apply\n      })\n    }\n    this.blendMode = parseBlendMode($el.attr('blend') || 'normal')\n    this.ref = $el.attr('ref') || null\n  }\n  instantiate (context, subject) {\n    var object = subject.object\n    var bindings = []\n    var onDestroy = null\n    object.blendMode = this.blendMode\n    for (var i = 0; i < this._bindings.length; i++) {\n      var binding = this._bindings[i]\n      bindings.push([binding.getter, binding.apply.bind(null, object)])\n    }\n    if (this.ref) {\n      context.ref(this.ref, object)\n      onDestroy = () => context.unref(this.ref, object)\n    }\n    return new Instance({\n      bindings: bindings,\n      onDestroy: onDestroy\n    })\n  }\n}\n\nfunction parseBlendMode (text) {\n  if (text === 'normal') return PIXI.BLEND_MODES.NORMAL\n  if (text === 'screen') return PIXI.BLEND_MODES.SCREEN\n  throw new Error('Invalid blend mode: ' + text)\n}\n\nexport default DisplayObject\n","import * as PIXI from 'pixi.js'\n\nexport function parseFrame (text) {\n  let m = text.match(/^(\\d+)x(\\d+)\\+(\\d+)\\+(\\d+)$/)\n  if (!m) return null\n  return new PIXI.Rectangle(+m[3], +m[4], +m[1], +m[2])\n}\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\n\nimport DisplayObject from './concerns/display-object'\nimport { parseFrame } from './lib/utils'\n\nexport class Mask {\n  constructor (frame) {\n    this._frame = frame\n  }\n  instantiate (context, subject) {\n    let mask = new PIXI.Graphics()\n    mask.beginFill()\n    mask.drawShape(this._frame)\n    mask.endFill()\n    subject.object.mask = mask\n    return new Instance({\n      context: context,\n      object: mask,\n      parent: subject.object\n    })\n  }\n}\n\nexport class GroupNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.display = DisplayObject.compile(compiler, $el)\n    let maskFrame = parseFrame($el.attr('mask') || '')\n    if (maskFrame) this.mask = new Mask(maskFrame)\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let concerns = [this.display]\n    if (this.mask) {\n      concerns.push(this.mask)\n    }\n    return new Instance({\n      context: context,\n      object: object,\n      parent: container,\n      concerns: concerns,\n      children: this.children\n    })\n  }\n}\n\nexport default GroupNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport Expression from '../expression'\n\nexport class IfNode extends SkinNode {\n  compile (compiler, $el) {\n    let children = compiler.compileChildren($el)\n    if (children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + children.length + ' found'\n      )\n    }\n    this.child = children[0]\n    this.key = new Expression($el.attr('key'))\n    this.value = String($el.attr('value'))\n  }\n  instantiate (context, container) {\n    let object = new PIXI.Container()\n    let expr = this.key\n    let value = this.value\n    let childNode = this.child\n    let child = null\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      onData: data => {\n        if (String(expr(data)) === value) {\n          if (child === null) {\n            child = childNode.instantiate(context, object)\n          }\n          child.push(data)\n        } else {\n          if (child !== null) {\n            child.destroy()\n            child = null\n          }\n        }\n      }\n    })\n  }\n}\n\nexport default IfNode\n","import * as PIXI from 'pixi.js'\n\nimport Expression from '../expression'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nfunction ChildManager (expr, child, poolSize) {\n  return {\n    instantiate (context, subject) {\n      let instances = new Map()\n      let pool = []\n      initPool()\n      return new Instance({\n        context: context,\n        onData: data => {\n          update(expr(data))\n        }\n      })\n      function initPool () {\n        var instance\n        for (var i = 0; i < poolSize; i++) {\n          instance = child.instantiate(context, subject.object)\n          instance.detach()\n          pool.push(instance)\n        }\n      }\n      function update (array) {\n        var unused = new Set(instances.keys())\n        var key\n        var item\n        var instance\n        if (!array) array = []\n        for (var i = 0; i < array.length; i++) {\n          item = array[i]\n          key = item.key\n          if (instances.has(key)) {\n            instance = instances.get(key)\n          } else {\n            instance = createInstance()\n            instances.set(key, instance)\n          }\n          instance.push(item)\n          unused.delete(key)\n        }\n        for (key of unused) {\n          instance = instances.get(key)\n          instance.detach()\n          instances.delete(key)\n          pool.push(instance)\n        }\n      }\n      function createInstance () {\n        var instance = pool.pop()\n        if (instance) {\n          instance.attachTo(subject.object)\n        } else {\n          instance = child.instantiate(context, subject.object)\n        }\n        return instance\n      }\n    }\n  }\n}\n\nexport class ObjectNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    if (this.children.length !== 1) {\n      throw new Error(\n        'Expected exactly 1 children, ' + this.children.length + ' given'\n      )\n    }\n    this.pool = +$el.attr('pool') || 1\n    this.key = new Expression($el.attr('key'))\n  }\n  instantiate (context, container) {\n    let batch = new PIXI.ParticleContainer(null, {\n      position: true,\n      alpha: true\n    })\n    let manager = new ChildManager(this.key, this.children[0], this.pool)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: batch,\n      concerns: [manager]\n    })\n  }\n}\n\nexport default ObjectNode\n","import * as PIXI from 'pixi.js'\n\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\n\nexport class SkinRootNode extends SkinNode {\n  compile (compiler, $el) {\n    this.children = compiler.compileChildren($el)\n    this.width = +$el.attr('width')\n    this.height = +$el.attr('height')\n    this.data = $el.data()\n  }\n  instantiate (context) {\n    let stage = new PIXI.Stage(0x090807)\n    return new Instance({\n      context: context,\n      object: stage,\n      children: this.children\n    })\n  }\n}\n\nexport default SkinRootNode\n","import * as PIXI from 'pixi.js'\n\nimport DisplayObject from './concerns/display-object'\nimport Instance from './lib/instance'\nimport SkinNode from './lib/base'\nimport { parseFrame } from './lib/utils'\n\nexport class SpriteNode extends SkinNode {\n  compile (compiler, $el) {\n    this.url = compiler.resources.get($el.attr('image'))\n    this.display = DisplayObject.compile(compiler, $el)\n    this.frame = parseFrame($el.attr('frame') || '')\n    this.anchorX = +$el.attr('anchor-x') || 0\n    this.anchorY = +$el.attr('anchor-y') || 0\n  }\n  instantiate (context, container) {\n    let sprite = new PIXI.Sprite(this.getTexture())\n    sprite.anchor.x = this.anchorX\n    sprite.anchor.y = this.anchorY\n    return new Instance({\n      context: context,\n      object: sprite,\n      parent: container,\n      concerns: [this.display]\n    })\n  }\n  getTexture () {\n    if (this._texture) return this._texture\n    let scaleMode = PIXI.SCALE_MODES.NEAREST\n    let base = PIXI.BaseTexture.fromImage(this.url, undefined, scaleMode)\n    let texture = new PIXI.Texture(base, this.frame)\n    this._texture = texture\n    return texture\n  }\n}\n\nexport default SpriteNode\n","import * as PIXI from 'pixi.js'\n\nimport SkinNode from './lib/base'\nimport Instance from './lib/instance'\nimport DisplayObject from './concerns/display-object'\nimport Expression from '../expression'\n\nexport class TextNode extends SkinNode {\n  compile (compiler, $el) {\n    this.font = $el.attr('font')\n    this.text = $el.attr('text')\n    this.data = new Expression($el.attr('data') || '0')\n    this.display = DisplayObject.compile(compiler, $el)\n    this.ttf = !$el.attr('font-src')\n    this.fill = $el.attr('fill')\n    this.align =\n      $el.attr('align') === 'left' ? 0 : $el.attr('align') === 'right' ? 1 : 0.5\n  }\n  instantiate (context, container) {\n    let text\n    if (this.ttf) {\n      text = new PIXI.Text(this.text, {\n        font: this.font,\n        fill: this.fill\n      })\n    } else {\n      text = new PIXI.extras.BitmapText(this.text, { font: this.font })\n    }\n    let object = new PIXI.Container()\n    object.addChild(text)\n    return new Instance({\n      context: context,\n      parent: container,\n      object: object,\n      concerns: [this.display],\n      bindings: [\n        [\n          this.data,\n          v => {\n            text.text = this.text.replace('%s', v)\n            text.updateText()\n            text.x = text.width * -this.align\n          }\n        ]\n      ]\n    })\n  }\n}\n\nexport default TextNode\n","import $ from 'jquery'\nimport debug from 'debug'\n\nimport GroupNode from './nodes/group'\nimport IfNode from './nodes/if'\nimport ObjectNode from './nodes/object'\nimport SkinRootNode from './nodes/skin-root'\nimport SpriteNode from './nodes/sprite'\nimport TextNode from './nodes/text'\n\nconst log = debug('scintillator:compiler')\n\nlet NODES = {\n  skin: SkinRootNode,\n  sprite: SpriteNode,\n  group: GroupNode,\n  object: ObjectNode,\n  text: TextNode,\n  if: IfNode\n}\n\n/**\n * A Compiler compiles the $xml theme file into SkinNode.\n */\nclass Compiler {\n  constructor (env) {\n    Object.assign(this, env)\n    this._defs = new Map()\n  }\n  compile ($el) {\n    let nodeName = $el[0].nodeName\n    log('compiling', $el[0])\n    let Node = Compiler.getNodeClass(nodeName)\n    if (!Node) throw new Error('Invalid node name: ' + nodeName)\n    return Node.compile(this, $el)\n  }\n  compileChildren ($el) {\n    let output = []\n    for (let child of Array.from($el.children())) {\n      let nodeName = child.nodeName\n      if (nodeName === 'defs') {\n        this.compileDefs($(child))\n      } else if (nodeName === 'use') {\n        output.push(this.getDef(child.getAttribute('def')))\n      } else {\n        let Node = Compiler.getNodeClass(nodeName)\n        if (Node) output.push(this.compile($(child)))\n      }\n    }\n    return output\n  }\n  compileDefs ($el) {\n    for (let child of Array.from($el.children())) {\n      let id = child.getAttribute('id')\n      if (!id) throw new Error('A def should have an id: ' + child.nodeName)\n      this._defs.set(id, this.compile($(child)))\n    }\n  }\n  getDef (id) {\n    let node = this._defs.get(id)\n    if (!node) throw new Error('Cannot find def: ' + id)\n    return node\n  }\n\n  static getNodeClass (nodeName) {\n    return NODES[nodeName]\n  }\n}\n\nexport default Compiler\n","import _ from 'lodash'\n\n/**\n * The resources class contains a mapping from an image \"src\" to the resolved\n * image \"url.\"\n */\nexport class Resources {\n  constructor () {\n    this._map = {}\n  }\n  add (src, url) {\n    this._map[src] = url\n  }\n  get (src) {\n    if (!(src in this._map)) throw new Error('Not registered: ' + src)\n    return this._map[src]\n  }\n  get urls () {\n    return _.values(this._map)\n  }\n}\n\nexport default Resources\n","import * as PIXI from 'pixi.js'\nimport $ from 'jquery'\nimport co from 'co'\nimport debug from 'debug'\nimport url from 'url'\nimport { PERCENTAGE_FORMATTER } from 'bemuse/progress/formatters'\n\nimport Compiler from './compiler'\nimport Resources from './resources'\n\nconst log = debug('scintillator:loader')\n\nexport function load (xmlPath, progress) {\n  return co(function * () {\n    log('load XML from %s', xmlPath)\n    let $xml = yield loadXml(xmlPath)\n\n    // scan all images\n    let resources = new Resources()\n    let paths = new Set()\n    for (let element of Array.from($xml.find('[image]'))) {\n      paths.add($(element).attr('image'))\n    }\n    for (let element of Array.from($xml.find('[font-src]'))) {\n      paths.add($(element).attr('font-src'))\n    }\n    for (let path of paths) {\n      let assetUrl = url.resolve(xmlPath, path)\n      resources.add(path, assetUrl)\n    }\n\n    // load all images + progress reporting\n    yield loadResources(resources, progress)\n\n    // compile the skin\n    log('compiling')\n    let skin = new Compiler({ resources }).compile($xml)\n\n    return skin\n  })\n}\n\nfunction loadXml (xmlUrl) {\n  return Promise.resolve($.ajax({ url: xmlUrl, dataType: 'xml' })).then(xml =>\n    $(xml.documentElement)\n  )\n}\n\nfunction loadResources (resources, progress) {\n  log('loading resources')\n  return new Promise(function (resolve) {\n    if (resources.urls.length === 0) return resolve()\n    let loader = new PIXI.loaders.Loader()\n    for (let url of resources.urls) {\n      loader.add(url, url)\n    }\n    loader.once('complete', function () {\n      log('resources finished loading')\n      resolve()\n    })\n    if (progress) {\n      progress.formatter = PERCENTAGE_FORMATTER\n      loader.once('complete', function () {\n        progress.report(100, 100)\n      })\n      loader.on('progress', function () {\n        progress.report(loader.progress, 100)\n      })\n    }\n    loader.load()\n  })\n}\n","import { Context } from './context'\nimport { load } from './loader'\n\nexport { load, Context }\n\nexport function getSkinUrl ({ displayMode } = {}) {\n  if (displayMode === 'touch3d') {\n    return '/skins/default/skin_touch3d.xml'\n  } else {\n    if (window.innerWidth < window.innerHeight) {\n      return '/skins/default/skin_touch.xml'\n    } else {\n      return '/skins/default/skin_screen.xml'\n    }\n  }\n}\n"],"sourceRoot":""}